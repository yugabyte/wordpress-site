@charset "UTF-8";.grid,.grid.extra_wide{max-width:1360px}.col-1-1,.grid{width:100%}#page,html{height:100%}.content_section.grad-dkpurple-blue,.content_section.grad-dkpurple-blue-flat{filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#000041', endColorstr='#2b59c3', GradientType=1 )}.wysiwyg .special_ol>li:first-child,ol>li:first-child{counter-reset:item}.clearfix:after,.slick-track:after{clear:both}.ss_biz_tech_results .results.split>li,.to_cols_3>li{break-inside:avoid}.has-white-color{color:#fff}.has-white-background-color{background-color:#fff}.has-offwhite-color{color:#eef1fa}.has-offwhite-background-color{background-color:#eef1fa}.has-gray_lightest-color{color:#f2f3f8}.has-gray_lightest-background-color{background-color:#f2f3f8}.has-gray_light-color{color:#e8e9f3}.has-gray_light-background-color{background-color:#e8e9f3}.has-gray-color{color:#707070}.has-gray-background-color{background-color:#707070}.has-gray_dark-color{color:#4d4647}.has-gray_dark-background-color{background-color:#4d4647}.has-nearlyblack-color{color:#141920}.has-nearlyblack-background-color{background-color:#141920}.has-black-color{color:#000}.has-black-background-color{background-color:#000}.has-purple-color{color:#332a66}.has-purple-background-color{background-color:#332a66}.has-purple_dark-color{color:#000041}.has-purple_dark-background-color{background-color:#000041}.has-orange-color{color:#ff6e42}.has-orange-background-color{background-color:#ff6e42}.has-green-color{color:#4ecd5f}.has-green-background-color{background-color:#4ecd5f}.has-blue-color{color:#2b59c3}.has-blue-background-color{background-color:#2b59c3}@font-face{font-family:"Hurme Geometric Sans_1 W01 Lt";src:url(../../fonts/5512873/3d08d9b7-c232-48fe-a7d6-2e237c86004a.woff2) format("woff2"),url(../../fonts/5512873/87da7095-d100-402f-ae33-579646446093.woff) format("woff")}.grid:after,[class*=grid],[class*=col-],[class*=mobile-]{box-sizing:border-box}[class*=col-]{float:left;min-height:1px;padding-right:20px}.grid-pad,[class*=col-] [class*=col-]:last-child{padding-right:0}.grid{min-width:708px;margin:0 auto}.grid.full{max-width:none}.grid:after{content:"";display:table;clear:both}.grid-pad{padding-top:0;padding-left:20px}.push-right{float:right!important}.col-2-3,.col-8-12{width:66.66%}.col-1-2,.col-6-12{width:50%}.col-1-3,.col-4-12{width:33.33%}.col-1-4,.col-3-12{width:25%}.col-1-5{width:20%}.col-1-6,.col-2-12{width:16.667%}.col-1-7{width:14.28%}.col-1-8{width:12.5%}.col-1-9{width:11.1%}.col-1-10{width:10%}.col-1-11{width:9.09%}.col-1-12{width:8.33%}.col-11-12{width:91.66%}.col-10-12{width:83.333%}.col-9-12{width:75%}.col-5-12{width:41.66%}.col-7-12{width:58.33%}.push-2-3,.push-8-12{margin-left:66.66%}.push-1-2,.push-6-12{margin-left:50%}.push-5-12{margin-left:41.66%}.push-1-3,.push-4-12{margin-left:33.33%}.push-1-4,.push-3-12{margin-left:25%}.push-1-5{margin-left:20%}.push-1-6,.push-2-12{margin-left:16.667%}.push-1-7{margin-left:14.28%}.push-1-8{margin-left:12.5%}.push-1-9{margin-left:11.1%}.push-1-10{margin-left:10%}.push-1-11{margin-left:9.09%}.push-1-12{margin-left:8.33%}.pull-2-3,.pull-8-12{margin-left:-66.66%}.pull-1-2,.pull-6-12{margin-left:-50%}.pull-5-12{margin-left:-41.66%}.pull-1-3,.pull-4-12{margin-left:-33.33%}.pull-1-4,.pull-3-12{margin-left:-25%}.pull-1-5{margin-left:-20%}.pull-1-6,.pull-2-12{margin-left:-16.667%}.pull-1-7{margin-left:-14.28%}.pull-1-8{margin-left:-12.5%}.pull-1-9{margin-left:-11.1%}.pull-1-10{margin-left:-10%}.pull-1-11{margin-left:-9.09%}.pull-1-12{margin-left:-8.33%}@media handheld,only screen and (max-width:767px){.grid{width:100%;min-width:0;margin-left:0;margin-right:0;padding-left:0;padding-right:0}.site-footer .grid{padding-left:10px;padding-right:10px}.site-footer .grid .grid{padding:0 20px}.grid.extra_wide{max-width:none;padding:0 40px}.site-header .grid.extra_wide{padding:0 10px}.site-footer .grid.extra_wide{padding:0}.grid.full{max-width:none;padding:0}[class*=col-]{width:auto;float:none;margin:0;padding-left:0;padding-right:0}[class*=col-] [class*=col-]{padding-right:0}[class*=mobile-col-]{float:left;margin:0;padding-left:0;padding-right:10px;padding-bottom:0}.mobile-col-1-1{width:100%}.mobile-col-2-3,.mobile-col-8-12{width:66.66%}.mobile-col-1-2,.mobile-col-6-12{width:50%}.mobile-col-1-3,.mobile-col-4-12{width:33.33%}.mobile-col-1-4,.mobile-col-3-12{width:25%}.mobile-col-1-5{width:20%}.mobile-col-1-6,.mobile-col-2-12{width:16.667%}.mobile-col-1-7{width:14.28%}.mobile-col-1-8{width:12.5%}.mobile-col-1-9{width:11.1%}.mobile-col-1-10{width:10%}.mobile-col-1-11{width:9.09%}.mobile-col-1-12{width:8.33%}.mobile-col-11-12{width:91.66%}.mobile-col-10-12{width:83.333%}.mobile-col-9-12{width:75%}.mobile-col-5-12{width:41.66%}.mobile-col-7-12{width:58.33%}}@media only screen and (min-width:768px) and (max-width:1024px){.grid,.tablet-col-1-1{width:100%}.grid{min-width:0;margin-left:0;margin-right:0;padding-left:20px;padding-right:10px}.grid.even_pad{padding-right:20px}.grid.full{max-width:none;padding:0}.site-footer .grid,.site-header .grid{padding:0}.tablet-push-left{float:left!important}[class*=tablet-col-]{float:left;margin:0;padding-left:0;padding-right:10px;padding-bottom:0}.even_pad [class*=tablet-col-]{padding-right:0}#footer_cta [class*=tablet-col-],.hero [class*=tablet-col-]{float:none;margin:0 auto}.tablet-col-2-3,.tablet-col-8-12{width:66.66%}.tablet-col-1-2,.tablet-col-6-12{width:50%}.tablet-col-1-3,.tablet-col-4-12{width:33.33%}.tablet-col-1-4,.tablet-col-3-12{width:25%}.tablet-col-1-5{width:20%}.tablet-col-1-6,.tablet-col-2-12{width:16.667%}.tablet-col-1-7{width:14.28%}.tablet-col-1-8{width:12.5%}.tablet-col-1-9{width:11.1%}.tablet-col-1-10{width:10%}.tablet-col-1-11{width:9.09%}.tablet-col-1-12{width:8.33%}.tablet-col-11-12{width:91.66%}.tablet-col-10-12{width:83.333%}.tablet-col-9-12{width:75%}.tablet-col-5-12{width:41.66%}.tablet-col-7-12{width:58.33%}.tablet-push-2-3,.tablet-push-8-12{margin-left:66.66%}.tablet-push-1-2,.tablet-push-6-12{margin-left:50%}.tablet-push-5-12{margin-left:41.66%}.tablet-push-1-3,.tablet-push-4-12{margin-left:33.33%}.tablet-push-1-4,.tablet-push-3-12{margin-left:25%}.tablet-push-1-5{margin-left:20%}.tablet-push-1-6,.tablet-push-2-12{margin-left:16.667%}.tablet-push-1-7{margin-left:14.28%}.tablet-push-1-8{margin-left:12.5%}.tablet-push-1-9{margin-left:11.1%}.tablet-push-1-10{margin-left:10%}.tablet-push-1-11{margin-left:9.09%}.tablet-push-1-12{margin-left:8.33%}}@media only screen and (min-width:1025px) and (max-width:1360px){.grid{width:100%;min-width:0;margin-left:0;margin-right:0;padding-left:20px;padding-right:10px}.grid.full{max-width:none;padding:0}.grid.even_pad{padding-right:20px}.site-header .grid{padding-left:0;padding-right:0;margin:0 auto}.site-footer .grid{padding-left:20px;padding-right:20px}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,p.cite,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}#content,#page{margin:0 auto;position:relative}#alm-filters-resourcessearchfilter .alm-filter--textfield,body{font-family:"Source Sans Pro",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}body{height:auto!important;min-height:100%;font-weight:400;font-size:18px;line-height:1.45em;color:#000;-webkit-text-size-adjust:100%;background:#fff}#page{width:100%}#main{width:100%;margin-top:81px;background:#fff;transition:margin .3s}#primary{float:left;width:50%;box-sizing:border-box;padding:0 30px 0 0}#primary.full{float:none;width:100%;border:none;padding:0}.archive #primary,.search #primary,.single-post #primary{width:72%;padding:0}#secondary{float:right;width:50%;padding:0 70px;box-sizing:border-box}.archive #secondary,.search #secondary,.single-post #secondary{width:28%;padding:0 50px}#content{width:100%;background:0 0;box-sizing:border-box;z-index:10;overflow:hidden}#content>article>.gform_wrapper{padding-top:0;width:calc(100% - 160px);max-width:1200px;margin:0 auto 80px}.single-post #content>article{padding-left:60px}.content_section{position:relative;width:100%;text-align:left}.content_section.content_wrapper{z-index:10}.content_section.light-blue{background-color:#eef1fa}.content_section.gray_light{background-color:#e8e9f3}.content_section.light-gray{background-color:#f2f3f8}.content_section.blue{background-color:#2b59c3}.content_section.orange{background-color:#ff6e42}.content_section.purple{background-color:#332a66}.content_section.gray-light{background-color:#e8e9f3}.content_section.purple-dark{background-color:#000041}.content_section.white{background-color:#fff}.content_section.grad-dkpurple-blue{background:#000041;background:linear-gradient(45deg,#000041 0,#2b59c3 100%)}.content_section.grad-dkpurple-blue-flat{background:#000041;background:linear-gradient(90deg,#000041 0,#2b59c3 100%)}.content_section.invert>*{color:#fff}.content_section_inner{width:calc(100% - 80px);max-width:1360px;margin:0 auto;padding:60px 0;text-align:left;box-sizing:border-box;background-color:transparent}.content_section_inner.full{width:100%;max-width:none}.content_section_inner.narrow{width:75%;max-width:calc(1360px * .75)}.content_section_inner.narrower{width:65%;max-width:calc(1360px * .65)}.wysiwyg{text-align:left}.wysiwyg.narrow{width:80%;margin:0 auto}.wysiwyg.narrower{width:65%;margin:0 auto}@media screen and (max-width:767px){#content>article>.gform_wrapper{width:calc(100% - 40px);margin:0 auto 40px}#main,#primary{margin:0}.single-post #content>article{padding-left:0}#primary{float:none;width:100%;padding:40px 0}#secondary,.archive #primary,.archive #secondary,.search #primary,.search #secondary,.single-post #primary,.single-post #secondary{padding:0;width:100%}#secondary{float:none;margin-top:0}.content_section_inner{padding-top:60px;padding-bottom:30px}.content_section_inner,.content_section_inner.narrow,.content_section_inner.narrower{width:100%;padding-left:20px;padding-right:20px}}@media screen and (max-width:480px){.content_section_inner,.content_section_inner.narrow,.content_section_inner.narrower{width:100%;padding-left:20px;padding-right:20px}}@media screen and (min-width:768px) and (max-width:1024px){.single-post #content>article{padding-left:0}#secondary{width:50%;padding:0 40px}.archive #secondary,.search #secondary,.single-post #secondary{width:28%;padding:0 0 0 30px}}@media screen and (min-width:768px) and (max-width:1360px){.content_section_inner.narrow,.content_section_inner.narrower,.wysiwyg.narrow,.wysiwyg.narrower{width:85%}}@media screen and (max-width:1024px){body.mobile_nav_open{overflow:hidden}#site-inner{position:relative}}#mobile_nav_toggle{display:none;position:absolute;right:0;top:5px;width:70px;height:50px;margin:0 auto;cursor:pointer;outline:0;background:0 0;z-index:10010;transition:all .3s}#mobile_nav_toggle.open{top:5px}#mobile_nav_toggle .inner{position:absolute;right:0;top:16px;width:24px;height:21px;transform:rotate(0);transition:.5s ease-in-out}#mobile_nav_toggle span{display:block;position:absolute;height:2px;width:100%;background:#fff;opacity:1;left:0;transform:rotate(0);transition:.25s ease-in-out}.header_right,.site-header,.site-title{transition:all .3s linear}#mobile_nav_toggle.open span{background:#fff}#mobile_nav_toggle span:nth-child(1){top:0}#mobile_nav_toggle span:nth-child(2),#mobile_nav_toggle span:nth-child(3){top:9px}#mobile_nav_toggle span:nth-child(4){top:18px}#mobile_nav_toggle.open span:nth-child(1),#mobile_nav_toggle.open span:nth-child(4){top:9px;width:0%;left:50%}#mobile_nav_toggle.open span:nth-child(2){transform:rotate(45deg)}#mobile_nav_toggle.open span:nth-child(3){transform:rotate(-45deg)}#mobile_nav_tray,.site-header{position:fixed;width:100%;background:#000041}#mobile_nav_tray{display:none;top:60px;bottom:0;height:calc(100vh - 60px);padding:20px 20px 140px;box-sizing:border-box;overflow:scroll;z-index:10000}.site-header{left:0;top:0;border-bottom:1px solid #fff;height:80px;z-index:1000}.site-header .grid-pad{padding-top:0}.site-header.scrolling{height:80px}.header_inner{position:relative;width:calc(100% - 80px);height:100%;margin:0 auto;box-sizing:border-box}.scrolling .site-title,.site-title{margin:26px 0 0}.site-title{float:left;display:block;width:160px;max-width:100%;height:auto;z-index:1000;box-sizing:border-box;vertical-align:top}.site-title>a,.site-title>a img{display:block;width:100%}.site-title>a:hover{text-decoration:none}.header_right{margin:0;z-index:1000}.home .scrolling .header_right,.scrolling .header_right{margin-top:0}@media only screen and (max-width:990px){#mobile_nav_toggle{display:block}}@media only screen and (min-width:768px) and (max-width:990px){#mobile_nav_toggle{top:15px}#mobile_nav_tray{top:80px;height:calc(100vh - 80px);padding:20px 40px 140px}}@media only screen and (max-width:767px){.site-header{position:relative;height:60px}.header_inner{width:calc(100% - 40px)}.scrolling .site-title,.site-title{margin-top:17px}}.site-footer{position:relative;background:#fff}.site-footer .logo{display:block;width:calc(100% - 60px);max-width:200px;height:auto;margin:0 0 40px;z-index:1000;box-sizing:border-box;vertical-align:middle}.site-footer .logo img{display:block;width:100%}.site-footer .footer_inner{position:relative;width:calc(100% - 80px);height:100%;margin:0 auto;padding:60px 0;box-sizing:border-box}.site-footer .footer_inner .grid{min-width:0}.site-footer #menu-footer-nav{display:-ms-flexbox;display:flex;-ms-flex-flow:row;flex-flow:row}.site-footer #menu-footer-nav>li{display:inline-block;width:100%;box-sizing:border-box;padding-right:30px}.site-footer #menu-footer-nav>li a{display:block;padding:10px 0;color:#000;font-size:1em;font-weight:400;line-height:1.45em;text-decoration:none;transition:all .3s}.site-footer #menu-footer-nav>li a:hover{color:#ff6e42}.site-footer #menu-footer-nav>li>a{padding:0 0 30px;line-height:1.1em;font-size:1.22em;font-weight:600;text-transform:uppercase;letter-spacing:2px}.site-footer #menu-footer-nav>li.nolink>a,.site-footer #menu-footer-nav>li.nolink>a:hover{color:#000;cursor:default}.site-footer #menu-footer-nav li li.current-menu-ancestor>a,.site-footer #menu-footer-nav li li.current-menu-item>a,.site-footer #menu-footer-nav li li.current-page-ancestor>a,.site-footer #menu-footer-nav li li.current-post-ancestor>a,.site-footer #menu-footer-nav li li:focus>a,.site-footer #menu-footer-nav li li:hover>a{color:#ff6e42}.site-footer blockquote,.site-footer cite,.site-footer p{color:#000}.site-footer blockquote.copyright,.site-footer cite.copyright,.site-footer p.copyright{display:inline-block;margin:0;font-size:.9em;vertical-align:middle;line-height:1.45em;color:#332a66}.site-footer blockquote.copyright a,.site-footer cite.copyright a,.site-footer p.copyright a{color:#332a66}.site-footer blockquote.copyright a:hover,.site-footer cite.copyright a:hover,.site-footer p.copyright a:hover{color:#ff6e42}.site-footer blockquote a,.site-footer cite a,.site-footer p a{color:#000}.site-footer blockquote a:hover,.site-footer cite a:hover,.site-footer p a:hover{color:#ff6e42}.site-footer .social_cont{margin:0 0 40px}.site-footer .social{display:inline-block;position:relative;width:38px;height:38px;margin:0 0 0 10px;border:2px solid #000041;border-radius:50px;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#000}.site-footer .social.first{margin-left:0}.site-footer .social.gh{background:#fff}.site-footer .social.gh svg{top:17px}.site-footer .social.gh svg .icon,.site-footer .social.gh:hover svg .icon{fill:#fff}.site-footer .social.gh:hover svg .bg{fill:#ff6e42}.site-footer .social svg{display:block;position:absolute;left:50%;top:50%;margin:-20px 0 0;height:40px;transition:all .2s;transform:translateX(-50%)}.site-footer .social svg .icon{transition:all .3s;fill:#000041}.site-footer .social svg .bg{transition:all .3s}.site-footer .social:hover{border-color:#ff6e42}.site-footer .social:hover svg .icon{fill:#ff6e42}@media only screen and (max-width:767px){.site-footer .logo{margin:0 auto 40px}.site-footer .footer_inner{width:calc(100% - 40px)}.site-footer #menu-footer-nav{display:block}.site-footer #menu-footer-nav>li{display:block;padding:0;text-align:center}.site-footer #menu-footer-nav .sub-menu{margin:0 0 40px}.site-footer #menu-footer-nav li li a{padding:3px 0}.site-footer blockquote.copyright,.site-footer cite.copyright,.site-footer p.copyright{display:block;text-align:center}.site-footer .social_cont{margin:0 auto 40px;text-align:center}}@media screen and (min-width:768px) and (max-width:1024px){.site-footer .social_cont{margin:0 20px 40px 0}.site-footer .social{width:28px;height:28px;margin:0 0 10px 10px}.site-footer .social.gh svg{top:13px}.site-footer .social svg{margin:-12px 0 0;height:24px}}.grid>div.flush_right>.cont{width:calc(100% + 20px);margin-right:-20px}.grid>div.flush_left>.cont{width:calc(100% + 20px);margin-left:-20px}.grid>div.flush_left_right{padding-right:0}.grid>div.flush_left_right>.cont{width:calc(100% + 20px + 20px);margin-left:-20px;margin-right:-20px}.img_cont.wide_content .cont .inner_content{padding:0}.img_cont.wide_content .cont h2{padding-right:60px}.img_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.img_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.img_cont .cont{-ms-flex-order:-1;order:-1}.img_cont .cont .inner_content{padding:0 60px}.img_cont .img{position:relative}.img_cont .img .inner_content{float:right;position:relative;margin:0 auto;width:100%;overflow:hidden;padding-right:60px;box-sizing:border-box;z-index:15}.img_cont .img img{display:block;width:100%}.img_cont .img .zoom_cont{position:relative;width:100%;height:100%;overflow:hidden}.img_cont .img .zoom_cont .hover_prompt{position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,65,.6);background-image:url(../../images/mag-glass-fat-white.svg);background-repeat:no-repeat;background-position:center center;background-size:120px auto;transition:opacity .3s;opacity:0}.img_cont .img .zoom_cont .hover_prompt.kill{display:none}.img_cont .img .zoom_cont img{display:block;width:100%;height:auto}.img_cont .img .zoom_cont.zoomable:hover .hover_prompt{opacity:1}.fw_cta .social_wrap a svg .bg,.team_grid .team .social a svg .bg{opacity:0}.img_cont.flip .cont{-ms-flex-order:1;order:1}@media screen and (max-width:767px){.img_cont .img .inner_content,.img_cont.wide_content .cont h2{padding-right:0}.img_cont .vert_align .grid{display:block}.img_cont .cont .inner_content{padding:0}.img_cont .img{margin:0 0 40px}.img_cont .img img{width:auto;max-width:100%}}@media only screen and (min-width:768px) and (max-width:1024px){.img_cont .img .inner_content,.img_cont.wide_content .cont h2{padding-right:0}.img_cont .cont .inner_content{padding:0}.img_cont .img{margin-bottom:30px}.img_cont .img img{width:auto;max-width:100%}}.cta_buckets .cta{padding:0 40px}.cta_buckets .btn{margin-bottom:0}@media screen and (max-width:767px){.cta_buckets .cta{margin:0 0 60px;padding:0}}@media only screen and (min-width:768px) and (max-width:1024px){.cta_buckets .cta{margin-bottom:60px}}.team_grid .team{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;list-style:none;margin:80px 0 0;margin-left:0!important;padding:0}.team_grid .team .gridblock{width:calc(33.33% - 14px);margin:0 0 60px 20px}.team_grid .team .gridblock:first-of-type{margin-left:0!important}.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:0}.team_grid .team .inner{margin:0;padding:0 10%;text-align:center}.team_grid .team .inner .headshot{display:inline-block;position:relative;height:180px;width:180px;border-radius:100px;overflow:hidden;border:3px solid #ff6e42;margin:0 auto 40px}.team_grid .team .inner .headshot img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.team_grid .team .inner blockquote,.team_grid .team .inner cite,.team_grid .team .inner p{margin:0 0 .75em;color:#141920;font-family:"Source Sans Pro",sans-serif}.team_grid .team .social a{display:inline-block;position:relative;width:32px;height:33px;margin:0 0 0 10px;border:none;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#000}.team_grid .team .social a.first,.team_grid .team .social a:only-of-type{margin-left:0}.team_grid .team .social a svg{display:block;position:absolute;left:50%;top:50%;margin:0;width:32px;height:33px;transition:all .2s;transform:translate(-50%,-50%)}.team_grid .team .social a svg .icon{transition:all .3s;fill:#000041}.team_grid .team .social a:hover svg .icon{fill:#ff6e42}@media screen and (max-width:767px){.team_grid .team .gridblock{width:90%;max-width:480px;margin:0 auto 60px}.team_grid .team .gridblock:first-of-type,.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:auto!important}.team_grid .team .inner .headshot{margin:0 auto 30px}}@media only screen and (min-width:768px) and (max-width:1024px){.team_grid .team .gridblock{width:calc(50% - 20px)}.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:20px}.team_grid .team .gridblock:nth-of-type(2n+1){margin-left:0}}.logo_grid .logos{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;list-style:none;margin:80px 0 60px;margin-left:0!important;padding:0}.logo_grid .logos .gridblock{width:calc(25% - 20px);height:96px;margin:0 0 0 20px}.logo_grid .logos .gridblock:first-of-type{margin-left:0!important}.logo_grid .logos .gridblock:nth-of-type(4n+1){margin-left:0}.logo_grid .logos .inner{display:table;margin:0;width:100%;height:100%;text-align:center}.logo_grid .logos .inner .logo{display:table-cell;position:relative;vertical-align:middle;height:100%;width:90%;margin:0 auto}.logo_grid .logos .inner .logo img{display:inline-block;width:auto;max-height:96px;max-width:100%;margin:0 auto;vertical-align:middle}.logo_grid .logos.three .gridblock{width:calc(25% - 60px);margin:0 0 0 80px}.logo_grid .logos.three .gridblock:nth-of-type(4n+1){margin-left:60px}@media screen and (max-width:767px){.logo_grid .logos{margin:60px 0 30px}.logo_grid .logos .gridblock{width:calc(50% - 40px);margin:20px 0 20px 40px}.logo_grid .logos .gridblock:nth-of-type(2n+1),.logo_grid .logos .gridblock:nth-of-type(4n+1){margin-left:0}.logo_grid .logos.three .gridblock{width:100%;max-width:300px;margin:0 auto 20px}.logo_grid .logos.three .gridblock:first-of-type{margin-left:auto!important}.logo_grid .logos.three .gridblock:nth-of-type(4n+1){margin-left:auto}}@media only screen and (min-width:768px) and (max-width:1024px){.logo_grid .logos.three .gridblock{width:calc(33.3333% - 60px)}}.fw_cta .head_wrap{width:70%;margin:0 auto 60px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.fw_cta .head_wrap h2{-ms-flex:0 0 calc(100% - 400px);flex:0 0 calc(100% - 400px);margin:0 0 40px;padding-left:40px;border-left:2px solid #fff;box-sizing:border-box;text-align:left}.fw_cta .head_wrap .logos_group{-ms-flex:0 0 400px;flex:0 0 400px;text-align:center}.fw_cta .head_wrap .logos_group .logo{display:inline-block;margin:0 70px 40px 0}.fw_cta .head_wrap .logos_group .logo img{display:block;height:auto;max-height:50px}.fw_cta h2{margin:0 0 .75em;text-transform:none;letter-spacing:0;font-weight:600;color:#fff}.fw_cta h2.standard{font-weight:400;color:#ff6e42;text-transform:uppercase;letter-spacing:4px}.fw_cta h2.lined{margin:0 0 1.5em;text-transform:uppercase}.fw_cta h2.lined:after{background:#fff}.fw_cta blockquote,.fw_cta cite,.fw_cta p{margin:0 0 2.25em;color:#fff}.fw_cta blockquote span,.fw_cta cite span,.fw_cta p span{color:#ff6e42}.testimonial *,.testimonial blockquote,.testimonial cite{color:#fff}.fw_cta .social_wrap{margin-bottom:40px}.fw_cta .social_wrap a{display:inline-block;position:relative;width:44px;height:45px;margin:0 0 0 20px;border:none;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#fff}.fw_cta .social_wrap a.first{margin-left:0}.fw_cta .social_wrap a svg{display:block;position:absolute;left:50%;top:50%;margin:0;width:44px;height:45px;transition:all .2s;transform:translate(-50%,-50%)}.fw_cta .social_wrap a svg .icon{transition:all .3s;fill:#fff}.fw_cta .social_wrap a:hover svg .icon{fill:#ff6e42}.fw_cta .ctas_wrap .btn{margin:0 0 10px 40px}.fw_cta .ctas_wrap .btn:first-of-type{margin-left:0}@media screen and (max-width:767px){.fw_cta .head_wrap{width:100%}.fw_cta .head_wrap h2{-ms-flex:1 0 60%;flex:1 0 60%;padding-left:20px;border-left:1px solid #fff}.fw_cta .head_wrap .logos_group{-ms-flex:0 0 40%;flex:0 0 40%}.fw_cta .head_wrap .logos_group .logo{margin:0 30px 30px 0}.fw_cta .head_wrap .logos_group .logo img{max-height:30px}.fw_cta blockquote br,.fw_cta cite br,.fw_cta p br{display:none}.fw_cta .ctas_wrap .btn{margin:0 10px 20px}.fw_cta .ctas_wrap .btn:first-of-type{margin-left:10px}}.logos_cont .cont .inner,.logos_cont .logos .inner_content{padding:0 60px}@media only screen and (min-width:768px) and (max-width:1024px){.fw_cta .head_wrap{width:100%}}.logos_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.logos_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.logos_cont .cont{-ms-flex-order:-1;order:-1}.logos_cont .cont .inner_content{position:relative;padding:60px;background:#eef1fa}.logos_cont .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #eef1fa;content:''}.logos_cont .cont.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #eef1fa transparent transparent}.logos_cont .logos_stagger li .logo{float:left;display:inline-block;width:auto;max-width:40%;margin-bottom:20px}.logos_cont .logos_stagger li .logo img{display:block;width:100%}.logos_cont .logos_stagger li:nth-child(even) .logo{float:right}.logos_cont .logos_stagger li:last-of-type .logo{margin-bottom:0}@media screen and (max-width:767px){.logos_cont .vert_align .grid{display:block;-ms-flex-align:center;align-items:center}.logos_cont .logos{margin:0 0 80px}.logos_cont .cont .inner,.logos_cont .logos .inner_content{padding:0}.logos_cont .cont .inner_content{padding:30px}.logos_cont .cont .inner_content:after,.logos_cont .cont.flip .inner_content:after{right:auto;left:100px;top:-40px;border-width:0 24px 40px;border-color:transparent transparent #eef1fa}}@media only screen and (min-width:768px) and (max-width:1024px){.logos_cont .logos .inner_content{padding:0;width:100%}.logos_cont .cont .inner{padding:0 60px 0 0}.logos_cont .cont .inner_content{padding:40px}.logos_cont .cont.flip .inner{padding:0 0 0 60px}.logos_cont .logos_stagger{margin-left:0!important}.logos_cont .logos_stagger li .logo{float:none;display:block;width:100%;max-width:200px;margin:0 auto 30px}.logos_cont .logos_stagger li:nth-child(even) .logo{float:none}}@media only screen and (min-width:1025px) and (max-width:1360px){.logos_cont .cont .inner{padding:0 60px 0 0}.logos_cont .cont.flip .inner{padding:0 0 0 60px}}.test_cont .cont .inner_content,.test_cont .test .inner{padding:0 60px}.test_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.test_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.test_cont .test{-ms-flex-order:-1;order:-1}.test_cont .test .inner_content{position:relative;padding:60px;background:#fff}.test_cont .test .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff;content:''}.test_cont .test.flip{-ms-flex-order:1;order:1}.test_cont .test.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}@media screen and (max-width:767px){.test_cont .cont .inner_content,.test_cont .test .inner{padding:0}.test_cont .vert_align .grid{display:block}.test_cont .test{margin:0 0 80px}.test_cont .test .inner_content{padding:30px}.test_cont .test .inner_content:after,.test_cont .test.flip .inner_content:after{right:auto;left:100px;top:auto;bottom:-40px;border-width:40px 24px 0;border-color:#fff transparent transparent}}@media only screen and (min-width:768px) and (max-width:1024px){.test_cont .cont .inner_content{padding:0}.test_cont .test .inner{padding:0 60px 0 0}.test_cont .test .inner_content{padding:40px}.test_cont .test.flip .inner{padding:0 0 0 60px}.test_cont .test.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}}.testimonial{background:#2b59c3}.testimonial .content_section_inner{padding-top:100px;padding-bottom:160px}.testimonial h3{margin-bottom:2em}.testimonial .img img{display:block;width:100%}.icon_label_grid .content_section_inner{padding:100px 0 20px}.icon_label_grid .intro{width:70%;margin:0 auto 80px}.icon_label_grid h3{color:#000041;text-transform:none;letter-spacing:1px}.icon_label_grid .icons{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top;margin:0 auto}.icon_label_grid .icons .bucket{width:33.33%;margin:0 auto 80px;padding:0 30px;box-sizing:border-box;text-align:center}.icon_label_grid .icons .icon{display:block;width:120px;height:120px;margin:0 auto 50px;background:center bottom no-repeat;background-size:90% auto}.icon_label_grid .icons blockquote,.icon_label_grid .icons cite,.icon_label_grid .icons p{margin:2em 0 0}@media screen and (max-width:767px){.icon_label_grid .content_section_inner{padding:60px 20px 20px}.icon_label_grid .intro{width:100%}.icon_label_grid .icons .bucket{width:100%;max-width:400px;margin:0 auto 40px;padding:0 10px}.icon_label_grid .icons blockquote,.icon_label_grid .icons cite,.icon_label_grid .icons p{margin:1em 0 0}.icon_label_grid .icons .icon{margin:0 auto 30px}}.values_tenets h2.lined_left:after{background:#fff}.values_tenets blockquote,.values_tenets cite,.values_tenets h5,.values_tenets h6,.values_tenets li,.values_tenets p{color:#fff}.values_tenets h3,.values_tenets h4{color:#ff6e42}.values_tenets h5{margin:0 0 .75em}.values_tenets .tenets{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:left;justify-content:left;-ms-flex-align:start;align-items:flex-start;margin:80px 0 0}.values_tenets .tenets .bucket{width:50%;margin:0 0 50px;padding:0;box-sizing:border-box}.values_tenets .tenets .bucket:nth-of-type(even){padding:0 0 0 60px}.values_tenets .tenets .bucket:nth-of-type(odd){padding:0 60px 0 0}@media screen and (max-width:767px){.values_tenets .tenets{display:block}.values_tenets .tenets .bucket{width:100%}.values_tenets .tenets .bucket:nth-of-type(even),.values_tenets .tenets .bucket:nth-of-type(odd){padding:0}}.blog_picker h3{color:#000041;text-transform:none;letter-spacing:1px}.blog_picker .featured_posts{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;margin:80px 0 50px;margin-left:0!important}.blog_picker .item{position:relative;float:left;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#fff}.blog_picker .item:nth-of-type(3n+1){margin-left:0}.blog_picker .item .top{position:relative;z-index:12;background:#fff}.blog_picker .item .top .inner{padding:40px;height:230px;box-sizing:border-box;background:center center no-repeat #2b59c3;background-size:cover}.blog_picker .item .btm{background:0 0;z-index:11}.blog_picker .item .btm .inner{position:relative;padding:30px 40px 80px 20px}.blog_picker .item .btm h4{margin:0 0 .75em;font-weight:400;color:#000;text-transform:none;letter-spacing:0}.blog_picker .item .btm blockquote,.blog_picker .item .btm cite,.blog_picker .item .btm p{margin:0}.blog_picker .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){.blog_picker .featured_posts{display:block}.blog_picker .item{float:none;width:100%;margin:0 0 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.blog_picker .item{float:none;width:100%;max-width:600px;margin:0 auto 40px}.blog_picker .item:nth-of-type(3n+1){margin-left:auto}}.wys .inner{margin:0 auto;width:100%}.narrow_wys .inner{margin:0 auto;width:70%;max-width:900px}.inset_right_col .content_section_inner{width:80%}.inset_right_col .left .inner{padding-right:70px}.inset_right_col .right .inner{background:#f2f3f8;padding:36px 36px 10px}.inset_right_col .right h4{font-size:1.11em;letter-spacing:1px}.inset_right_col .right ul{margin:0 0 1.56em 20px}.inset_right_col .right ul li{color:#141920}.inset_right_col .right a{text-decoration:underline}.inset_right_col.light-gray .right .inner{background:#fff}@media screen and (max-width:767px){.inset_right_col .content_section_inner,.narrow_wys .inner{width:100%}.inset_right_col .left{margin:0 0 40px}.inset_right_col .left .inner{padding-right:0}}@media only screen and (min-width:768px) and (max-width:1024px){.narrow_wys .inner{width:90%}}.skinny_cta{background:#000041}.skinny_cta .content_section_inner{padding-top:30px;padding-bottom:30px}.skinny_cta .vert_align{width:70%;margin:0 auto}.skinny_cta .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:100%}.skinny_cta .cont{padding-right:60px}.skinny_cta .cont.solo{padding:60px 0 30px}.skinny_cta .cont blockquote,.skinny_cta .cont cite,.skinny_cta .cont p{font-size:1.22em}.skinny_cta .cont *{color:#fff}.skinny_cta .ct{text-align:center}.skinny_cta .ct .btn{margin:0}.skinny_cta.light-blue .cont *,.skinny_cta.light-gray .cont *{color:#000}.skinny_cta.flip .cont{padding-right:0;padding-left:60px}@media screen and (max-width:767px){.skinny_cta .vert_align{width:100%}.skinny_cta .cont{padding-right:0}.skinny_cta.flip .cont{padding-left:0}}@media only screen and (min-width:768px) and (max-width:1024px){.skinny_cta .vert_align{width:100%}}.form_embed.purple-dark h2{margin:0 0 .75em;text-transform:none;letter-spacing:0;color:#fff}.form_embed.purple-dark h2:after{display:none}.form_embed.alt_layout{background-color:#000041!important;background-repeat:no-repeat;background-position:center center;background-size:cover}.form_embed.alt_layout h2{position:relative;display:inline-block;margin:0 0 1em;padding:10px 20px;font-size:2.22em;font-weight:400;letter-spacing:.1em;color:#ff6e42;text-transform:uppercase;border:2px solid #fff}.form_embed.alt_layout h2:after{display:none}.form_embed.alt_layout blockquote,.form_embed.alt_layout cite,.form_embed.alt_layout p{color:#fff}.form_embed.alt_layout blockquote.desc,.form_embed.alt_layout cite.desc,.form_embed.alt_layout p.desc{display:inline-block;margin:0 0 30px;padding:0 0 0 30px;border-left:2px solid #ff6e42;text-align:left;font-size:1.22em}.form_embed .narrow_form{width:50%;margin:0 auto}@media screen and (max-width:767px){.form_embed.alt_layout blockquote.desc,.form_embed.alt_layout cite.desc,.form_embed.alt_layout p.desc{font-size:1em}.form_embed.alt_layout blockquote br,.form_embed.alt_layout cite br,.form_embed.alt_layout p br{display:none}.form_embed .narrow_form{width:100%}}.icon_cont_list .intro{width:70%;margin:0 auto 80px}.icon_cont_list .icon_cont_blocks{margin-left:0!important}.icon_cont_list .icon_cont_blocks .bucket{display:block;background:0 0;margin-bottom:100px}.icon_cont_list .icon_cont_blocks .bucket:last-of-type{margin-bottom:0}.icon_cont_list .icon_cont_blocks .icon{float:left;width:28%}.icon_cont_list .icon_cont_blocks .icon img{display:block;width:130px;margin:0 auto}.icon_cont_list .icon_cont_blocks .cont{float:left;width:72%}.icon_cont_list .icon_cont_blocks h3{text-align:left;color:#000041;text-transform:none;font-size:1.67em;font-weight:600;letter-spacing:1px}.icon_cont_list .icon_cont_blocks.two_up{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.icon_cont_list .icon_cont_blocks.two_up .inner{padding:96px 96px 80px}.icon_cont_list .icon_cont_blocks.two_up .bucket{display:inline-block;vertical-align:top;width:calc(50% - 40px);margin:0 0 40px 40px;background:#f2f3f8}.icon_cont_list .icon_cont_blocks.two_up .bucket:nth-of-type(2n+1){margin-left:0}.icon_cont_list .icon_cont_blocks.two_up .vert_align{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0 0 60px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:140px;height:140px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 140px);margin:0 0 0 20px;box-sizing:border-box;text-align:left;color:#000041;text-transform:none;font-size:2em;font-weight:600;letter-spacing:1px}.icon_cont_list .icon_cont_blocks.two_up .inner_content li{color:#141920}.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:50px}.icon_cont_list .icon_cont_blocks.two_up.variant .icon{float:none;display:block;margin:0 auto 30px;width:auto;max-width:90%;height:auto;max-height:140px}.icon_cont_list .icon_cont_blocks.two_up.variant h3{width:80%;margin:0 auto 30px;text-align:center;color:#000;text-transform:uppercase;letter-spacing:3px;font-size:1.22em;font-weight:600}.icon_cont_list .icon_cont_blocks.two_up.variant .inner_content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;text-align:center}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket{display:inline-block;vertical-align:top;width:calc(50% - 60px);margin:0 0 60px 60px;background:#fff;border-radius:8px;box-shadow:0 0 20px rgba(0,0,0,.16)}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket:nth-of-type(2n+1){margin-left:0}@media screen and (max-width:767px){.icon_cont_list .intro{width:100%;margin:0 auto 40px}.icon_cont_list .intro blockquote br,.icon_cont_list .intro cite br,.icon_cont_list .intro p br{display:none}.icon_cont_list .icon_cont_blocks .bucket{margin-bottom:60px}.icon_cont_list .icon_cont_blocks .icon{float:none;width:100%}.icon_cont_list .icon_cont_blocks .icon img{display:block;width:130px;margin:0 0 30px}.icon_cont_list .icon_cont_blocks .cont{float:none;width:100%}.icon_cont_list .icon_cont_blocks h3{text-align:left;color:#000041;text-transform:none;font-size:1.67em;font-weight:600;letter-spacing:1px}.icon_cont_list .icon_cont_blocks.two_up .inner{padding:40px 40px 20px}.icon_cont_list .icon_cont_blocks.two_up .bucket{display:block;width:100%;margin:0 0 40px}.icon_cont_list .icon_cont_blocks.two_up .bucket:nth-of-type(2n+1){margin-left:0}.icon_cont_list .icon_cont_blocks.two_up .vert_align{margin:0 0 40px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:100px;height:100px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 120px);margin:0 0 0 20px;box-sizing:border-box;text-align:left;color:#000041;text-transform:none;font-size:2em;font-weight:600;letter-spacing:1px}.icon_cont_list .icon_cont_blocks.two_up .inner_content li{color:#141920}.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:50px}.icon_cont_list .icon_cont_blocks.two_up.variant .icon{float:none;display:block;margin:0 auto 30px;width:auto;max-width:90%;height:auto;max-height:140px}.icon_cont_list .icon_cont_blocks.two_up.variant h3{width:80%;margin:0 auto 30px;text-align:center;color:#000;text-transform:uppercase;letter-spacing:3px;font-size:1.22em;font-weight:600}.icon_cont_list .icon_cont_blocks.two_up.variant .inner_content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;text-align:center}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket{display:block;width:100%;margin:0 0 40px}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket:nth-of-type(2n+1){margin-left:0}}@media only screen and (min-width:768px) and (max-width:1024px){.icon_cont_list .intro{width:90%}.icon_cont_list .icon_cont_blocks .bucket{margin-bottom:80px}.icon_cont_list .icon_cont_blocks.two_up .bucket{display:block;width:100%;max-width:800px;margin:0 auto 40px}.icon_cont_list .icon_cont_blocks.two_up .bucket:nth-of-type(2n+1){margin-left:auto}.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:30px}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket{display:block;width:100%;max-width:800px;margin:0 auto 60px}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket:nth-of-type(2n+1){margin-left:auto}}@media only screen and (min-width:1025px) and (max-width:1360px){.icon_cont_list .icon_cont_blocks.two_up .inner{padding:60px 60px 50px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:80px;height:80px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 100px);font-size:1.5em}.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:50px}.icon_cont_list .icon_cont_blocks.two_up.variant .icon{max-height:100px}}.happy_customers .hc_test .cont,.happy_customers .hc_test .logo{padding:0 50px 0 0}.image_rows .intro{margin-bottom:60px}.image_rows .zoom_row h3{margin:0 0 2em;font-size:1.67em;font-weight:600;color:#000041;text-transform:none;letter-spacing:0}.image_rows .zoom_images{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:start;align-items:flex-start;margin-bottom:60px}.image_rows .zoom_images .zoom_cont{position:relative;width:33.333%;height:470px;overflow:hidden}.image_rows .zoom_images .zoom_cont .hover_prompt{position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,65,.6);background-image:url(../../images/mag-glass-fat-white.svg);background-repeat:no-repeat;background-position:center center;background-size:120px auto;transition:opacity .3s;opacity:0}.image_rows .zoom_images .zoom_cont .hover_prompt.kill{display:none}.image_rows .zoom_images .zoom_cont img{display:block;width:auto;height:100%}.image_rows .zoom_images .zoom_cont.zoomable:hover .hover_prompt{opacity:1}@media screen and (max-width:767px){.image_rows .zoom_row h3{margin:0 0 1em}.image_rows .zoom_images{display:block}.image_rows .zoom_images .zoom_cont{width:100%;height:auto}.image_rows .zoom_images .zoom_cont .hover_prompt{display:none}.image_rows .zoom_images .zoom_cont img{display:block;width:100%;max-width:400px;margin:0 auto;height:auto}}@media only screen and (min-width:768px) and (max-width:1024px){.image_rows .zoom_images .zoom_cont{height:300px}.image_rows .zoom_images .zoom_cont img{width:100%;height:auto}}.happy_customers .hc_test{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.happy_customers .hc_test .logo .inner{display:table;height:100%}.happy_customers .hc_test .logo .inner_inner{display:table-cell;vertical-align:middle}.happy_customers .hc_test .logo img{display:block;width:100%}.happy_customers .hc_test .cont .inner{padding:70px 70px 30px 100px;background:#eef1fa;text-align:left}.happy_customers .hc_test .quote{position:relative}.happy_customers .hc_test .mark{position:absolute;left:-40px;top:-20px;width:40px;height:40px;color:#1F1FDD;font-size:3.61em;line-height:40px;text-align:left;font-weight:600}.happy_customers .hc_test .inner_content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:left;justify-content:left}.happy_customers .hc_test .inner_content blockquote,.happy_customers .hc_test .inner_content cite,.happy_customers .hc_test .inner_content p{margin:0}.happy_customers .hc_test .headshot{-ms-flex:0 0 112px;flex:0 0 112px;width:112px;height:112px;margin:0 30px 0 0;border-radius:60px;overflow:hidden;border:1px solid #000041;background:center center no-repeat #fff;background-size:cover}.happy_customers.light-blue .hc_text .cont .inner,.happy_customers.light-gray .hc_text .cont .inner{background:#fff}.happy_customers .logos{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;list-style:none;margin:80px 0;padding:0}.happy_customers .logos .gridblock{width:16.667%;padding:0 35px}.happy_customers .logos .inner{margin:0;text-align:center}.happy_customers .logos .inner .logo{display:inline-block;position:relative;height:70px;width:100%;margin:0 auto}.happy_customers .logos .inner .logo img{position:absolute;left:50%;top:50%;display:block;width:auto;max-height:100%;max-width:100%;transform:translate(-50%,-50%)}@media screen and (max-width:767px){.happy_customers .hc_test{display:block;margin-top:30px}.happy_customers .hc_test .logo{margin:0 0 40px;padding:0}.happy_customers .hc_test .logo .inner{width:100%}.happy_customers .hc_test .logo img{width:auto;max-width:300px;margin:0 auto}.happy_customers .hc_test .cont{padding:0 40px}.happy_customers .hc_test .cont .inner{padding:50px 40px 30px 50px}.happy_customers .hc_test .headshot{-ms-flex:0 0 60px;flex:0 0 60px;width:60px;height:60px;margin:0 20px 0 0}.happy_customers .logos{margin:40px 0}.happy_customers .logos .gridblock{-ms-flex:1 0 50%;flex:1 0 50%;width:auto;padding:0 20px}}@media only screen and (min-width:768px) and (max-width:1024px){.happy_customers .hc_test .cont,.happy_customers .hc_test .logo{padding:0 20px 0 0}.happy_customers .hc_test .cont .inner{padding:40px 40px 20px 70px}.happy_customers .hc_test .mark{position:absolute;left:-40px;top:-20px;width:40px;height:40px;color:#1F1FDD;font-size:3.61em;line-height:40px;text-align:left;font-weight:600}.happy_customers .hc_test .headshot{-ms-flex:0 0 60px;flex:0 0 60px;width:60px;height:60px}.happy_customers .logos .gridblock{width:33.3333%;margin:0 0 30px;padding:0 20px}}.metrics_cont .cont .inner,.metrics_cont .metrics .inner_content{padding:0 60px}.metrics_cont{background-repeat:no-repeat;background-position:center center;background-size:100% auto}.metrics_cont .vert_align{margin-bottom:80px}.metrics_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.metrics_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.metrics_cont .vert_align.last{margin-bottom:0}.metrics_cont .cont{-ms-flex-order:-1;order:-1}.metrics_cont .cont .inner_content{position:relative;padding:60px;background:#fff}.metrics_cont .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff;content:''}.metrics_cont .cont.flip{-ms-flex-order:1;order:1}.metrics_cont .cont.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}.metrics_cont .metrics_grid li{display:inline-block;width:calc(50% - 40px);margin:30px 20px;text-align:center}.metrics_cont .metrics_grid li img{display:block;width:60%;margin:0 auto}.metrics_cont .metrics_grid li .metric{display:block;margin:.25em 0;font-size:3.33em;line-height:1.3em;font-weight:600;color:#000041}.metrics_cont .metrics_grid li .metric_label{display:block;margin:0;font-size:1.22em;font-weight:400}@media screen and (max-width:767px){.metrics_cont .vert_align .grid{display:block}.metrics_cont .metrics .inner_content{padding:0}.metrics_cont .cont .inner{display:block;padding:0}.metrics_cont .cont .inner_content{padding:30px}.metrics_cont .cont .inner_content:after,.metrics_cont .cont.flip .inner_content:after{right:auto;left:100px;top:-40px;border-width:0 24px 40px;border-color:transparent transparent #fff;content:''}.metrics_cont .metrics_grid{margin-bottom:80px}.metrics_cont .metrics_grid li{display:inline-block;width:calc(50% - 40px);margin:30px 20px;text-align:center}.metrics_cont .metrics_grid li img{display:block;width:60%;margin:0 auto}.metrics_cont .metrics_grid li .metric{display:block;margin:0 0 .25em;font-size:3.33em;line-height:1.3em;font-weight:600;color:#000041}.metrics_cont .metrics_grid li .metric_label{display:block;margin:0;font-size:1.22em;font-weight:400}}@media only screen and (min-width:768px) and (max-width:1024px){.metrics_cont .metrics .inner_content{-ms-flex:1 0 100%;flex:1 0 100%;padding:0}.metrics_cont .cont .inner{padding:0 60px 0 0}.metrics_cont .cont .inner_content{padding:40px}.metrics_cont .cont.flip .inner{padding:0 0 0 60px}.metrics_cont .metrics_grid{margin-left:0!important}.metrics_cont .metrics_grid li{display:block;width:100%;margin:30px 0}.metrics_cont .metrics_grid li img{width:60%;max-width:200px;margin:0 auto}.metrics_cont .metrics_grid li .metric{margin:0;font-size:3em}.metrics_cont .metrics_grid li .metric_label{font-size:1em}}.yb_is_for h2.lined{margin:0 0 2.5em}.yb_is_for .contentbuckets{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start}.yb_is_for .contentbuckets .bucket{-ms-flex:0 0 calc(33.3333% - 22px);flex:0 0 calc(33.3333% - 22px);width:calc(33.3333% - 22px);margin:0 0 0 33px;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}.yb_is_for .contentbuckets .bucket:first-of-type{margin-left:0}.yb_is_for .contentbuckets .img{height:250px;background:center top no-repeat #000041;background-size:cover}.yb_is_for .contentbuckets .cont{height:calc(100% - 250px)}.yb_is_for .contentbuckets .cont .inner{background:#eef1fa;border:1px dashed #000041;border-top:none;height:100%;padding:70px 50px 30px 80px;text-align:left;box-sizing:border-box}.yb_is_for .contentbuckets .cont h4{width:calc(100% + 30px);margin-left:-30px;padding:0 0 0 50px;box-sizing:border-box;letter-spacing:2px}.yb_is_for .contentbuckets .cont h4:before{top:-2px}.yb_is_for .contentbuckets .cont .wysiwyg li{color:#000}.yb_is_for .contentbuckets .cont .wysiwyg li:before{left:-20px;width:6px;height:6px;border-radius:3px}@media screen and (max-width:767px){.yb_is_for .contentbuckets{display:block}.yb_is_for .contentbuckets .bucket{width:100%;margin:0 0 40px}.yb_is_for .contentbuckets .cont .inner{padding:40px 30px 20px 50px}}@media only screen and (min-width:768px) and (max-width:1024px){.yb_is_for .contentbuckets{display:block}.yb_is_for .contentbuckets .bucket{display:block;width:100%;max-width:800px;margin:0 auto 30px}.yb_is_for .contentbuckets .bucket:first-of-type{margin-left:auto}.yb_is_for .contentbuckets .img{height:300px}.yb_is_for .contentbuckets .inner_content{height:auto!important}}.link_groups .lists_wrap{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:start;align-items:flex-start;padding:0 60px}.link_groups .lists_wrap .bucket{width:calc(33.3333% - 40px);margin:0 0 0 60px}.link_groups .lists_wrap .bucket:first-of-type{margin-left:0}.link_groups .lists_wrap .head{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:20px 50px;border:1px solid #000041;background:#eef1fa}.link_groups .lists_wrap .head .icon{-ms-flex:0 0 70px;flex:0 0 70px}.link_groups .lists_wrap .head .icon img{display:block;width:100%}.link_groups .lists_wrap .head h4{-ms-flex:1 0 calc(100% - 90px);flex:1 0 calc(100% - 90px);margin:0 0 0 20px;text-align:left;text-transform:none;letter-spacing:0}.link_groups .lists_wrap .links{margin:0!important;padding:0;border:1px dashed #000041;border-top:none}.link_groups .lists_wrap .links li{border-top:1px dashed #000041}.link_groups .lists_wrap .links li:first-of-type{border:none}.link_groups .lists_wrap .links a{display:block;position:relative;padding:26px 30px 26px 50px;text-align:left;font-size:1em;line-height:30px;color:#141920}.link_groups .lists_wrap .links a:hover{color:#141920}.link_groups .lists_wrap .links a:hover .arrow{margin-left:16px}.link_groups .lists_wrap .links span{display:inline-block;vertical-align:middle}.link_groups .lists_wrap .links .arrow{width:0;height:0;margin:10px 0 0 8px;border-style:solid;border-width:4px 0 4px 7px;border-color:transparent transparent transparent #ff6e42;transform:translateY(-50%);transition:all .3s}.link_groups .lists_wrap .links .link_icon{margin-right:10px}.link_groups .lists_wrap .links .link_icon img{vertical-align:middle}@media screen and (max-width:767px){.link_groups .lists_wrap{display:block;padding:0}.link_groups .lists_wrap .bucket{width:100%;margin:0 0 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.link_groups .lists_wrap{padding:0}.link_groups .lists_wrap .bucket{width:calc(33.3333% - 20px);margin:0 0 0 30px}.link_groups .lists_wrap .head{padding:20px 10px}.link_groups .lists_wrap .head .icon{-ms-flex:0 0 30px;flex:0 0 30px}.link_groups .lists_wrap .head h4{-ms-flex:1 0 calc(100% - 40px);flex:1 0 calc(100% - 40px);margin-left:10px}.link_groups .lists_wrap .links a{padding:16px 10px;font-size:.8em}}.accordion_simple .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.accordion_simple .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;height:100%}.accordion_simple .acc .inner_content{-ms-flex-positive:1;flex-grow:1;padding:0 60px}.accordion_simple .cont .inner{padding:0 60px}.accordion_simple .cont .inner_content{position:relative;padding:60px;background:#fff}.accordion_simple .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff;content:''}.accordion_simple .accordion{margin:0!important;padding:0;list-style:none}.accordion_simple .accordion>li{display:block;list-style:none;margin:0;padding:0;border-bottom:1px dashed #000041}.accordion_simple .accordion>li:before{display:none}.accordion_simple .accordion .acc_heading{position:relative;margin:0;text-transform:none;font-weight:600;letter-spacing:0;color:#000041}.accordion_simple .accordion .acc_heading>a{display:inline-block;position:relative;width:100%;margin:0;padding:36px 10px;color:#000041;vertical-align:middle;text-decoration:none;box-sizing:border-box}.accordion_simple .accordion .acc_heading.active>a,.accordion_simple .accordion .acc_heading>a:hover{color:#ff6e42}.accordion_simple .accordion .acc_heading span{display:inline-block;vertical-align:middle;height:46px;line-height:46px}.accordion_simple .accordion .acc_heading .acc_icon{width:46px;margin:0 15px 0 0}.accordion_simple .accordion .acc_heading .acc_icon img{vertical-align:middle}.accordion_simple .accordion .acc_heading .toggle{position:absolute;right:10px;top:36px;display:inline-block;width:21px;height:46px;padding:0;vertical-align:middle;box-sizing:border-box;background:url(../../images/accordion-toggle.svg) center center no-repeat;background-size:100% auto;transform-origin:center;transition:all .3s}.accordion_complex .cont_right ul li,.accordion_simple .accordion .acc_content .inner ul li{color:#000}.accordion_simple .accordion .acc_heading.active .toggle{transform:rotate(180deg)}.accordion_simple .accordion .acc_content{display:none}.accordion_simple .accordion .acc_content .inner{display:block;padding:0 0 30px 72px;box-sizing:border-box}.accordion_simple .accordion .acc_content .inner ul{margin-top:0}.accordion_simple .accordion .acc_content .inner ul li:before{width:6px;height:6px;border-radius:3px}.accordion_simple .accordion .acc_content blockquote,.accordion_simple .accordion .acc_content cite,.accordion_simple .accordion .acc_content p{margin-bottom:.5em}@media screen and (max-width:767px){.accordion_simple .acc .inner_content,.accordion_simple .cont .inner{padding:0}.accordion_simple .vert_align .grid{display:block}.accordion_simple .cont{margin-bottom:60px}.accordion_simple .cont .inner_content{padding:30px}.accordion_simple .cont .inner_content:after{right:auto;left:100px;top:auto;bottom:-40px;border-width:40px 24px 0;border-color:#fff transparent transparent}.accordion_simple .accordion .acc_heading>a{padding:20px 10px}.accordion_simple .accordion .acc_heading .toggle{top:20px}.accordion_simple .accordion .acc_content .inner{display:block;padding:0 0 0 72px;box-sizing:border-box}}@media only screen and (min-width:768px) and (max-width:1024px){.accordion_simple .vert_align .grid{display:block}.accordion_simple .acc .inner_content,.accordion_simple .cont .inner{padding:0}.accordion_simple .cont .inner_content{padding:40px}.accordion_simple .cont .inner_content:after{right:auto;left:100px;top:auto;bottom:-40px;border-width:40px 24px 0;border-color:#fff transparent transparent}.accordion_simple .accordion{margin:60px 0 0!important}}.accordion_complex .intro{width:70%;margin:0 auto 80px;text-align:center}.accordion_complex .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.accordion_complex .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.accordion_complex .cont_right .inner_content{-ms-flex-positive:1;flex-grow:1;padding:0 60px}.accordion_complex .cont_right ul{margin-top:0}.accordion_complex .cont_right ul li:before{width:6px;height:6px;border-radius:3px}.accordion_complex .cont_left{padding:0 0 0 60px!important}.accordion_complex .cont_left .inner{position:relative;padding:0;-webkit-clip-path:polygon(93% 0,93% 100px,100% 122px,93% 144px,93% 100%,0 100%,0 0);clip-path:polygon(93% 0,93% 100px,100% 122px,93% 144px,93% 100%,0 100%,0 0);background:#ff6e42}.accordion_complex .cont_left .inner:before{position:absolute;left:1px;top:1px;width:calc(100% - 2px);height:calc(100% - 2px);background:#fff;-webkit-clip-path:polygon(93% 0,93% 100px,calc(100% - 1px) 121px,93% 142px,93% 100%,0 100%,0 0);clip-path:polygon(93% 0,93% 100px,calc(100% - 1px) 121px,93% 142px,93% 100%,0 100%,0 0);content:''}.accordion_complex .cont_left .inner_content{position:relative;padding:100px 100px 70px}.accordion_complex .accordion_wrap{position:relative;margin:60px 0 0;padding-top:100px}.accordion_complex .accordion_wrap:before{position:absolute;left:50%;top:40px;transform:translateX(-50%);width:40%;height:10px;border-bottom:1px dashed #000041;content:''}.accordion_complex .accordion{margin:0!important;padding:0;list-style:none}.accordion_complex .accordion>li{display:block;list-style:none;margin:0;padding:0;border-bottom:1px dashed #000041}.accordion_complex .accordion>li:before{display:none}.accordion_complex .accordion .acc_heading{position:relative;margin:0;text-transform:none;font-weight:600;letter-spacing:0;color:#000041}.accordion_complex .accordion .acc_heading>a{display:block;position:relative;width:100%;margin:0;padding:60px 10% 60px 100px;color:#000;vertical-align:middle;text-decoration:none;box-sizing:border-box}.accordion_complex .accordion .acc_heading>a:hover{color:#ff6e42}.accordion_complex .accordion .acc_heading>a:before{position:absolute;left:40px;top:60px;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}.accordion_complex .accordion .acc_heading>a .inner{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.accordion_complex .accordion .acc_heading span{display:inline-block;vertical-align:middle}.accordion_complex .accordion .acc_heading .h{-ms-flex:0 0 30%;flex:0 0 30%;margin:0;font-size:1em;line-height:1.45em;font-weight:600;text-transform:uppercase;letter-spacing:3px}.accordion_complex .accordion .acc_heading .sh{-ms-flex:1 0 70%;flex:1 0 70%;margin-left:20px;font-size:.82em;font-weight:400;line-height:1.5em;color:#000}.accordion_complex .accordion .acc_heading .toggle{position:absolute;right:10px;top:50%;display:inline-block;width:21px;height:46px;padding:0;vertical-align:middle;box-sizing:border-box;background:url(../../images/accordion-toggle.svg) center center no-repeat;background-size:100% auto;transform:translateY(-50%);transform-origin:center;transition:all .3s}.accordion_complex .accordion .acc_heading.active>a{color:#ff6e42}.accordion_complex .accordion .acc_heading.active .toggle{transform:translateY(-50%) rotate(180deg)}.accordion_complex .accordion .acc_content{display:none}.accordion_complex .accordion .acc_content .inner{display:block;padding:0 0 30px calc(30% + 60px);box-sizing:border-box}.accordion_complex .accordion .acc_content .inner ul{margin-top:0}.accordion_complex .accordion .acc_content .inner ul li{color:#000}.accordion_complex .accordion .acc_content .inner ul li:before{width:6px;height:6px;border-radius:3px}.accordion_complex .accordion .acc_content blockquote,.accordion_complex .accordion .acc_content cite,.accordion_complex .accordion .acc_content p{margin-bottom:.5em}@media screen and (max-width:767px){.accordion_complex .accordion_wrap:before,.accordion_complex .intro{width:100%}.accordion_complex .vert_align .grid{display:block}.accordion_complex .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.accordion_complex .cont_right .inner_content{padding:0}.accordion_complex .cont_left{margin:0 0 40px;padding:0!important}.accordion_complex .cont_left .inner{-webkit-clip-path:polygon(100% 0,100% calc(100% - 40px),144px calc(100% - 40px),122px 100%,100px calc(100% - 40px),0 calc(100% - 40px),0 0);clip-path:polygon(100% 0,100% calc(100% - 40px),144px calc(100% - 40px),122px 100%,100px calc(100% - 40px),0 calc(100% - 40px),0 0)}.accordion_complex .cont_left .inner:before{-webkit-clip-path:polygon(100% 0,100% calc(100% - 40px),142px calc(100% - 40px),121px calc(100% - 1px),100px calc(100% - 40px),0 calc(100% - 40px),0 0);clip-path:polygon(100% 0,100% calc(100% - 40px),142px calc(100% - 40px),121px calc(100% - 1px),100px calc(100% - 40px),0 calc(100% - 40px),0 0)}.accordion_complex .cont_left .inner_content{padding:60px}.accordion_complex .accordion_wrap{top:0;margin:0}.accordion_complex .accordion .acc_heading>a{padding:20px 50px 20px 60px}.accordion_complex .accordion .acc_heading>a:before{left:10px;top:20px}.accordion_complex .accordion .acc_heading span,.accordion_complex .accordion .acc_heading>a .inner{display:block}.accordion_complex .accordion .acc_heading .sh{margin-left:0}.accordion_complex .accordion .acc_content .inner{padding:0 0 0 60px}}@media only screen and (min-width:768px) and (max-width:1024px){.accordion_complex .intro{width:90%}.accordion_complex .cont_right .inner_content{padding:0 0 0 60px}.accordion_complex .cont_left{padding:0!important}.accordion_complex .cont_left .inner_content{padding:70px 70px 40px}.accordion_complex .accordion_wrap:before{width:60%}.accordion_complex .accordion .acc_heading>a:before{top:50%;transform:translateY(-50%)}.accordion_complex .accordion .acc_heading .sh{-ms-flex:1 0 calc(70% - 60px);flex:1 0 calc(70% - 60px)}}.contrib_journey .cont_wrap{padding:0 60px}.contrib_journey .cont_wrap>.btn{margin-bottom:0}.contrib_journey .intro{width:70%;margin:0 auto 80px}.contrib_journey .contentbuckets{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;margin-bottom:60px}.contrib_journey .contentbuckets .bucket{width:calc(33.3333% - 40px);margin:0 0 0 60px;background:0 0;filter:drop-shadow(0 0 .4rem rgba(0, 0, 0, .3))}.contrib_journey .contentbuckets .bucket:first-of-type{margin-left:0}.contrib_journey .contentbuckets .bucket .notched{height:100%;-webkit-clip-path:polygon(0 0,42% 0,50% 24px,58% 0,100% 0,100% 100%,0 100%);clip-path:polygon(0 0,42% 0,50% 24px,58% 0,100% 0,100% 100%,0 100%);background:#fff}.contrib_journey .contentbuckets .inner{background:#fff;border-top:none;padding:60px;text-align:center}.contrib_journey .contentbuckets .inner .wysiwyg{text-align:center}.contrib_journey .contentbuckets .inner img{max-width:50%}@media screen and (max-width:767px){.contrib_journey .cont_wrap{padding:0}.contrib_journey .intro{width:100%}.contrib_journey .contentbuckets{display:block}.contrib_journey .contentbuckets .bucket{width:100%;margin:0 0 40px}.contrib_journey .contentbuckets .inner{padding:30px}}@media only screen and (min-width:768px) and (max-width:1024px){.contrib_journey .cont_wrap{padding:0}.contrib_journey .intro{width:90%}.contrib_journey .contentbuckets{display:block}.contrib_journey .contentbuckets .bucket{width:100%;max-width:500px;margin:0 auto 60px}.contrib_journey .contentbuckets .bucket:first-of-type{margin-left:auto}.contrib_journey .contentbuckets .inner{padding:40px}}.inline_cta{margin-bottom:40px;width:100%}.inline_cta.test{padding:60px;background:#f2f3f8}.inline_cta.test .meta .headshot{display:inline-block;position:relative;height:114px;width:114px;border-radius:100px;overflow:hidden;border:1px solid #000041;margin:0 auto 40px}.inline_cta.test .meta .headshot img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.inline_cta.test .meta blockquote,.inline_cta.test .meta cite,.inline_cta.test .meta p{margin:0}.inline_cta.test .quote .inner{padding:0 40px}.inline_cta.test .quote img{display:block;width:50%;max-width:300px;margin:0 0 40px}.inline_cta.test .quote blockquote,.inline_cta.test .quote cite,.inline_cta.test .quote p{margin:0}@media screen and (max-width:767px){.inline_cta.test{padding:30px}.inline_cta.test .meta .headshot{margin-bottom:10px}.inline_cta.test .quote{margin:0 0 40px}.inline_cta.test .quote .inner{padding:0}.inline_cta.test .quote img{margin:0 auto 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.inline_cta.test{padding:40px}.inline_cta.test .quote .inner{padding:0 0 0 40px}.inline_cta.test .quote img{width:70%}}#alm-filters-eventsfilter,#alm-filters-resourcesfilter,#alm-filters-ssfilter,#alm-filters-ybnewsfilter{padding-right:40px}#alm-filters-eventsfilter .alm-filter,#alm-filters-resourcesfilter .alm-filter,#alm-filters-ssfilter .alm-filter,#alm-filters-ybnewsfilter .alm-filter{margin-bottom:20px}#alm-filters-eventsfilter .alm-filter ul,#alm-filters-resourcesfilter .alm-filter ul,#alm-filters-ssfilter .alm-filter ul,#alm-filters-ybnewsfilter .alm-filter ul{margin:0 0 30px;padding:0;list-style:none;background:#fff;border:1px solid #707070}#alm-filters-eventsfilter .alm-filter ul>li,#alm-filters-resourcesfilter .alm-filter ul>li,#alm-filters-ssfilter .alm-filter ul>li,#alm-filters-ybnewsfilter .alm-filter ul>li{display:none;margin:0;padding:0;list-style:none}#alm-filters-eventsfilter .alm-filter ul>li:first-of-type,#alm-filters-resourcesfilter .alm-filter ul>li:first-of-type,#alm-filters-ssfilter .alm-filter ul>li:first-of-type,#alm-filters-ybnewsfilter .alm-filter ul>li:first-of-type{display:block!important}#alm-filters-eventsfilter .alm-filter ul>li:first-of-type .alm-filter--link.init,#alm-filters-resourcesfilter .alm-filter ul>li:first-of-type .alm-filter--link.init,#alm-filters-ssfilter .alm-filter ul>li:first-of-type .alm-filter--link.init,#alm-filters-ybnewsfilter .alm-filter ul>li:first-of-type .alm-filter--link.init{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}#alm-filters-eventsfilter .alm-filter ul>li:first-of-type .alm-filter--link.off,#alm-filters-resourcesfilter .alm-filter ul>li:first-of-type .alm-filter--link.off,#alm-filters-ssfilter .alm-filter ul>li:first-of-type .alm-filter--link.off,#alm-filters-ybnewsfilter .alm-filter ul>li:first-of-type .alm-filter--link.off{background-color:#ff6e42;background-color:rgba(255,110,66,0)}#alm-filters-eventsfilter .alm-filter ul>li:last-of-type,#alm-filters-resourcesfilter .alm-filter ul>li:last-of-type,#alm-filters-ssfilter .alm-filter ul>li:last-of-type,#alm-filters-ybnewsfilter .alm-filter ul>li:last-of-type{margin:0}#alm-filters-eventsfilter .alm-filter ul>li .alm-filter--link,#alm-filters-resourcesfilter .alm-filter ul>li .alm-filter--link,#alm-filters-ssfilter .alm-filter ul>li .alm-filter--link,#alm-filters-ybnewsfilter .alm-filter ul>li .alm-filter--link{display:block;padding:10px 10px 10px 15px;font-size:1em;color:#000;line-height:1.3em;outline:0;cursor:pointer;background-color:#ff6e42;background-color:rgba(255,110,66,0);transition:all .3s}#alm-filters-eventsfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-eventsfilter .alm-filter ul>li .alm-filter--link:hover,#alm-filters-resourcesfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-resourcesfilter .alm-filter ul>li .alm-filter--link:hover,#alm-filters-ssfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-ssfilter .alm-filter ul>li .alm-filter--link:hover,#alm-filters-ybnewsfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-ybnewsfilter .alm-filter ul>li .alm-filter--link:hover{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}#alm-filters-eventsfilter .alm-filter--title h3,#alm-filters-resourcesfilter .alm-filter--title h3,#alm-filters-ssfilter .alm-filter--title h3,#alm-filters-ybnewsfilter .alm-filter--title h3{position:relative;margin:0 0 1em;color:#000;font-size:1.22em;font-weight:600;text-transform:none;letter-spacing:0}#alm-filters-eventsfilter .alm-filter--title h3:after,#alm-filters-resourcesfilter .alm-filter--title h3:after,#alm-filters-ssfilter .alm-filter--title h3:after,#alm-filters-ybnewsfilter .alm-filter--title h3:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%) rotate(0);transition:all .3s}#alm-filters-eventsfilter .alm-filter--title h3.open:after,#alm-filters-resourcesfilter .alm-filter--title h3.open:after,#alm-filters-ssfilter .alm-filter--title h3.open:after,#alm-filters-ybnewsfilter .alm-filter--title h3.open:after{transform:translateY(-50%) rotate(90deg)}#alm-filters-eventsfilter .alm-filters-edit,#alm-filters-resourcesfilter .alm-filters-edit,#alm-filters-ssfilter .alm-filters-edit,#alm-filters-ybnewsfilter .alm-filters-edit{display:none}#alm-filters-resourcessearchfilter{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:42px;overflow:hidden;border:1px solid #000;border-radius:24px}#alm-filters-resourcessearchfilter .alm-filter{width:260px}#alm-filters-resourcessearchfilter .alm-filters--controls{width:60px}#alm-filters-resourcessearchfilter .alm-filter--textfield{width:100%;height:42px;line-height:42px;font-size:1em;padding:0 20px;box-sizing:border-box;border:none;-webkit-appearance:none;color:#000;background:0 0}#alm-filters-resourcessearchfilter .alm-filter--textfield:focus,#alm-filters-resourcessearchfilter .alm-filter--textfield:valid{outline:0;border:none}#alm-filters-resourcessearchfilter .alm-filters--button{position:relative;width:60px;height:42px;text-indent:-9999px;overflow:hidden;background:#fff;border:none;border-radius:0;transition:all .3s;cursor:pointer}#alm-filters-resourcessearchfilter .alm-filters--button:hover{background:#ff6e42}#alm-filters-resourcessearchfilter .alm-filters--button:focus{outline:0}#alm-filters-resourcessearchfilter .alm-filters--button:before{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;content:'';background:url(../../images/search-mag-glass.svg) center center no-repeat;background-size:20px auto}#alm-filters-resourcessearchfilter .alm-filters-edit{display:none}.alm-btn-wrap{opacity:0;visibility:hidden;text-align:center}#events-list .alm-btn-wrap,#ybnews-list .alm-btn-wrap,.alm-btn-wrap #resources-list{opacity:1;visibility:visible}.alm-btn-wrap .btn{margin:0}#resources-list .alm-btn-wrap .btn,#ybnews-list .alm-btn-wrap .btn{background:#ff6e42!important;color:#fff!important}#resources-list .alm-btn-wrap .btn:hover,#ybnews-list .alm-btn-wrap .btn:hover{background:#2b59c3!important}@media screen and (max-width:767px){#alm-filters-eventsfilter,#alm-filters-resourcesfilter,#alm-filters-ssfilter,#alm-filters-ybnewsfilter{padding-right:0}#alm-filters-resourcessearchfilter .alm-filter{-ms-flex:1 0 260px;flex:1 0 260px;width:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#alm-filters-eventsfilter,#alm-filters-resourcesfilter,#alm-filters-ssfilter,#alm-filters-ybnewsfilter{padding-right:10px}#alm-filters-eventsfilter .alm-filter--title h3,#alm-filters-resourcesfilter .alm-filter--title h3,#alm-filters-ssfilter .alm-filter--title h3,#alm-filters-ybnewsfilter .alm-filter--title h3{font-size:1em}#alm-filters-eventsfilter .alm-filter--title h3:after,#alm-filters-resourcesfilter .alm-filter--title h3:after,#alm-filters-ssfilter .alm-filter--title h3:after,#alm-filters-ybnewsfilter .alm-filter--title h3:after{right:0}}#success_stories{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#success_stories #success-stories-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#success_stories #success-stories-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#success_stories #success-stories-list .item{position:relative;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#f2f3f8}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:0}#success_stories #success-stories-list .item>a{display:block;color:#000}#success_stories #success-stories-list .item>a:hover .top img{transform:translate3d(0,0,0) scale(1.1)}#success_stories #success-stories-list .item>a:hover .read_more{color:#ff6e42}#success_stories #success-stories-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff}#success_stories #success-stories-list .item .top .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;padding:40px;height:230px;box-sizing:border-box}#success_stories #success-stories-list .item .top img{display:block;width:100%;transform:translate3d(0,0,0);transition:transform .3s}#success_stories #success-stories-list .item .top .vertical{position:absolute;left:0;bottom:5px;display:block;padding:5px;width:100%;font-size:.78em;color:#707070;line-height:1.25em;box-sizing:border-box;text-align:center}#success_stories #success-stories-list .item .btm{background:0 0;z-index:11}#success_stories #success-stories-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#success_stories #success-stories-list .item .btm blockquote,#success_stories #success-stories-list .item .btm cite,#success_stories #success-stories-list .item .btm p{margin:0}#success_stories #success-stories-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){#success_stories{width:calc(100% - 40px)}#success_stories #success-stories-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#success_stories #success-stories-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#success_stories #success-stories-list .item{width:100%;max-width:400px;margin:0 auto 40px}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:auto}#success_stories #success-stories-list .item .top .inner{height:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#success_stories #success-stories-list .item{width:calc(50% - 20px)}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:40px}#success_stories #success-stories-list .item:nth-of-type(2n+1){margin-left:0}}#yb_events{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#yb_events #events-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#yb_events #events-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#yb_events #events-list li.item{padding:48px 24px;border-bottom:1px solid rgba(112,112,112,.35);box-sizing:border-box}#yb_events #events-list li.item .img{float:left;width:30%}#yb_events #events-list li.item .img a{display:block}#yb_events #events-list li.item .img img{display:block;width:100%}#yb_events #events-list li.item .cont{float:left;width:70%;box-sizing:border-box;padding:0 0 0 50px}#yb_events #events-list li.item .cont.full{float:none;width:100%}#yb_events #events-list li.item h4{margin:0 0 .25em;color:#ff6e42;text-transform:none;letter-spacing:0}#yb_events #events-list li.item h4 a{color:#ff6e42}#yb_events #events-list li.item h4 a:hover{color:#2b59c3}#yb_events #events-list li.item blockquote.meta,#yb_events #events-list li.item cite.meta,#yb_events #events-list li.item p.meta{margin:0 0 36px}#yb_events #events-list li.item blockquote .date,#yb_events #events-list li.item cite .date,#yb_events #events-list li.item p .date{font-weight:700}.mu_groups_list{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;margin:80px 0 0;margin-left:0!important}.mu_groups_list>li{width:33.33%;margin:0 0 50px;padding:0 50px;box-sizing:border-box;text-align:left}.mu_groups_list>li>a{display:block}.mu_groups_list>li>a:hover img{transform:scale(1.05) rotate(.02deg)}.mu_groups_list>li>a:hover h4{color:#ff6e42}.mu_groups_list>li .img{margin:0 0 10px;overflow:hidden}.mu_groups_list>li img{display:block;width:100%;transition:all .3s;transform-origin:center center}.mu_groups_list>li h4{margin:0;transition:all .3s}@media screen and (max-width:767px){#yb_events{width:calc(100% - 40px)}#yb_events #events-list li.item{max-width:480px;margin:0 auto}#yb_events #events-list li.item .img{float:none;width:100%;margin:0 0 40px}#yb_events #events-list li.item .cont{float:none;width:100%;padding:0}.mu_groups_list{display:block}.mu_groups_list>li{width:100%;margin:0 0 40px;padding:0}}@media only screen and (min-width:768px) and (max-width:1024px){.mu_groups_list>li{padding:0 30px}}#yb_news{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#yb_news #ybnews-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#yb_news #ybnews-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#yb_news #ybnews-list .item{position:relative;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#f2f3f8}#yb_news #ybnews-list .item:nth-of-type(3n+1){margin-left:0}#yb_news #ybnews-list .item>a{display:block;color:#000}#yb_news #ybnews-list .item>a:hover .top img,#yb_news #ybnews-list .item>a:hover .top.pr .inner{transform:translate3d(0,0,0) scale(1.1)}#yb_news #ybnews-list .item>a:hover .read_more{color:#ff6e42}#yb_news #ybnews-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff;overflow:hidden}#yb_news #ybnews-list .item .top.pr .inner{display:block;padding:0;background:center top no-repeat #fff;background-size:cover;transform:translate3d(0,0,0);transition:transform .3s}#yb_news #ybnews-list .item .top .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;padding:40px;height:230px;box-sizing:border-box}#yb_news #ybnews-list .item .top img{display:block;width:100%;transform:translate3d(0,0,0);transition:transform .3s}#yb_news #ybnews-list .item .top .vertical{position:absolute;left:0;bottom:5px;display:block;padding:5px;width:100%;font-size:.78em;color:#707070;line-height:1.25em;box-sizing:border-box;text-align:center}#yb_news #ybnews-list .item .btm{background:0 0;z-index:11}#yb_news #ybnews-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#yb_news #ybnews-list .item .btm blockquote,#yb_news #ybnews-list .item .btm cite,#yb_news #ybnews-list .item .btm p{margin:0}#yb_news #ybnews-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){#yb_news{width:calc(100% - 40px)}#yb_news #ybnews-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#yb_news #ybnews-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#yb_news #ybnews-list .item{width:100%;max-width:400px;margin:0 auto 40px}#yb_news #ybnews-list .item:nth-of-type(3n+1){margin-left:auto}#yb_news #ybnews-list .item .top .inner{height:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#resources #resources-list .item,#yb_news #ybnews-list .item{width:calc(50% - 20px)}#resources #resources-list .item .top .inner,#yb_news #ybnews-list .item .top .inner{height:180px}#resources #resources-list .item:nth-of-type(3n+1){margin-left:40px}#resources #resources-list .item:nth-of-type(2n+1){margin-left:0}#yb_news #ybnews-list .item:nth-of-type(3n+1){margin-left:40px}#yb_news #ybnews-list .item:nth-of-type(2n+1){margin-left:0}}#resources,#resources_search{width:calc(100% - 80px);margin:0 auto}#resources_search{padding:36px 0}#resources_search .right{text-align:right}#resources_search .right .inner_content{-ms-flex-pack:end;justify-content:flex-end}#resources_search .inner_content{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}#resources_search h3{margin:0;color:#000041;font-size:1.67em;line-height:44px;font-weight:400;text-transform:none;letter-spacing:0}#resources{padding:60px 0}#resources #resources-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#resources #resources-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#resources #resources-list .item{position:relative;width:calc(33.3333% - 27px);margin:0 0 70px 40px;z-index:10;background:#fff}#resources #resources-list .item:nth-of-type(3n+1){margin-left:0}#resources #resources-list .item>a{display:block;color:#000}#resources #resources-list .item>a:hover .top .inner{transform:translate3d(0,0,0) scale(1.1)}#resources #resources-list .item>a:hover .read_more{color:#ff6e42}#resources #resources-list .item .type_label{display:inline-block;position:absolute;left:0;top:-34px;width:120px;height:34px;line-height:34px;text-transform:uppercase;letter-spacing:1px;color:#000;font-weight:600;text-align:center;border-top-left-radius:10px;border-top-right-radius:10px;background:#fff}#resources #resources-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff;overflow:hidden}#resources #resources-list .item .top .inner{display:block;padding:0;height:230px;box-sizing:border-box;background:center top no-repeat #fff;background-size:cover;transform:translate3d(0,0,0);transition:transform .3s}#resources #resources-list .item .btm{background:0 0;z-index:11}#resources #resources-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#resources #resources-list .item .btm blockquote,#resources #resources-list .item .btm cite,#resources #resources-list .item .btm p{margin:0}#resources #resources-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){#resources_search{width:calc(100% - 40px);padding:20px 0}#resources_search .inner_content{display:block}#resources{width:calc(100% - 40px);padding:0}#resources #resources-list{margin-top:60px}#resources #resources-list .item{width:100%;max-width:400px;margin:0 auto 70px}#resources #resources-list .item:nth-of-type(3n+1){margin-left:auto}#resources #resources-list .item .top .inner{height:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#resources #resources-list .item{width:calc(50% - 20px)}#resources #resources-list .item:nth-of-type(3n+1){margin-left:40px}#resources #resources-list .item:nth-of-type(2n+1){margin-left:0}#resources #resources-list .item .top .inner{height:180px}}.archive .item,.search .item{padding:28px 0 28px 60px;border-bottom:1px solid #e8e9f3}.archive .thumb,.search .thumb{display:block;overflow:hidden;margin:0 0 10px}.archive .thumb:hover .img,.search .thumb:hover .img{transform:scale(1.05) rotate(.02deg)}.archive .img,.search .img{height:200px;min-height:200px;background:center center no-repeat #2b59c3;background-size:cover;transform-origin:center center;transition:all .3s}.archive .meta_cats,.search .meta_cats{margin:0;line-height:1.3em}.archive .list_cont,.search .list_cont{padding-left:36px}.archive .list_cont h3,.search .list_cont h3{margin:0 0 1em;font-size:1.33em;font-weight:700;text-transform:none;letter-spacing:0}.archive .list_cont h3 a,.search .list_cont h3 a{color:#ff6e42}.archive .list_cont h3 a:hover,.search .list_cont h3 a:hover{color:#000}.archive .list_cont blockquote,.archive .list_cont cite,.archive .list_cont p,.search .list_cont blockquote,.search .list_cont cite,.search .list_cont p{margin:0 0 1em}.archive .byline,.search .byline{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center;margin:0 0 1em}.archive .byline .headshot,.search .byline .headshot{width:46px;height:46px;border:1px solid #000041;margin-right:15px;border-radius:25px;overflow:hidden;background:center top no-repeat #000041;background-size:cover}.archive .byline blockquote,.archive .byline cite,.archive .byline p,.search .byline blockquote,.search .byline cite,.search .byline p{margin:0;line-height:1.3em}.archive .byline blockquote span,.archive .byline cite span,.archive .byline p span,.search .byline blockquote span,.search .byline cite span,.search .byline p span{font-weight:600}.archive .byline blockquote a,.archive .byline cite a,.archive .byline p a,.search .byline blockquote a,.search .byline cite a,.search .byline p a{color:#000;text-decoration:none}#contact_panels #contact_tabs a:hover,.archive .byline blockquote a:hover,.archive .byline cite a:hover,.archive .byline p a:hover,.search .byline blockquote a:hover,.search .byline cite a:hover,.search .byline p a:hover{color:#ff6e42}#yb_social_bar{width:100%;background:0 0;margin:0 0 30px;padding:30px 0;border-bottom:1px solid #e8e9f3;overflow:hidden;z-index:1000;transition:all .5s}.archive #yb_social_bar{padding:0;border:none}#yb_social_bar a{display:inline-block;width:16px;height:16px;margin:0 10px 0 0;background:#707070;transition:all .3s}#yb_social_bar a:hover{background:#ff6e42}#yb_social_bar a:hover img{opacity:1}#yb_social_bar .addtoany_list a,#yb_social_bar .widget .addtoany_list a{padding:0}.single-post .rp4wp-related-posts{display:none}.single-post #related h4{margin:1em 0;text-transform:none;letter-spacing:0}.single-post #related .rp4wp-related-posts{display:block}.single-post #related .rp4wp-posts-list{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start}.single-post #related .rp4wp-posts-list li{width:calc(33.3333% - 14px);margin:0 0 0 20px}.single-post #related .rp4wp-posts-list li:first-of-type{margin:0}.single-post #related .thumb{display:block;overflow:hidden;margin:0 0 10px}.single-post #related .thumb:hover .img{transform:scale(1.05) rotate(.02deg)}.single-post #related .img{height:200px;min-height:200px;background:center center no-repeat #2b59c3;background-size:cover;transform-origin:center center;transition:all .3s}#contact_panels #contact_tabs a:after,.ss_aag .data .notes ul li:after{left:0;background:#000041;content:''}.single-post #related h5{margin:0;font-weight:400}@media screen and (max-width:767px){.archive .img,.search .img,.single-post #related .img{height:260px;min-height:260px}.archive .item,.search .item{max-width:480px;margin:0 auto;padding:28px}.archive .meta_cats a,.search .meta_cats a{display:inline-block;margin:0 0 30px}.archive .list_cont,.search .list_cont{padding-left:0}#yb_social_bar{margin:0}.single-post #related .rp4wp-posts-list{display:block;width:100%;margin-bottom:80px!important}.single-post #related .rp4wp-posts-list li{width:100%;max-width:480px;margin:0 auto 40px}.single-post #related .rp4wp-posts-list li:first-of-type{margin:0 auto 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.archive .img,.search .img,.single-post #related .img{height:120px;min-height:120px}.archive .item,.search .item{padding:28px 0}.archive .list_cont,.search .list_cont{padding-left:26px}}#contact_panels #contact_tabs .tabs_wrap{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:start;align-items:flex-start;margin-bottom:30px}#contact_panels #contact_tabs .tab{-ms-flex:0 0 30%;flex:0 0 30%;border-bottom:1px solid #707070}#contact_panels #contact_tabs a{display:block;position:relative;color:#000041;font-size:1.56em;font-weight:400;line-height:2.4em;overflow:hidden;cursor:pointer;outline:0;transition:all .3s}#contact_panels #contact_tabs a:after{position:absolute;bottom:-4px;width:100%;height:4px;transition:all .3s}#contact_panels #contact_tabs a.active:after{transform:translateY(-4px)}#contact_panels .contact_cont{display:none;opacity:0;visibility:hidden;transition:opacity .3s}#contact_panels .contact_cont.active{display:block;opacity:1;visibility:visible}#contact_panels .contact_cont#SalesC .form_embed h2{font-size:2.33em;color:#000041;text-transform:none;margin:0 0 40px;letter-spacing:0}#contact_panels .sales_locs{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}#contact_panels .sales_locs .bucket{-ms-flex:0 0 33.333%;flex:0 0 33.333%;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}#contact_panels .sales_locs h4{margin:0;font-size:1em;letter-spacing:2px}.ss_aag .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.ss_aag .data{padding:0 0 0 40px;border-left:1px solid #707070}.ss_aag .data .results ul{margin:50px 0 0;margin-left:0!important}.ss_aag .data .results .lg_text{margin:0;color:#ff6e42;font-size:2.22em;line-height:1.2em}.ss_aag .data .results .desc{margin:0 0 1.75em}.ss_aag .data .results.four .lg_text{line-height:1.4em;font-size:1.67em}.ss_aag .data .results.four .desc{margin:0 0 1.25em}.ss_aag .data .notes .label{color:#ff6e42}.ss_aag .data .notes ul{margin-top:50px;margin-left:0!important}.ss_aag .data .notes ul li{position:relative;margin:0 0 60px;font-size:1.22em;line-height:1.3em;color:#000}.ss_aag .data .notes ul li:after{position:absolute;top:calc(100% + 30px);width:35px;height:2px}.ss_aag .icon_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:start;align-items:flex-start}.ss_aag .icon_buckets .bucket{text-align:left;width:33.33%;padding:0 80px 0 0;box-sizing:border-box}.ss_aag .icon_buckets .icon{display:block;width:92px;margin:0 0 30px}.ss_aag .icon_buckets .icon img{display:block;width:100%}@media screen and (max-width:767px){.ss_aag .data .notes ul li:after,.ss_aag .data h4.lined_left:after,.ss_aag h2.lined_left:after{left:50%;transform:translateX(-50%)}.ss_aag .data .notes ul,.ss_aag .data .results ul,.ss_aag .data h4,.ss_aag .data h4.lined_left,.ss_aag h2.lined_left{text-align:center}.ss_aag .vert_align .grid{display:block}.ss_aag .data{padding:40px 0 0;border:none;border-top:1px solid #707070}.ss_aag .icon_buckets{display:block;margin:0 0 40px}.ss_aag .icon_buckets .bucket{width:80%;margin:0 auto;padding:0;text-align:center}.ss_aag .icon_buckets .icon{margin:0 auto 30px}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_aag .data .results .lg_text{font-size:2em}.ss_aag .icon_buckets .bucket{padding:0 30px 0 0}}.ss_biz_tech_results .list_col h2.lined{margin:0 0 3em}.ss_biz_tech_results .list_col h2.lined_left{margin:0 0 2.5em}.ss_biz_tech_results .list_col .inner_content{padding:0 50px 0 0}.ss_biz_tech_results .results{margin-left:0!important}.ss_biz_tech_results .results.split{column-count:2;column-gap:60px}.ss_biz_tech_results .results>li{position:relative;margin:0 0 60px;padding:0 0 0 60px}.ss_biz_tech_results .results>li:before{position:absolute;left:0;top:0;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}.ss_biz_tech_results .results>li:last-of-type{margin:0}@media screen and (max-width:767px){.ss_biz_tech_results .list_col{margin:0 0 60px}.ss_biz_tech_results .list_col h2.lined_left{text-align:center}.ss_biz_tech_results .list_col h2.lined_left:after{left:50%;transform:translateX(-50%)}.ss_biz_tech_results .list_col .inner_content{padding:0 40px}.ss_biz_tech_results .results.split{column-count:auto;column-gap:normal}}.ss_challenges .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_challenges .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.ss_challenges .icon .inner_content{width:100%;padding:0}.ss_challenges .icon img{display:block;width:100%;max-width:200px;margin:0}.ss_challenges .cont{-ms-flex-order:-1;order:-1}.ss_challenges .cont .inner{padding:0 100px 0 60px}.ss_challenges .cont .inner_content{position:relative;padding:80px;background:#eef1fa}.ss_challenges .cont .inner_content:after{position:absolute;right:-40px;top:calc(50% - 24px);width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #eef1fa;content:''}.ss_challenges .cont .inner_content ul{margin-left:0!important}.ss_challenges .cont .inner_content ul li{color:#000;margin:0 0 1.5em}@media screen and (max-width:767px){.ss_challenges .grid{display:block}.ss_challenges .icon{margin:0 0 80px}.ss_challenges .icon img{margin:0 auto}.ss_challenges .cont .inner{padding:0}.ss_challenges .cont .inner_content{padding:40px}.ss_challenges .cont .inner_content:after{position:absolute;right:calc(50% - 24px);top:-40px;border-width:0 24px 40px;border-color:transparent transparent #eef1fa}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_challenges .cont .inner{padding:0 100px 0 0}.ss_challenges .cont .inner_content{padding:40px}}.ss_cont_rows{text-align:left}.ss_cont_rows .vert_align{margin-bottom:80px}.ss_cont_rows .vert_align.last{margin:0}.ss_cont_rows .vert_align .inner{display:table;height:100%;width:100%}.ss_cont_rows .vert_align .inner_content{display:table-cell;height:100%;width:100%;vertical-align:middle}.ss_cont_rows .vert_align:last-of-type{margin-top:0}.ss_cont_rows .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.ss_cont_rows .img{-ms-flex-order:-1;order:-1}.ss_cont_rows .img.push-right{-ms-flex-order:1;order:1}.ss_cont_rows .img .vid_cont{border:1px solid #000}.ss_cont_rows .img .img_cont{display:block;min-height:300px;background:center center no-repeat #fff;background-size:cover;border:1px solid #000}.ss_cont_rows .cont .inner_content{padding:0 0 0 80px}.ss_cont_rows .cont .inner_content.flip{padding:0 80px 0 0}@media screen and (max-width:767px){.ss_cont_rows .grid{display:block}.ss_cont_rows .vert_align{margin-bottom:40px}.ss_cont_rows .cont .inner_content,.ss_cont_rows .cont .inner_content.flip{padding:0}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_cont_rows .img .img_cont{min-height:200px}.ss_cont_rows .cont .inner_content{padding:0 0 0 50px}.ss_cont_rows .cont .inner_content.flip{padding:0 50px 0 0}}.ss_db_reqs .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_db_reqs .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.ss_db_reqs .icon .inner_content{width:100%;padding:0}.ss_db_reqs .icon img{display:block;width:100%;max-width:200px;margin:0}.ss_db_reqs .cont .inner{padding:0 60px 0 100px}.ss_db_reqs .cont .inner_content{position:relative;padding:80px 100px;background:#eef1fa}.ss_db_reqs .cont .inner_content:after{position:absolute;left:-40px;top:calc(50% - 24px);width:0;height:0;border-style:solid;border-width:24px 40px 24px 0;border-color:transparent #eef1fa transparent transparent;content:''}.ss_img_cont .img,.ss_test .test_bg{position:relative}.ss_db_reqs .cont .inner_content ul{margin-left:0}.ss_db_reqs .cont .inner_content ul li{color:#000;margin:0 0 .25em}@media screen and (max-width:767px){.ss_db_reqs .grid{display:block}.ss_db_reqs .icon{margin:0 0 80px}.ss_db_reqs .icon img{margin:0 auto}.ss_db_reqs .cont .inner{padding:0}.ss_db_reqs .cont .inner_content{padding:40px 60px}.ss_db_reqs .cont .inner_content:after{left:calc(50% - 24px);top:-40px;border-width:0 24px 40px;border-color:transparent transparent #eef1fa}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_db_reqs .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.ss_db_reqs .cont .inner{padding:0 0 0 100px}.ss_db_reqs .cont .inner_content{padding:40px 60px}}.ss_img_cont h3{margin:0 0 1em;font-size:2.33em;text-transform:none;letter-spacing:0;color:#000041}.ss_img_cont h3 a{text-decoration:underline;color:#2b59c3}.ss_img_cont h3 a:hover{color:#ff6e42;text-decoration:none}.ss_img_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_img_cont .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.ss_img_cont .cont .inner_content{padding:0 60px}.ss_img_cont .img .inner_content{position:relative;margin:0 auto;z-index:15}.ss_img_cont .img img{display:block;width:100%}@media screen and (max-width:767px){.ss_img_cont .grid{display:block}.ss_img_cont .cont .inner_content{padding:0}.ss_img_cont .img{margin:0 0 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_img_cont h3{font-size:2em}.ss_img_cont .cont .inner_content{padding:0 0 0 40px}}.ss_tech_results .metric_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top}.ss_tech_results .metric_buckets .bucket{width:25%;padding:0 10px;box-sizing:border-box;text-align:center}.ss_tech_results .metric_buckets .lg_text{margin:0 0 .5em;font-size:3.33em;color:#000041;line-height:1;font-variant:small-caps}@media screen and (max-width:767px){.ss_tech_results .metric_buckets{-ms-flex-wrap:wrap;flex-wrap:wrap}.ss_tech_results .metric_buckets .bucket{-ms-flex:0 0 50%;flex:0 0 50%;width:auto;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}}.ss_test{padding:100px 0}.page .ss_test{padding-bottom:160px}.ss_test .test_bg{padding:100px 44px 160px;border:1px dashed #000041;background:#eef1fa}.ss_test .test_bg .cites_cont,.ss_test .test_bg:before{position:absolute;transform:translate(-50%,-50%);left:50%}.ss_test .test_bg:before{top:0;width:108px;height:108px;padding-right:15px;border-radius:60px;border:1px dashed #000041;background:#fff;font-size:6.67em;line-height:154px;text-align:center;font-style:italic;color:#000041;box-sizing:border-box;content:'“'}.ss_test .test_bg .cite,.ss_test .test_bg .quote{padding:0 56px}.ss_test .test_bg .quote.single{text-align:center}.ss_test .test_bg .quote blockquote,.ss_test .test_bg .quote cite,.ss_test .test_bg .quote p{margin:0;font-size:1.33em;line-height:1.5em;font-style:italic}.ss_test .test_bg .cites_cont{top:100%;width:calc(100% - 88px)}.ss_test .test_bg .cite .inner{padding:30px 70px;border:1px solid #000;background:#fff}.ss_test .test_bg .cite .inner_content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{-ms-flex:0 0 112px;flex:0 0 112px;width:112px;height:112px;margin:0 30px 0 0;border-radius:60px;overflow:hidden;border:2px solid #ff6e42;background:center center no-repeat #fff;background-size:cover}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{margin:0;font-weight:700}.ss_test .test_bg .cite blockquote span,.ss_test .test_bg .cite cite span,.ss_test .test_bg .cite p span{display:block;font-weight:400}@media screen and (max-width:767px){.ss_test{padding:40px 0 100px}.page .ss_test{padding-bottom:100px}.ss_test .test_bg{padding:70px 20px 160px}.ss_test .test_bg .quote{padding:0 20px}.ss_test .test_bg .quote:first-of-type{margin-bottom:40px}.ss_test .test_bg .cites_cont{width:100%}.ss_test .test_bg .cite .inner{max-width:260px;margin:10px auto;padding:20px}.ss_test .test_bg .cite .inner_content{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{-ms-flex:0 0 60px;flex:0 0 60px;width:60px;height:60px;margin:0 20px 0 0}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{-ms-flex:0 0 calc(100% - 84px);flex:0 0 calc(100% - 84px)}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_test .test_bg{position:relative;padding:100px 44px 160px;border:1px dashed #000041;background:#eef1fa}.ss_test .test_bg .cites_cont,.ss_test .test_bg:before{position:absolute;left:50%;transform:translate(-50%,-50%)}.ss_test .test_bg:before{top:0;width:108px;height:108px;padding-right:15px;border-radius:60px;border:1px dashed #000041;background:#fff;font-size:6.67em;line-height:154px;text-align:center;font-style:italic;color:#000041;box-sizing:border-box;content:'“'}.ss_test .test_bg .cite,.ss_test .test_bg .quote{padding:0 20px}.ss_test .test_bg .quote.single{text-align:center}.ss_test .test_bg .quote blockquote,.ss_test .test_bg .quote cite,.ss_test .test_bg .quote p{margin:0;font-size:1.33em;line-height:1.5em;font-style:italic}.ss_test .test_bg .cites_cont{top:100%;width:calc(100% - 88px)}.ss_test .test_bg .cite .inner{padding:20px;border:1px solid #000;background:#fff}.ss_test .test_bg .cite .inner_content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{-ms-flex:0 0 80px;flex:0 0 80px;width:80px;height:80px;margin:0 20px 0 0}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{-ms-flex:1 0 calc(100% - 100px);flex:1 0 calc(100% - 100px)}}h1,h2,h3,h4,h5,h6{line-height:1.25em;font-family:"Source Sans Pro",sans-serif}.ss_yb_solution h2.lined{margin-bottom:2em}.ss_yb_solution .icon_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:start;align-items:flex-start}.ss_yb_solution .icon_buckets .bucket{-ms-flex:1 0 25%;flex:1 0 25%;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch;padding:0 10px;box-sizing:border-box;text-align:center}.ss_yb_solution .icon_buckets .icon{display:-ms-flexbox;display:flex;width:112px;height:112px;margin:0 auto 20px}.ss_yb_solution .icon_buckets .icon img{display:block;width:100%}@media screen and (max-width:767px){.ss_yb_solution .icon_buckets{-ms-flex-wrap:wrap;flex-wrap:wrap}.ss_yb_solution .icon_buckets .bucket{-ms-flex:0 0 50%;flex:0 0 50%;width:auto;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}}* ::selection{background:#ff6e42}hr{height:1px;background:#2b59c3;border:none;margin:24px 0}a{text-decoration:none;transition:all .3s;color:#2b59c3}a:hover{color:#ff6e42}h1,h2,h3,h4,h5,h6{margin:0 0 .5em;font-weight:400;color:#2b59c3}h1.large_margin,h2.large_margin,h3.large_margin,h4.large_margin,h5.large_margin,h6.large_margin{margin:0 0 1em}h1{font-family:"Source Sans Pro",sans-serif;font-size:3.89em;line-height:1.05em}h1.midlong{font-size:2.78em}h1.long{font-size:2.22em}#hero_ss h1{font-size:1.78em;line-height:1.375em}h2{font-size:2em;font-weight:400;color:#ff6e42;text-transform:uppercase;letter-spacing:4px}h2.large_purple{font-size:2.33em;letter-spacing:0;text-transform:none;color:#000041}h2.lined,h2.lined_left{position:relative;margin-bottom:1.5em}h2.lined:after,h2.lined_left:after{position:absolute;left:50%;top:calc(100% + 20px);width:75px;height:2px;background:#000041;content:'';transform:translateX(-50%)}h2.lined.alt,h2.lined_left.alt{margin:0 0 .75em;text-transform:none;letter-spacing:0;color:#fff}h2.lined.alt:after,h2.lined_left.alt:after{background:#fff}h3.lined:after,h3.lined_left:after,h4.lined:after,h4.lined_left:after{width:75px;height:2px;background:#000041;content:''}h2.lined_left:after{left:0;transform:none}h2.title_case{text-transform:none!important;letter-spacing:0!important}h3{color:#ff6e42;font-size:1.5em;text-transform:uppercase;letter-spacing:3px}h3.lined,h3.lined_left{position:relative;margin-bottom:1.5em}h3.lined:after,h3.lined_left:after{position:absolute;left:50%;top:calc(100% + 20px);transform:translateX(-50%)}h3.lined_left:after{left:0;transform:none}h3.title_case{text-transform:none!important;letter-spacing:0!important}h4{margin:0 0 .5em;color:#000;font-family:"Source Sans Pro",sans-serif;font-size:1.22em;line-height:1.45em;font-weight:600;text-transform:uppercase;letter-spacing:3px}b,h5,strong{font-weight:700}h4.lined,h4.lined_left{position:relative;margin-bottom:1.5em}h5,h6{margin:0;font-size:1em}h4.lined:after,h4.lined_left:after{position:absolute;left:50%;top:calc(100% + 12px);transform:translateX(-50%)}h4.lined_left:after{left:0;transform:none}h4.checkmark{position:relative;padding:0 0 0 60px}h4.checkmark:before{position:absolute;left:0;top:-5px;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}h4.title_case{text-transform:none!important;letter-spacing:0!important}h5{}sub,sup{vertical-align:baseline;position:relative;top:-.55em;line-height:0;font-size:60%}sub{top:.55em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg p{font-size:1em}.wysiwyg blockquote .btn,.wysiwyg cite .btn,.wysiwyg p .btn{margin-bottom:0!important}.wysiwyg ol,.wysiwyg ul{margin:1em 0 1.56em 20px;list-style:decimal}.wysiwyg ul{padding:0;list-style:disc}.wysiwyg ol li,.wysiwyg ul li{display:list-item;margin-bottom:.25em;font-size:1em;line-height:1.45em;color:#707070}.wysiwyg ol li{list-style:decimal}.wysiwyg ul li{position:relative;list-style:none}.wysiwyg ul li:before{position:absolute;left:-20px;top:.5em;width:8px;height:8px;content:'';border-radius:4px;background:#2b59c3}.single-post #content ul li,blockquote{position:relative}.wysiwyg a{text-decoration:underline;color:#2b59c3}.wysiwyg a:hover{color:#ff6e42}.wysiwyg .btn a:hover,.wysiwyg a.btn:hover{color:#fff}.wysiwyg blockquote:last-of-type span.intro,.wysiwyg cite:last-of-type span.intro,.wysiwyg p:last-of-type span.intro,.wysiwyg.plast blockquote:last-of-type,.wysiwyg.plast cite:last-of-type,.wysiwyg.plast p:last-of-type{margin:0}.wysiwyg.plast blockquote:first-of-type,.wysiwyg.plast cite:first-of-type,.wysiwyg.plast p:first-of-type{margin-bottom:1.56em}.wysiwyg.plast blockquote:only-of-type,.wysiwyg.plast cite:only-of-type,.wysiwyg.plast p:only-of-type{margin:0}.single-post #content ol,.single-post #content ul{margin:1em 0 1.56em 20px;list-style:decimal}.single-post #content ul{padding:0;list-style:disc}.single-post #content ol li,.single-post #content ul li{display:list-item;margin-bottom:.25em;font-size:1em;line-height:1.45em;color:#000}.single-post #content ol li{list-style:decimal}.single-post #content ul li:before{display:none}.wysiwyg .special_ol li,ol li{display:block}blockquote,cite,p,p.cite{margin-bottom:1.56em;line-height:1.56em}blockquote b,blockquote strong,cite b,cite strong,p b,p strong,p.cite b,p.cite strong{font-family:"Source Sans Pro",sans-serif}blockquote.footnote,cite.footnote,p.footnote{font-size:.8em;font-style:italic}blockquote,blockquote.cite,cite,cite.cite,p.cite{font-size:1.4em;line-height:1.5em;color:#000;font-style:italic}em,i{font-style:italic}blockquote{font-weight:400;margin:0 0 2em;padding:0;border:none;text-align:left}blockquote blockquote,blockquote cite,blockquote p,blockquote p.cite{margin:0}.wysiwyg blockquote{margin:0 0 2em;padding:0}blockquote.cite,cite,cite.cite,p.cite{font-weight:700;margin-bottom:1.56em}.wysiwyg blockquote.cite,.wysiwyg cite,.wysiwyg cite.cite,.wysiwyg p.cite{margin:0}.wysiwyg .special_ol>li:before,ol>li:before{content:counters(item,".") ". ";margin-right:100%;right:10px}blockquote.cite span,cite span,cite.cite span,p.cite span{display:block;font-weight:400}img{vertical-align:bottom}.wysiwyg img{max-width:100%;height:auto}.screen-reader-text{clip:rect(1px,1px,1px,1px);position:absolute;top:10px;left:10px;font-family:"Source Sans Pro",sans-serif;font-size:.89em;font-weight:400;color:#2b59c3;z-index:10000;opacity:0;transition:opacity .2s}.play_btn,.play_btn:after,.read_more{transition:all .3s}.site-navigation .screen-reader-text{left:auto;right:10px}.screen-reader-text:focus{clip:auto;opacity:1}.wysiwyg .tab_indent_wrap{padding-left:36px}.wysiwyg .special_ol>li{position:relative;counter-increment:item}.wysiwyg .special_ol>li:before{position:absolute}ol>li{counter-increment:item;position:relative}ol>li:before{position:absolute}@media screen and (max-width:767px){h2 br,h3 br,h4 br,h5 br,h6 br{display:none}h1{font-size:2.44em}h1.midlong{font-size:1.75em}h1.long{font-size:1.4em}h2{font-size:2.22em}h3{font-size:1.56em}h4{font-size:1.22em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg ol,.wysiwyg p,.wysiwyg ul{font-size:.89em}blockquote.cite,cite,cite.cite,p.cite{font-size:1em}blockquote,cite,p,p.cite{font-size:.89em}}@media screen and (min-width:768px) and (max-width:1024px){h1{font-size:3em}h1.midlong{font-size:2.25em}h1.long{font-size:1.75em}#hero_ss h1{font-size:1.5em}h2{font-size:2.44em}h3{font-size:1.78em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg ol,.wysiwyg p,.wysiwyg ul{font-size:.89em}blockquote.cite,cite,cite.cite,p.cite{font-size:1em}blockquote,cite,p,p.cite{font-size:.89em}}@media print{@page{margin:.5in}*{-webkit-print-color-adjust:exact;print-color-adjust:exact;outline:0}body,html{color:#000!important;background:#fff!important;width:7.5in!important;overflow:hidden;margin:0;padding:0}.bg-img,blockquote,img,pre,table{page-break-inside:avoid}dl,ol,ul{page-break-before:avoid}}.btn a,.wp-block-button__link,a span.btn,a.btn,button.btn,button.gpnf-add-entry,input[type=image],input[type=submit],input[type=button]{display:inline-block;position:relative;margin:0 0 1.67em;padding:10px 20px;width:auto;background:#ff6e42!important;font-family:"Source Sans Pro",sans-serif;font-size:1.25em;font-weight:600;font-style:normal;line-height:1.4em!important;color:#fff!important;border:2px solid #ff6e42;border-radius:100px;text-decoration:none!important;text-transform:none;box-sizing:border-box;text-align:center;-webkit-appearance:none;transition:all .3s;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none}.btn a.offset,.wp-block-button__link.offset,a span.btn.offset,a.btn.offset,button.btn.offset,button.gpnf-add-entry.offset,input[type=image].offset,input[type=submit].offset,input[type=button].offset{margin-left:20px}.btn a.outline,.wp-block-button__link.outline,a span.btn.outline,a.btn.outline,button.btn.outline,button.gpnf-add-entry.outline,input[type=image].outline,input[type=submit].outline,input[type=button].outline{background:0 0!important;color:#ff6e42!important}.btn a.small,.wp-block-button__link.small,a span.btn.small,a.btn.small,button.btn.small,button.gpnf-add-entry.small,input[type=image].small,input[type=submit].small,input[type=button].small{padding:5px 10px;font-size:.9em}.btn a.small.sq,.wp-block-button__link.small.sq,a span.btn.small.sq,a.btn.small.sq,button.btn.small.sq,button.gpnf-add-entry.small.sq,input[type=image].small.sq,input[type=submit].small.sq,input[type=button].small.sq{padding:10px 40px 10px 15px}.btn a.small.sq:after,.wp-block-button__link.small.sq:after,a span.btn.small.sq:after,a.btn.small.sq:after,button.btn.small.sq:after,button.gpnf-add-entry.small.sq:after,input[type=image].small.sq:after,input[type=submit].small.sq:after,input[type=button].small.sq:after{right:15px;top:calc(50% + 1px)}.btn a.sq,.wp-block-button__link.sq,a span.btn.sq,a.btn.sq,button.btn.sq,button.gpnf-add-entry.sq,input[type=image].sq,input[type=submit].sq,input[type=button].sq{padding-right:40px;border-radius:0;border:2px solid #000041;background:0 0!important;color:#000041!important}.btn a.sq:after,.wp-block-button__link.sq:after,a span.btn.sq:after,a.btn.sq:after,button.btn.sq:after,button.gpnf-add-entry.sq:after,input[type=image].sq:after,input[type=submit].sq:after,input[type=button].sq:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%)}.btn a.sq:hover,.wp-block-button__link.sq:hover,a span.btn.sq:hover,a.btn.sq:hover,button.btn.sq:hover,button.gpnf-add-entry.sq:hover,input[type=image].sq:hover,input[type=submit].sq:hover,input[type=button].sq:hover{background:#000041!important;color:#ff6e42!important;border-color:#000041!important}.btn a:hover,.wp-block-button__link:hover,a span.btn:hover,a.btn:hover,button.btn:hover,button.gpnf-add-entry:hover,input[type=image]:hover,input[type=submit]:hover,input[type=button]:hover{color:#fff!important;border-color:#2b59c3!important;background:#2b59c3!important;text-decoration:none!important}input[type=submit]:focus,input[type=button]:focus{outline:0}.btn a.disabled,.btn a.disabled:hover,.wp-block-button__link.disabled,.wp-block-button__link.disabled:hover,a.btn.disabled,a.btn.disabled:hover,button.btn:disabled,button.btn:disabled:hover,button.gpnf-add-entry:disabled,button.gpnf-add-entry:disabled:hover,input[type=image]:disabled,input[type=image]:disabled:hover,input[type=submit]:disabled,input[type=submit]:disabled:hover,input[type=button]:disabled,input[type=button]:disabled:hover{cursor:default;color:#fff!important;background:#eef1fa!important;border-color:#eef1fa!important}.play_btn{display:block;position:absolute;left:50%;top:50%;margin:-48px 0 0 -48px;width:96px;height:96px;border-radius:48px;background:rgba(255,255,255,.8);opacity:1;visibility:visible;z-index:20;cursor:pointer}.play_btn:after{position:absolute;left:23px;top:29px;margin:0;width:46px;height:38px;line-height:38px;text-align:center;color:#ff6e42;font-family:dashicons;content:'\f522';font-size:58px}.play_btn:hover{background:#fff}.play_btn:hover:after{color:#2b59c3}.play_btn.off{opacity:0;visibility:hidden}#header_cta,#header_cta_mobile{float:right;margin:18px 0 0 48px;padding:3px 15px;line-height:33px!important}#header_cta_mobile{float:left;margin:18px 0 0}.read_more{display:inline-block;position:relative;padding-right:40px;text-decoration:none;font-size:1.67em;line-height:1.333em;font-weight:600;color:#000041}.read_more:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%)}.wp-block-buttons{width:100%;max-width:1360px;margin-right:auto;margin-left:auto}.wp-block-buttons .wp-block-button{margin-bottom:0;margin-right:20px}.wp-block-buttons .wp-block-button:last-child{margin-right:0}.wp-block-button__link{border-radius:0}@media screen and (max-width:990px){#header_cta{display:none}#header_cta_mobile{display:inline-block}}@media only screen and (min-width:991px) and (max-width:1360px){#header_cta{margin-left:18px}}#search_container,#search_container_mobile{float:right;width:220px;height:40px;margin:18px 0 0;border-radius:50px;border:1px solid #fff}#search_container form.search-form,#search_container_mobile form.search-form{width:100%;height:100%}#search_container label,#search_container_mobile label{float:left;width:calc(100% - 40px);height:100%;border-radius:50px;overflow:hidden}#search_container label input.search-field,#search_container_mobile label input.search-field{width:100%;height:100%;border:none;margin:0;padding:0 15px;box-sizing:border-box;font-size:.8em;font-weight:400;line-height:40px;background:0 0;color:#fff;-webkit-appearance:none}#search_container label input.search-field::-webkit-search-cancel-button,#search_container_mobile label input.search-field::-webkit-search-cancel-button{-webkit-appearance:none}#search_container label input.search-field::-ms-clear,#search_container_mobile label input.search-field::-ms-clear{display:none}#search_container button[type=submit]:focus,#search_container input:focus,#search_container_mobile button[type=submit]:focus,#search_container_mobile input:focus{outline:0}#search_container .search-submit,#search_container_mobile .search-submit{float:right;position:relative;width:40px;height:40px;margin:0;padding:0;border:none;box-shadow:none;background:0 0;text-indent:-9999px;overflow:hidden;cursor:pointer;border-radius:0 20px 20px 0}table td,table th,table tr{border-left:1px solid #707070}table td,table th,table tr:nth-child(even) td{background:#eef1fa}#search_container .search-submit:focus,#search_container_mobile .search-submit:focus{outline:0}#search_container .search-submit svg,#search_container_mobile .search-submit svg{display:block;position:absolute;left:10px;top:7px;width:20px;transition:all .2s}#search_container .search-submit svg #search-mag-glass,#search_container_mobile .search-submit svg #search-mag-glass{transition:all .2s;fill:#fff}#search_container .search-submit:hover svg #search-mag-glass,#search_container_mobile .search-submit:hover svg #search-mag-glass{fill:#ff6e42}#search_container ::-webkit-input-placeholder,#search_container_mobile ::-webkit-input-placeholder{color:#fff}#search_container :-moz-placeholder,#search_container_mobile :-moz-placeholder{color:#fff}#search_container ::-moz-placeholder,#search_container_mobile ::-moz-placeholder{color:#fff}#search_container :-ms-input-placeholder,#search_container_mobile :-ms-input-placeholder{color:#fff}#search_container_mobile{display:none;float:left;margin-left:20px}@media screen and (max-width:990px){#search_container{display:none}#search_container_mobile{display:block}}@media screen and (min-width:991px) and (max-width:1260px){#search_container{width:calc(100% - 140px)}}table{border-collapse:collapse;border-spacing:0;width:100%;margin:1em 0;border:1px solid #707070;border-top:none;table-layout:auto}table td,table th{padding:1em}table th{background:#fff}table tr{border-top:1px solid #707070}table td:first-of-type{width:40%!important}.narrow_table table td:first-of-type{width:55%!important}.wysiwyg table{border:1px solid #eef1fa;border-top:none;table-layout:auto}.wysiwyg table td,.wysiwyg table th{border-left:1px solid #eef1fa;padding:1em;background:#fff}.wysiwyg table td:first-of-type,.wysiwyg table th:first-of-type{width:auto!important}.wysiwyg table tr{border-top:1px solid #eef1fa;border-left:1px solid #eef1fa}.wysiwyg table tr:nth-child(even) td{background:#fff}.wysiwyg table tr:first-of-type td{background:#eef1fa;font-weight:700;text-transform:uppercase}.wptb-shortcode-container.wptb-ph-element{position:absolute;top:0;right:0;bottom:0;left:0}.wptb-shortcode-container.wptb-ph-element wptb_shortcode_container_element>div{height:100%;width:100%}.content_section.ybtable .wptb-table-container{margin-bottom:20px}.content_section.ybtable .wptb-image-wrapper img{width:auto!important;display:block;margin:0 auto}.content_section.ybtable .table_footnote{margin:0 auto;width:70%;text-align:center}.info_tip{position:absolute;right:10px;top:50%;width:22px;height:22px;border-radius:11px;margin-top:-10px;background:url(../../images/info-tip-icon.svg) center center no-repeat #fff;background-size:cover;z-index:10}.info_tip:hover .tip{display:block}.info_tip .tip{display:none;position:absolute;left:calc(100% + 5px);top:-30px;width:400px;height:auto;border:1px solid #707070;background:#fff;z-index:10000}.pagination,ul.alm-paging{z-index:1;list-style:none}.info_tip .tip .inner{display:block;padding:18px 24px;color:#000;line-height:1.45em;font-size:.9em}@media screen and (max-width:767px){.content_section.ybtable .table_footnote{width:90%}.content_section.ybtable .wptb-table-container-matrix{overflow-y:scroll!important}.info_tip:hover .tip{display:none}.info_tip.showtip .tip{display:block}.info_tip .tip{width:200px;height:auto}}.widget{margin:0 0 20px;background:#eef1fa;border-radius:10px;overflow:hidden}.widget .inner{padding:30px 20px}.widget.widget_pplrpsts_popular_posts_widget .widget-title{position:relative;margin-bottom:2.5em;font-size:1.22em;font-weight:600}.widget.widget_pplrpsts_popular_posts_widget .widget-title:after{position:absolute;left:0;top:calc(100% + 20px);width:75px;height:2px;background:#000041;content:''}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts article{padding:0;border-top:1px solid #e8e9f3}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts article:first-of-type{border:none}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts h4{margin:0;font-size:1em;font-weight:400;text-transform:none;letter-spacing:0}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts h4 a{display:block;padding:10px 0;color:#141920}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts h4 a:hover{color:#ff6e42}.widget.widget_search{margin:0 0 30px!important}.widget.widget_search form.search-form{width:100%;height:40px;border-radius:50px;background:#fff;overflow:hidden}.widget.widget_search label{float:left;width:calc(100% - 40px);height:100%}.widget.widget_search label input.search-field{width:100%;height:40px;border:none;margin:0;padding:0 15px;box-sizing:border-box;font-size:.8em;font-weight:400;line-height:40px;background:0 0;color:#000;-webkit-appearance:none}.widget.widget_search label input.search-field::-webkit-search-cancel-button{-webkit-appearance:none}.widget.widget_search label input.search-field::-ms-clear{display:none}.widget.widget_search button[type=submit]:focus,.widget.widget_search input:focus{outline:0}.widget.widget_search .search-submit{float:right;position:relative;width:40px;height:40px;margin:0;padding:0;border:none;box-shadow:none;background:0 0;text-indent:-9999px;overflow:hidden;cursor:pointer;border-radius:0 20px 20px 0}.widget.widget_search .search-submit:focus{outline:0}.widget.widget_search .search-submit svg{display:block;position:absolute;left:10px;top:7px;width:20px;transition:all .2s}.widget.widget_search .search-submit svg #search-mag-glass{transition:all .2s;fill:#000}.widget.widget_search .search-submit:hover svg #search-mag-glass{fill:#ff6e42}.widget.widget_search ::-webkit-input-placeholder{color:#000}.widget.widget_search :-moz-placeholder{color:#000}.widget.widget_search ::-moz-placeholder{color:#000}.widget.widget_search :-ms-input-placeholder{color:#000}.widget_wrap{margin:30px 0;padding:30px 20px;background:#eef1fa;border-radius:10px;overflow:hidden}.widget_wrap .widget{margin:0 0 20px;background:0 0;border-radius:0}.blog_ctas .widget .inner{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.blog_ctas .widget .inner .icon{width:45%;height:100px;background:center center no-repeat;background-size:auto 50%}.blog_ctas .widget .inner h3{width:55%;font-size:1.22em;line-height:1.3em;color:#000041;font-weight:600;text-transform:none;letter-spacing:0}.blog_ctas .widget .inner h3 span{color:#ff6e42}@media only screen and (min-width:768px) and (max-width:1024px){.blog_ctas .widget .inner{display:block}.blog_ctas .widget .inner .icon{width:100%;margin:0 auto 20px;height:70px;background-size:auto 100%}.blog_ctas .widget .inner h3{width:100%}}.paging-navigation{text-align:center}.pagination{position:relative;display:inline-block;text-align:center;margin:0 auto;padding:48px 60px}.pagination:after,.pagination:before{position:absolute;left:0;top:50%;transform:translateY(-50%);width:40px;height:9px;background:url(../../images/pagination-arrow.svg) center center no-repeat;content:''}.pagination:after{left:auto;right:0;transform:translateY(-50%) rotate(180deg)}.pagination .page-numbers{display:inline-block;width:48px;height:48px;margin:0 10px;padding:13px 5px;box-sizing:border-box;border-radius:50px;color:#000;font-size:22px;line-height:22px;font-weight:600;border:1px solid #707070;border:none;box-shadow:inset 0 0 0 1px #707070;background:#f2f3f8;text-decoration:none;transition:all .3s ease}.pagination .page-numbers:focus,.pagination .page-numbers:hover{color:#222;background-color:#fff;box-shadow:inset 0 0 0 2px #ff6e42}.pagination .page-numbers:active{background-color:#fff;box-shadow:inset 0 0 0 2px #ff6e42}.pagination .page-numbers.current{background:#fff;box-shadow:inset 0 0 0 2px #ff6e42;color:#000;cursor:default;text-decoration:none}.pagination .page-numbers.dots{background:0 0;box-shadow:none;padding-right:0;padding-left:0;width:20px}.pagination .page-numbers.next,.pagination .page-numbers.prev{width:100px;font-size:18px;font-weight:400}ul.alm-paging{position:relative;display:inline-block;text-align:center;margin:0 auto;padding:48px 60px;opacity:0}ul.alm-paging:after,ul.alm-paging:before{position:absolute;left:0;top:50%;transform:translateY(-50%);width:40px;height:9px;background:url(../../images/pagination-arrow.svg) center center no-repeat;content:''}.alm-paging-wrap .alm-reveal,ul.alm-paging>li{position:relative}ul.alm-paging:after{left:auto;right:0;transform:translateY(-50%) rotate(180deg)}ul.alm-paging.empty{display:none}ul.alm-paging>li{background:0 0;overflow:hidden;list-style:none;padding:0;margin:0 10px;line-height:1;display:inline-block;vertical-align:top;font-size:1em}ul.alm-paging>li:after,ul.alm-paging>li:before{content:none}ul.alm-paging>li a{display:block;width:100px;height:48px;padding:15px;box-sizing:border-box;border-radius:50px;color:#000;font-weight:400;border:1px solid #707070;border:none;box-shadow:inset 0 0 0 1px #707070;background:#f2f3f8;text-decoration:none;transition:all .3s ease}ul.alm-paging>li a:active,ul.alm-paging>li a:focus,ul.alm-paging>li a:hover{background-color:#fff;box-shadow:inset 0 0 0 2px #ff6e42}ul.alm-paging>li a:focus,ul.alm-paging>li a:hover{color:#222}ul.alm-paging>li.num a{width:48px;font-size:22px;padding:13px 15px;font-weight:600}ul.alm-paging>li.disabled a{cursor:default!important;opacity:.3}ul.alm-paging>li.disabled a:focus,ul.alm-paging>li.disabled a:hover{color:#222;background-color:#f2f3f8;box-shadow:inset 0 0 0 1px #707070}ul.alm-paging>li.active a{background:#fff;box-shadow:inset 0 0 0 2px #ff6e42;color:#000;cursor:default;text-decoration:none}.ajax-load-more-wrap .alm-paging-content{transition:all .25s ease}.ajax-load-more-wrap.alm-loading .alm-paging-content{opacity:.5!important}.ajax-load-more-wrap.alm-paging.alm-is-filtering,.alm-paging-wrap .alm-paging-loading{background-color:rgba(255,255,255,.1);background-image:url(../../images/loading.svg);background-repeat:no-repeat;background-position:center center}.ajax-load-more-wrap.alm-loading .ajax-load-more-wrap.alm-is-filtering,.ajax-load-more-wrap.alm-loading.alm-paging .alm-paging-wrap{min-height:150px}.ajax-load-more-wrap.alm-is-filtering{background-color:transparent}.alm-paging-wrap .alm-paging-loading{display:block;opacity:0;visibility:hidden;position:absolute;top:0;left:0;width:100%;height:100%;z-index:9999;transition:all .25s ease}.alm-loading .alm-paging-wrap .alm-paging-loading{visibility:visible;opacity:1}.slick-loading .slick-slide,.slick-loading .slick-track{visibility:hidden}@media screen and (max-width:767px){.pagination{padding:48px 30px;width:100%;box-sizing:border-box}.pagination:after,.pagination:before{width:20px;height:9px;background-size:100% auto}.pagination .page-numbers{display:inline-block;width:36px;height:36px;margin:0;padding:10px 5px;font-size:16px;line-height:16px}.pagination .page-numbers.next,.pagination .page-numbers.prev{width:80px;font-size:16px}ul.alm-paging{padding:48px 30px}ul.alm-paging:after,ul.alm-paging:before{width:20px;height:9px;background-size:100% auto}ul.alm-paging>li{margin:0 2px}ul.alm-paging>li a{width:80px;height:36px;padding:10px}ul.alm-paging>li.num a{width:36px;font-size:16px;padding:10px}}#hero_alt{position:relative;height:290px;min-height:290px;background-color:#2b59c3;background-repeat:no-repeat;background-position:center center;background-size:cover;z-index:15}#hero_alt.blog h1,#hero_alt.search h1{width:70%;color:#fff;text-transform:none;letter-spacing:1px}#hero_alt.blog .inner,#hero_alt.search .inner{position:absolute;left:60px;top:50%;width:calc(100% - 120px);max-width:none;transform:translateY(-50%)}#hero .inner,#hero_alt .inner{transform:translate(-50%,-50%)}#hero_alt .byline{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center;margin:1.5em 0 0}#hero_alt .byline .headshot{width:46px;height:46px;border:1px solid #000041;margin-right:15px;border-radius:25px;overflow:hidden;background:center top no-repeat #000041;background-size:cover}#hero_alt .byline blockquote,#hero_alt .byline cite,#hero_alt .byline p{margin:0;line-height:1.3em;color:#fff}#hero_alt .byline blockquote span,#hero_alt .byline cite span,#hero_alt .byline p span{font-weight:600}#hero h1,#hero_alt h1{font-weight:400;text-transform:uppercase}#hero_alt .byline blockquote a,#hero_alt .byline cite a,#hero_alt .byline p a{color:#fff;text-decoration:none}#hero_alt .byline blockquote a:hover,#hero_alt .byline cite a:hover,#hero_alt .byline p a:hover{color:#fff}#hero_alt.grad_orange_purpledark{background:#000041;background:linear-gradient(30deg,#ff6e42 0,#741782 50%,#000041 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff6e42', endColorstr='#000041', GradientType=1 )}#hero h1:after,#hero h1:before{background:#fff;content:''}#hero,#hero_ss{background-repeat:no-repeat}#hero_alt:before{position:absolute;top:0;right:0;bottom:0;left:0;content:'';z-index:-1}#hero_alt .content_section_inner{position:relative;width:calc(100% - 80px);max-width:1360px;height:100%;min-height:290px;z-index:10;text-align:left}#hero_alt .inner{position:absolute;left:50%;top:50%;width:70%;max-width:900px}#hero_alt h1{display:block;width:50%;margin-bottom:0;font-size:2em;line-height:1.11em;font-family:"Source Sans Pro",sans-serif;color:#ff6e42;letter-spacing:4px}#hero_alt .subheading{margin:0;font-size:1.22em;color:#fff}#hero blockquote a,#hero cite a,#hero h1,#hero p a{color:#ff6e42}#hero{position:relative;height:520px;min-height:520px;background-color:#2b59c3;background-position:center center;background-size:cover;z-index:15}#hero:before{position:absolute;top:0;right:0;bottom:0;left:0;content:'';z-index:-1}#hero .content_section_inner{position:relative;width:calc(100% - 80px);max-width:1360px;height:100%;min-height:520px;z-index:10;text-align:center}#hero .inner,#hero h1:after,#hero h1:before{position:absolute;left:50%}#hero .inner{top:50%;width:70%}#hero h1{position:relative;display:inline-block;margin:0 0 120px;padding:10px 20px;font-size:3.5em;letter-spacing:.1em;border:2px solid #fff}#hero h1:before{top:100%;margin-left:-1px;width:2px;height:90px}#hero h1:after{top:calc(100% + 90px);margin-left:-6px;width:12px;height:12px;border-radius:6px}#hero blockquote,#hero cite,#hero p{font-size:1.1em;color:#fff}#hero blockquote a:hover,#hero cite a:hover,#hero p a:hover{color:#2b59c3}#hero .cta_group .btn{margin:0 0 0 40px}#hero .cta_group .btn:first-of-type{margin:0}#hero .post_note{margin:.75em 0 0}#hero .post_note a{color:#fff;font-weight:700}#hero .post_note a:hover{color:#ff6e42}#latest_news{border-top:1px solid #707070}#latest_news .content_section_inner{padding:0;text-align:center}#latest_news .ln_wrap{display:-ms-flexbox;display:flex;width:90%;margin:0 auto;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}#latest_news .ln_label{display:block;margin:0;padding:30px 20px 30px 0;font-size:1.22em;text-transform:uppercase;color:#ff6e42;text-align:right}#latest_news .ln_link{display:block;position:relative;margin:0;padding:30px 30px 30px 0;font-size:1.22em;line-height:1.15em;text-decoration:none;color:#fff}#latest_news .ln_link:after{position:absolute;right:10px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%);transition:all .3s}#latest_news .ln_link:hover{color:#ff6e42}#latest_news .ln_link:hover:after{right:0}#alert_bar{border-top:1px solid #707070}#alert_bar .content_section_inner{padding:0;text-align:center}#alert_bar .alert_bar_wrap{width:50%;margin:0 auto;padding:30px 0;text-align:center}#alert_bar .alert_bar_wrap *{color:#fff}#alert_bar .alert_bar_wrap a,#alert_bar .alert_bar_wrap a:hover,#hero_ss blockquote a,#hero_ss cite a,#hero_ss p a{color:#ff6e42}#hero_ss{position:relative;height:520px;min-height:520px;background-color:#000041;background-position:right center;background-size:auto 100%;z-index:15}#hero_ss .content_section_inner{position:relative;height:100%;min-height:520px;padding:0;z-index:10;text-align:left}.img_gallery_slider li,.test_slider li{z-index:1000;background:0 0;position:relative}#hero_ss .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:left;justify-content:left;width:60%;height:100%}#hero_ss .ss_logo{display:block;margin:0 0 2em;max-width:225px}#hero_ss h1{margin:0 0 2em;color:#fff}#hero_ss blockquote,#hero_ss cite,#hero_ss p{font-size:1.1em;color:#fff}#hero_ss blockquote a:hover,#hero_ss cite a:hover,#hero_ss p a:hover{color:#2b59c3}#hero_ss .cta_group .btn{margin:0 0 0 40px}#hero_ss .cta_group .btn:first-of-type{margin:0}@media screen and (max-width:767px){#hero_alt.blog h1,#hero_alt.search h1{width:100%}#hero_alt.blog .inner,#hero_alt.search .inner{left:0;width:100%}#hero_alt .content_section_inner{width:calc(100% - 40px)}#hero_alt .inner,#hero_alt h1{width:100%}#hero{height:520px;min-height:520px}#hero .content_section_inner{width:calc(100% - 40px);min-height:520px}#hero .inner{width:100%}#hero h1{margin:0 0 80px;font-size:3em}#hero h1:before{height:50px}#hero h1:after{top:calc(100% + 50px)}#hero blockquote br,#hero cite br,#hero p br{display:none}#hero .cta_group .btn{display:block;width:100%;max-width:400px;margin:20px auto 0}#alert_bar .alert_bar_wrap,#latest_news .ln_wrap{width:calc(100% - 40px)}#hero .cta_group .btn:first-of-type{margin:0 auto}#latest_news .ln_link{line-height:1.3em;text-align:left}#hero_ss{height:auto;min-height:0}#hero_ss .content_section_inner{min-height:0;padding:40px 20px}#hero_ss .inner{width:100%}}.slick-list,.slick-slider,.slick-track{position:relative;display:block}@media only screen and (min-width:768px) and (max-width:1024px){#hero .inner{width:90%}#hero h1{font-size:3em}#alert_bar .alert_bar_wrap{width:70%}#hero_ss{background-position:170% top}#hero_ss .inner{width:50%}}.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translate3d(0,0,0)}.slick-track{left:0;top:0;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-dots,.slick-next,.slick-prev{position:absolute;display:block;padding:0}.slick-loading .slick-list{background:url(../../images/loading.svg) center center no-repeat #fff}.slick-next,.slick-next:focus,.slick-next:hover,.slick-prev,.slick-prev:focus,.slick-prev:hover{background:0 0;color:transparent;outline:0}.slick-next,.slick-prev{height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;top:50%;transform:translate(0,-50%);border:none}.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{color:#2b59c3}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{position:absolute;top:50%;margin:-9px;width:20px;height:18px;line-height:18px;text-align:center;color:#ff6e42;font-family:dashicons;content:'\f522';font-size:26px;text-indent:0;transition:all .3s}.test_slider .slick-next,.test_slider .slick-prev{height:40px;width:31px}.test_slider .slick-next:before,.test_slider .slick-prev:before{position:absolute;left:0;top:0;margin:0;width:31px;height:40px;line-height:40px;text-align:center;color:#000041;content:'';background:url(../../images/slider-arrow-alt.svg);transition:all .3s}.slick-prev{left:-40px}[dir=rtl] .slick-prev{left:auto;right:-40px}.slick-prev:before{transform:rotate(180deg)}.slick-next{right:-40px}[dir=rtl] .slick-next{left:-40px;right:auto}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{bottom:-25px;list-style:none;text-align:center;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{border:0;background:0 0;display:block;height:20px;width:20px;outline:0;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.slick-dots li button:focus,.slick-dots li button:hover{outline:0}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:"•";width:20px;height:20px;font-family:slick;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.img_gallery_slider{margin:40px 0 0;margin-left:0!important;height:330px}.img_gallery_slider *{box-sizing:border-box}.img_gallery_slider li{height:330px;overflow:hidden}.img_gallery_slider li>.inner{display:block;width:100%;height:100%;padding:0 5px;text-decoration:none}.img_gallery_slider li img{height:100%}.test_slider{margin-left:0!important}.test_slider *{box-sizing:border-box}.test_slider .slick-track{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.test_slider .slick-list{padding:0!important}.test_slider li{overflow:hidden}@media screen and (max-width:767px){.slick-prev{left:-20px}[dir=rtl] .slick-prev{left:auto;right:-20px}.test_slider .slick-prev{left:0}.slick-next{right:-20px}[dir=rtl] .slick-next{left:-20px;right:auto}.test_slider .slick-next{right:0}.img_gallery_slider{width:calc(100% - 40px);margin:40px auto 0}}#content .gform_wrapper{padding:16px 0}#content .gform_wrapper *{box-sizing:border-box}#content .gform_wrapper .gform_fields{margin:0!important;padding:0!important;list-style:none!important}#content .gform_wrapper .gform_fields li{position:relative;width:100%;margin:0 0 1.25em;padding:0;vertical-align:top;text-align:left;list-style:none!important;z-index:100}#content .gform_wrapper .gform_fields li.gf_left_half,#content .gform_wrapper .gform_fields li.gf_left_third,#content .gform_wrapper .gform_fields li.gf_middle_third{padding-right:16px}#content .gform_wrapper .gform_fields li.msg{margin-top:20px}#content .gform_wrapper .gform_fields li.msg .gfield_label,#content .gform_wrapper .gform_fields li.msg label{left:20px;width:calc(100% - 40px)}#content .gform_wrapper .gform_fields li.msg .gfield_label.float_label,#content .gform_wrapper .gform_fields li.msg label.float_label{left:0}#content .gform_wrapper .gform_fields li.gf_list_inline{margin-bottom:.5em}#content .gform_wrapper .gform_fields li.gfield_html,#content .gform_wrapper .gform_fields li.revealed{margin-bottom:2em}#content .gform_wrapper .gform_fields li.gf_left_third,#content .gform_wrapper .gform_fields li.gf_middle_third,#content .gform_wrapper .gform_fields li.gf_right_third{width:33.4%}#content .gform_wrapper .gform_fields li.gf_right_third{width:33.2%}#content .gform_wrapper .gform_fields li.gf_left_half,#content .gform_wrapper .gform_fields li.gf_right_half{width:50%}#content .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li{width:33.33%!important}#content .gform_wrapper .gform_fields li.no_float .gfield_label{position:static}#content .gform_wrapper .gform_fields li.init_float_label .gfield_label,#content .gform_wrapper .gform_fields li.init_static_label .gfield_label{position:absolute;top:-1.2em;padding:0;height:auto;font-size:14px;line-height:18px;color:#000041;z-index:-1}#content .gform_wrapper .gform_fields li.init_float_label .gfield_label .gfield_required,#content .gform_wrapper .gform_fields li.init_static_label .gfield_label .gfield_required{color:#ff6e42}#content .gform_wrapper .gform_fields li.init_static_label .gfield_label{position:static}#content .gform_wrapper .gform_fields li.long_label .gfield_label,#content .gform_wrapper .gform_fields li.long_label .ginput_complex label{line-height:1.4em}#content .gform_wrapper .gform_fields li.long_label .gfield_label.float_label,#content .gform_wrapper .gform_fields li.long_label .ginput_complex label.float_label{line-height:14px}#content .gform_wrapper .gform_fields li:before{display:none!important}#content .gform_wrapper .gform_fields li.gform_hidden{display:block;margin:0}#content .gform_wrapper .gform_fields li.two_col_address{margin:0}#content .gform_wrapper .gform_fields li.two_col_address .ginput_complex .ginput_full.address_line_1,#content .gform_wrapper .gform_fields li.two_col_address .ginput_complex .ginput_full.address_line_2{position:relative;display:inline-block;vertical-align:top;width:calc(50% - 8px);margin:0 0 1.25em;padding-right:0;z-index:102}#content .gform_wrapper .gform_fields li.two_col_address .ginput_complex .ginput_full.address_line_2{margin-left:16px}#content .gform_wrapper .gfield_label,#content .gform_wrapper .ginput_complex label{display:block;position:absolute;left:0;top:0;width:100%;height:100%;font-family:"Source Sans Pro",sans-serif;font-weight:400;font-size:100%;letter-spacing:0;line-height:calc(2.6em + 2px);margin:0;padding:0 16px;color:#000041;transition:top .3s,padding .3s,font-size .3s,color .3s;z-index:106;-webkit-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;white-space:nowrap}#content .gform_wrapper .gfield_label .gfield_required,#content .gform_wrapper .ginput_complex label .gfield_required{position:relative;display:inline-block;top:-.25em;margin-left:0;font-size:80%;color:#000041}#content .gform_wrapper .gfield_label.float_label,#content .gform_wrapper .ginput_complex label.float_label{top:-1.3em;padding:0;font-size:14px;line-height:18px;color:#000041;z-index:106}#content .gform_wrapper .gfield_label.float_label .gfield_required,#content .gform_wrapper .ginput_complex label.float_label .gfield_required{color:#000041}#content .gform_wrapper .gfield_label.gfield_label_before_complex,#content .gform_wrapper .ginput_complex label.gfield_label_before_complex{position:static;margin:0 0 1em;padding:0;line-height:18px;color:#000041}#content .gform_wrapper .gfield_label.gfield_label_before_complex .gfield_required,#content .gform_wrapper .ginput_complex label.gfield_label_before_complex .gfield_required{color:#ff6e42}#content .gform_wrapper input[type=text],#content .gform_wrapper input[type=number],#content .gform_wrapper input[type=tel],#content .gform_wrapper textarea{width:100%;padding:0 16px;font-size:1em;height:2.78em;line-height:2.78em;font-family:"Source Sans Pro",sans-serif;font-weight:400;border-radius:0;border:1px solid #fff;-webkit-appearance:none;color:#000041;background:#fff;transition:border-color .3s}#content .gform_wrapper input[type=text]:focus,#content .gform_wrapper input[type=text]:valid,#content .gform_wrapper input[type=number]:focus,#content .gform_wrapper input[type=number]:valid,#content .gform_wrapper input[type=tel]:focus,#content .gform_wrapper input[type=tel]:valid,#content .gform_wrapper textarea:focus,#content .gform_wrapper textarea:valid{outline:0;border:none}#content .gform_wrapper textarea{display:block;height:130px;line-height:1.56em;padding:8px 16px}#content .gform_wrapper input[type=hidden]{display:none}#content .gform_wrapper .field_sublabel_below .ginput_container label{font-size:.78em;font-style:italic;color:#000041}#content .gform_wrapper .field_sublabel_below .ginput_complex.ginput_container label{font-size:1em;font-style:normal}#content .gform_wrapper .field_sublabel_below .ginput_complex.ginput_container label.float_label{font-size:14px;line-height:18px}#content .gform_wrapper .instruction{padding:0 16px;font-size:.78em;font-style:italic;color:#000041}#content .gform_wrapper .ginput_container_date,#content .gform_wrapper .ginput_container_email,#content .gform_wrapper .ginput_container_number,#content .gform_wrapper .ginput_container_phone,#content .gform_wrapper .ginput_container_select,#content .gform_wrapper .ginput_container_text,#content .gform_wrapper .ginput_container_textarea,#content .gform_wrapper .ginput_container_website{margin:0;border:1px solid transparent}#content .gform_wrapper .ginput_complex .address_country,#content .gform_wrapper .ginput_complex .address_state,#content .gform_wrapper .ginput_container_select{position:relative;cursor:pointer;background:#fff;z-index:105}#content .gform_wrapper .ginput_complex .address_country:after,#content .gform_wrapper .ginput_complex .address_state:after,#content .gform_wrapper .ginput_container_select:after{position:absolute;right:16px;top:20px;content:'';text-align:center;z-index:-1;width:12px;height:10px;background:url(../../images/select-caret.svg) right center no-repeat;background-size:100% auto}#content .gform_wrapper .ginput_complex .address_country select,#content .gform_wrapper .ginput_complex .address_state select,#content .gform_wrapper .ginput_container_select select{border:none;outline:0;margin:0;padding:0 16px;font-family:"Source Sans Pro",sans-serif;font-size:1em;font-weight:400;line-height:2.78em;color:#000041;width:100%;background:0 0;border-radius:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;-webkit-appearance:none;appearance:none;white-space:pre-wrap;z-index:110;cursor:pointer}#content .gform_wrapper .ginput_complex .address_country select::-ms-expand,#content .gform_wrapper .ginput_complex .address_state select::-ms-expand,#content .gform_wrapper .ginput_container_select select::-ms-expand{display:none}#content .gform_wrapper .ginput_container_radio{margin-top:0}#content .gform_wrapper .gfield_radio{position:relative;cursor:pointer;margin:0!important;padding:0;-webkit-user-select:none;-ms-user-select:none;user-select:none}#content .gform_wrapper .gfield_radio>li{display:inline-block;width:auto!important;margin:0;vertical-align:top;font-size:100%!important}#content .gform_wrapper .gfield_radio label{display:inline-block;position:relative;margin:0 0 5px;padding:0 25px;font-size:1em!important;height:2.78em;max-width:none!important;line-height:2.78em;font-family:"Source Sans Pro",sans-serif;font-weight:400;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;color:#000041!important}#content .gform_wrapper .gfield_radio label:before{position:absolute;left:3px;top:18px;width:14px;height:14px;border-radius:50%;content:'';box-shadow:inset 14px 14px #2b59c3;transition:.2s transform ease-in-out;transform:scale(0)}#content .gform_wrapper .gfield_radio label:after{position:absolute;left:0;top:15px;width:20px;height:20px;border-radius:50%;border:1px solid #2b59c3;content:'';z-index:-1}#content .gform_wrapper .gfield_radio input[type=radio]{position:absolute;opacity:0;cursor:pointer}#content .gform_wrapper .gfield_radio input[type=radio]:checked~label:before{transform:scale(1)}#content .gform_wrapper .ginput_container_checkbox{height:130px;margin-top:0;padding:26px 16px 16px;background:#fff}#content .gform_wrapper .gfield_checkbox{position:relative;cursor:pointer;margin:0!important;padding:0;-webkit-user-select:none;-ms-user-select:none;user-select:none}#content .gform_wrapper .gfield_checkbox>li{display:inline-block;width:calc(33.3333% - 15px)!important;margin:0 0 10px 30px;vertical-align:top}#content .gform_wrapper .gfield_checkbox>li:nth-of-type(2n+1){margin-left:0}#content .gform_wrapper .gfield_checkbox label{display:inline-block;position:relative;margin:0;padding:0 0 0 24px;line-height:16px;font-style:normal!important;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;font-size:.78em!important;color:#000041!important}#content .gform_wrapper .gfield_checkbox label:before{position:absolute;left:0;top:0;width:16px;height:16px;font-family:FontAwesome;line-height:16px;font-size:14px;border-radius:2px;color:#e8e9f3;content:'\f00c';border:none;background:#e8e9f3;text-align:center}#content .gform_wrapper .gfield_checkbox input[type=checkbox]{position:absolute;opacity:0;cursor:pointer}#content .gform_wrapper .gfield_checkbox input[type=checkbox]:checked~label:before{color:#000041}#content .gform_wrapper .no_label .gfield_label{display:none}#content .gform_wrapper .no_label .gfield_checkbox label{position:relative;font-size:1em;color:#000041}#content .gform_wrapper .no_label .gfield_checkbox label:after{position:absolute;width:10px;height:10px;display:inline-block;top:-.25em;font-size:80%;color:#000041;content:'*'}#content .gform_wrapper .ginput_complex{z-index:101}#content .gform_wrapper .ginput_complex .ginput_left,#content .gform_wrapper .ginput_complex .ginput_right{position:relative;width:calc(50% - 8px);margin:0 0 1.25em;padding-right:0;z-index:102}#content .gform_wrapper .ginput_complex .ginput_right{margin-left:16px}#content .gform_wrapper .ginput_complex input[type=text],#content .gform_wrapper .ginput_complex input[type=number],#content .gform_wrapper .ginput_complex input[type=tel],#content .gform_wrapper .ginput_complex textarea{margin-bottom:0}#content .gform_wrapper .validation_error,#content .gform_wrapper .validation_message{margin:0 0 30px;font-family:"Source Sans Pro",sans-serif;color:#ff6e42;line-height:1.4em;font-style:italic}#content .gform_wrapper .charleft,#content .gform_wrapper .ginput_counter{display:none!important}#content .gform_wrapper .gfield_error{border:none;background:0 0}#content .gform_wrapper .validation_error{border:none;padding:0;font-weight:600;font-size:1em;text-align:center}#content .gform_wrapper .validation_message{padding:5px 0 0 16px;font-size:14px;font-weight:400}#content .gform_wrapper .validation_message.instruction{position:absolute;right:32px;margin:0;padding-left:0}#content .gform_wrapper.gform_validation_error .gform_body ul li.gfield.gfield_error:not(.gf_left_half):not(.gf_right_half){max-width:100%!important}#content .gform_wrapper .gform_footer{text-align:center}#content .gform_wrapper .gform_footer .gform_button{width:50%}#content .white_form .gform_wrapper .ginput_complex .address_country select,#content .white_form .gform_wrapper .ginput_complex .address_state select,#content .white_form .gform_wrapper .ginput_container_select select,#content .white_form .gform_wrapper input[type=text],#content .white_form .gform_wrapper input[type=text]:focus,#content .white_form .gform_wrapper input[type=text]:valid,#content .white_form .gform_wrapper input[type=number],#content .white_form .gform_wrapper input[type=number]:focus,#content .white_form .gform_wrapper input[type=number]:valid,#content .white_form .gform_wrapper input[type=tel],#content .white_form .gform_wrapper input[type=tel]:focus,#content .white_form .gform_wrapper input[type=tel]:valid,#content .white_form .gform_wrapper textarea,#content .white_form .gform_wrapper textarea:focus,#content .white_form .gform_wrapper textarea:valid{border:1px solid #707070}#primary-navigation .nav-menu ul li a,#primary-navigation .nav-menu>li a{border-radius:0;text-decoration:none;font-family:"Source Sans Pro",sans-serif}#content .force_1col .gform_wrapper .gform_fields li.gf_left_half,#content .force_1col .gform_wrapper .gform_fields li.gf_left_third,#content .force_1col .gform_wrapper .gform_fields li.gf_middle_third,#content .force_1col .gform_wrapper .gform_fields li.gf_right_half,#content .force_1col .gform_wrapper .gform_fields li.gf_right_third{width:100%!important;padding-right:0!important}#content .force_1col .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li{width:100%!important}#content .form_embed.purple-dark .form_footnote,#content .form_embed.purple-dark .gform_fields .gfield_label.float_label,#content .form_embed.purple-dark .gform_fields .gfield_label.float_label .gfield_required,#content .form_embed.purple-dark .gform_fields .gfield_label.gfield_label_before_complex,#content .form_embed.purple-dark .gform_fields .gfield_label.gfield_label_before_complex .gfield_required,#content .form_embed.purple-dark .gform_fields .ginput_complex label.float_label,#content .form_embed.purple-dark .gform_fields .ginput_complex label.float_label .gfield_required,#content .form_embed.purple-dark .gform_fields .ginput_complex label.gfield_label_before_complex,#content .form_embed.purple-dark .gform_fields .ginput_complex label.gfield_label_before_complex .gfield_required{color:#fff}::-webkit-input-placeholder{color:#000041}::-moz-placeholder{color:#000041}:-ms-input-placeholder{color:#000041}:-moz-placeholder{color:#000041}@media screen and (max-width:767px){#content .gform_wrapper .gform_fields li.gf_left_half,#content .gform_wrapper .gform_fields li.gf_left_third,#content .gform_wrapper .gform_fields li.gf_middle_third,#content .gform_wrapper .gform_fields li.gf_right_half,#content .gform_wrapper .gform_fields li.gf_right_third{width:100%!important;padding-right:0!important}#content .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li{width:100%!important}}.clearfix:after,.clearfix:before{content:"";display:table}.wysiwyg ul.checkmark{margin:0}.wysiwyg ul.checkmark>li{position:relative;margin:0 0 20px;padding:0 0 0 60px;color:#141920}.content_section.override_padding.nopadding_lr .content_section_inner,.nopadding_lr{padding-right:0!important;padding-left:0!important}.wysiwyg ul.checkmark>li:before{position:absolute;left:0;top:-5px;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}.wysiwyg ul.checkmark>li:last-of-type{margin:0}.flexrow{display:-ms-flexbox;display:flex}.flexrow .flex_i{-ms-flex-positive:1;flex-grow:1}.flexrow .flex_i+.flex_i{margin-left:5%}.alignleft,.alignright{float:none;width:100%;max-width:100%;height:auto}.aligncenter,.alignnone{width:auto;max-width:100%;height:auto;text-align:center}figure{display:block;width:100%;margin:0 auto 1.67em}figure.wp-caption{margin-bottom:10px}figcaption{text-align:left;font-size:.78em;line-height:1.4em;font-style:italic;color:#666}iframe{max-width:100%!important}.vid_cont{position:relative;background-color:transparent;background-repeat:no-repeat;background-position:center center;background-size:cover;z-index:10}.video_container{position:relative;padding-bottom:62.5%;margin:0;width:100%;height:0;opacity:1;visibility:visible;overflow:hidden;transition:opacity .3s}.video_container.off{opacity:0;visibility:hidden}.video_container embed,.video_container iframe,.video_container object{position:absolute;top:0;left:0;width:100%;height:100%}.to_cols_3{column-count:3;column-gap:74px}.to_cols_3>li{list-style-position:inside}.pos_rel{position:relative!important}.float_left{float:left!important}.float_right{float:right!important}.of_hidden{overflow:hidden!important}.nomargin{margin:0!important}.nomargin_top{margin-top:0!important}.nomargin_bottom{margin-bottom:0!important}.large_margin_bottom{margin-bottom:60px!important}.tall_pad{padding-top:100px!important;padding-bottom:100px!important}.short_pad{padding-top:30px!important;padding-bottom:30px!important}.mid_pad{padding-top:60px!important;padding-bottom:60px!important}.nopadding_tb,.nopadding_top{padding-top:0!important}.nopadding_bottom,.nopadding_tb{padding-bottom:0!important}.nopadding{padding:0!important}.small_padding_bottom{padding-bottom:30px!important}.large_padding_bottom{padding-bottom:100px!important}.small_padding_top{padding-top:30px!important}.large_padding_top{padding-top:100px!important}.content_section.override_padding.tall_pad{padding:0!important}.content_section.override_padding.tall_pad .content_section_inner{padding-top:100px!important;padding-bottom:100px!important}.content_section.override_padding.mid_pad{padding:0!important}.content_section.override_padding.mid_pad .content_section_inner{padding-top:60px!important;padding-bottom:60px!important}.content_section.override_padding.short_pad{padding:0!important}.content_section.override_padding.short_pad .content_section_inner{padding-top:30px!important;padding-bottom:30px!important}.content_section.override_padding.nopadding,.content_section.override_padding.nopadding .content_section_inner,.content_section.override_padding.nopadding_bottom,.content_section.override_padding.nopadding_lr,.content_section.override_padding.nopadding_tb,.content_section.override_padding.nopadding_top,.content_section.override_padding.small_padding_top{padding:0!important}.content_section.override_padding.nopadding_tb .content_section_inner{padding-top:0!important;padding-bottom:0!important}.content_section.override_padding.nopadding_top .content_section_inner{padding-top:0!important}.content_section.override_padding.nopadding_bottom .content_section_inner{padding-bottom:0!important}.content_section.override_padding.small_padding_top .content_section_inner{padding-top:30px!important}.content_section.override_padding.small_padding_bottom{padding:0!important}.content_section.override_padding.small_padding_bottom .content_section_inner{padding-bottom:30px!important}.content_section.override_padding.small_padding_tb{padding:0!important}.content_section.override_padding.small_padding_tb .content_section_inner{padding-top:30px!important;padding-bottom:30px!important}.content_section.override_padding.large_padding_top{padding:0!important}.content_section.override_padding.large_padding_top .content_section_inner{padding-top:100px!important}.content_section.override_padding.large_padding_bottom{padding:0!important}.content_section.override_padding.large_padding_bottom .content_section_inner{padding-bottom:100px!important}.content_section.override_padding.large_padding_tb{padding:0!important}.content_section.override_padding.large_padding_tb .content_section_inner{padding-top:100px!important;padding-bottom:100px!important}.nobullets{list-style:none!important}.upper{text-transform:uppercase!important}.lower{text-transform:none!important}.centered{text-align:center!important}.lefted{text-align:left!important}.righted{text-align:right!important}.blockit{display:block!important}.flex_vert_cent{display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important}.width_cap{max-width:1008px}.show_on_mobile{display:none!important}.hide_on_mobile{display:block!important}.show_on_tablet{display:none!important}.hide_on_tablet{display:block!important}@media only screen and (max-width:767px){.flexrow{display:-ms-flexbox;display:flex}.flexrow.noflex_m{display:block}.flexrow.noflex_m .flex_i+.flex_i{margin-left:0}.to_cols_3{column-count:1}.tall_pad{padding-top:60px!important;padding-bottom:60px!important}.show_on_mobile{display:block!important}.hide_on_mobile{display:none!important}}@media only screen and (min-width:768px) and (max-width:1024px){.show_on_tablet{display:block!important}.hide_on_tablet{display:none!important}.nopadding_tablet{padding:0!important}.tall_pad{padding-top:60px!important;padding-bottom:60px!important}}#primary-navigation{float:left;position:relative;width:calc(100% - 200px);margin-left:24px;padding:0;box-sizing:border-box}#primary-navigation .nav-menu{position:relative;margin:0;padding:0;list-style:none;text-align:left}#primary-navigation .nav-menu>li{position:relative;display:inline-block;margin:0 0 0 -4px;transition:all .3s ease 0s;vertical-align:top;text-align:left}#primary-navigation .nav-menu>li a{display:block;position:relative;padding:0 24px;line-height:80px;font-size:1em;font-weight:600;color:#fff;text-transform:none;text-align:center;transition:all .3s}#primary-navigation .nav-menu>li a:hover,#primary-navigation .nav-menu>li.current-menu-ancestor>a,#primary-navigation .nav-menu>li.current-menu-item>a,#primary-navigation .nav-menu>li.current-page-ancestor>a,#primary-navigation .nav-menu>li.current-post-ancestor>a,#primary-navigation .nav-menu>li:focus>a,#primary-navigation .nav-menu>li:hover>a{color:#ff6e42}#primary-navigation .nav-menu>li:focus .sub-menu,#primary-navigation .nav-menu>li:hover .sub-menu{left:0;margin-top:0}#primary-navigation .nav-menu>li.flip:focus .sub-menu,#primary-navigation .nav-menu>li.flip:hover .sub-menu{left:auto;right:0}#primary-navigation .nav-menu ul{position:absolute;top:100%;left:-999em;width:auto;min-width:100%;margin:0;background:#000041;padding:0;z-index:1000;box-sizing:border-box}#primary-navigation .nav-menu ul li{position:relative;display:block;margin:0;background:#000041;overflow:hidden}#primary-navigation .nav-menu ul li a{display:block;width:100%;box-sizing:border-box;vertical-align:middle;line-height:1.3em;font-weight:400;height:auto;padding:15px 24px;color:#fff;background:0 0!important;border-top:1px solid #fff;white-space:nowrap;transition:all .3s;text-align:left}#primary-navigation .nav-menu ul li a.active,#primary-navigation .nav-menu ul li a:hover,#primary-navigation .nav-menu ul li.current-menu-ancestor a,#primary-navigation .nav-menu ul li.current-menu-item a,#primary-navigation .nav-menu ul li.current-page-ancestor a,#primary-navigation .nav-menu ul li.current-post-ancestor a,.nav-menu li:focus #primary-navigation .nav-menu ul li a,.nav-menu li:hover #primary-navigation .nav-menu ul li a{color:#ff6e42}#primary-navigation-mobile{width:100%;padding:0}#primary-navigation-mobile .nav-menu{list-style:none;margin:0;padding:30px 0}#primary-navigation-mobile .nav-menu>.menu-item-has-children>a{width:calc(100% - 42px);padding-right:0}#primary-navigation-mobile .nav-menu>.menu-item-has-children>.toggle{display:inline-block;border:none;background:0 0}#primary-navigation-mobile .nav-menu>li{margin:0 0 10px;border:none}#primary-navigation-mobile .nav-menu>li>a{position:relative;display:inline-block;vertical-align:top;width:100%;font-size:1.5em;font-family:"Source Sans Pro",sans-serif;font-weight:600;border:none;padding:7px 50px 7px 0;color:#fff;transition:all .3s}#primary-navigation-mobile .nav-menu>li>a:hover{color:#ff6e42}#primary-navigation-mobile .nav-menu>li>.toggle{position:relative;display:none;width:40px;padding:0;height:40px;background:0 0;text-indent:-9999px;overflow:hidden;text-align:left;outline:0;transition:all .3s}#primary-navigation-mobile .nav-menu>li>.toggle:after{position:absolute;left:50%;top:50%;width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translate(-50%,-50%);transition:all .3s}#primary-navigation-mobile .nav-menu>li>.toggle>span{display:block;padding:100px 0 0}#primary-navigation-mobile .nav-menu>li>.toggle:hover{transform:rotate(90deg)}#primary-navigation-mobile .nav-menu ul{display:none;list-style:none;width:100%;margin:0;padding:6px 15px;background:0 0;border-top:none}#primary-navigation-mobile .nav-menu ul li a{display:block;font-weight:400;font-size:1.22em;color:#fff;text-transform:none;line-height:1.2em;margin:0;padding:5px 0;transition:all .3s ease 0s}#primary-navigation-mobile .nav-menu ul li a:hover,#primary-navigation-mobile .nav-menu ul li.current-menu-ancestor a,#primary-navigation-mobile .nav-menu ul li.current-menu-item a,#primary-navigation-mobile .nav-menu ul li.current-page-ancestor a,#primary-navigation-mobile .nav-menu ul li.current-post-ancestor a,#primary-navigation-mobile .nav-menu ul li.current_page_ancestor a,#primary-navigation-mobile .nav-menu ul li.current_page_parent a{color:#ff6e42}#primary-navigation-mobile .nav-menu ul li>.toggle{display:none}#primary-navigation-mobile .nav-menu .current-menu-ancestor a:before,#primary-navigation-mobile .nav-menu .current-menu-item a:before,#primary-navigation-mobile .nav-menu .current-page-ancestor a:before,#primary-navigation-mobile .nav-menu .current-post-ancestor a:before,#primary-navigation-mobile .nav-menu .current_page_ancestor a:before,#primary-navigation-mobile .nav-menu .current_page_parent a:before{width:100%}@media only screen and (max-width:990px){#primary-navigation{display:none}#primary-navigation-mobile{display:block}}@media screen and (min-width:768px) and (max-width:990px){#primary-navigation-mobile .nav-menu>li a:after{left:-80px}}@media screen and (min-width:991px) and (max-width:1100px){#primary-navigation .nav-menu>li a{font-size:.83em;padding:0 14px}#primary-navigation .nav-menu ul li a{padding:15px 14px}}@media screen and (min-width:1101px) and (max-width:1260px){#primary-navigation .nav-menu>li a{padding:0 15px}#primary-navigation .nav-menu ul li a{padding:15px}}#content article>a,#content article>blockquote,#content article>cite,#content article>h1,#content article>h2,#content article>h3,#content article>h4,#content article>h5,#content article>h6,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{width:calc(100% - 160px);max-width:1200px;margin-right:auto;margin-left:auto}.single-post #content article>a,.single-post #content article>blockquote,.single-post #content article>cite,.single-post #content article>h1,.single-post #content article>h2,.single-post #content article>h3,.single-post #content article>h4,.single-post #content article>h5,.single-post #content article>h6,.single-post #content article>hr,.single-post #content article>ol,.single-post #content article>p,.single-post #content article>span,.single-post #content article>ul{width:100%}#content article ol,#content article ul{margin-left:20px}.single-post #content article ol,.single-post #content article ul{width:auto}#content article .wp-block-columns{display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:calc(100% - 160px);max-width:1200px;margin:0 auto;padding:0 0 80px}#content article .wp-block-columns .wp-block-column:first-child{padding-right:10%}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:20px}@media screen and (max-width:767px){#content article>a,#content article>blockquote,#content article>cite,#content article>h1,#content article>h2,#content article>h3,#content article>h4,#content article>h5,#content article>h6,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{width:calc(100% - 40px)}#content article .wp-block-columns{display:block;width:calc(100% - 40px);padding:0 0 40px}#content article .wp-block-columns .wp-block-column:first-child{padding-right:0}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:0}}@media only screen and (min-width:768px) and (max-width:900px){#content article .wp-block-columns{display:block;width:calc(100% - 160px);padding:0 0 40px}#content article .wp-block-columns .wp-block-column:first-child{margin-bottom:40px;padding-right:0}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl92YXJpYWJsZXMuc2NzcyIsIl9sYXlvdXQuc2NzcyIsIl90eXBvZ3JhcGh5LnNjc3MiLCJfY29tcG9uZW50cy9fdXRpbGl0eS1jbGFzc2VzLnNjc3MiLCJfY29tcG9uZW50cy9fc2xpY2stYmFzZS5zY3NzIiwiX3NzLWJsb2Nrcy5zY3NzIiwic2NyZWVuLmNzcyIsIl9wYWdlLXNwZWNpZmljLnNjc3MiLCJfY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiX2hlYWRlci5zY3NzIiwiX2Zvb3Rlci5zY3NzIiwiX3ByaW50LnNjc3MiLCJfY29tcG9uZW50cy9fc2VhcmNoLnNjc3MiLCJfY29tcG9uZW50cy9fdGFibGVzLnNjc3MiLCJfY29tcG9uZW50cy9fcGFnaW5hdGlvbi5zY3NzIiwiX2NvbXBvbmVudHMvX3dpZGdldHMuc2NzcyIsIl9jb21wb25lbnRzL19oZXJvLnNjc3MiLCJfY29tcG9uZW50cy9fc2xpZGVycy5zY3NzIiwiX2NvbXBvbmVudHMvX2Zvcm1zLnNjc3MiLCJfY29tcG9uZW50cy9fbmF2aWdhdGlvbi5zY3NzIiwiX2NvbXBvbmVudHMvX2d1dGVuYmVyZy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJpQkFnSEEsTUFBQSxpQkFRSyxVQUFBLE9BaUNMLFNBekNBLE1BMENDLE1BQUEsS0N6RkQsTUFmQSxLQWtCQyxPQUFBLEtBeUVELG9DQUFBLHlDQStEUSxPQUFBLDZHQzJQUixvQ0E4QkEsa0JBQXFCLGNBQUEsS0M5ZHJCLGdCQ21DQSxtQkRuQ2tCLE1BQUEsS0U4TmxCLHVDRmxHQSxjQU1RLGFBQUEsTUhqR1AsaUJBQ0MsTUFBQSxLQUdELDRCQUNDLGlCQUFBLEtBTEQsb0JBQ0MsTUFBQSxRQUdELCtCQUNDLGlCQUFBLFFBTEQseUJBQ0MsTUFBQSxRQUdELG9DQUNDLGlCQUFBLFFBTEQsc0JBQ0MsTUFBQSxRQUdELGlDQUNDLGlCQUFBLFFBTEQsZ0JBQ0MsTUFBQSxRQUdELDJCQUNDLGlCQUFBLFFBTEQscUJBQ0MsTUFBQSxRQUdE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b0IsUUFBQSxLQUFBLE1BVXhCLDREQUVJLG1DQVVnQixRQUFBLEVBQUEsS0FWaEIsc0NBb0JvQixRQUFBLE1idWdQeEIsbUJBTkEsNEJBQ0Esc0JjNzVQQSxvQmRzNVBBLG9CQUNBLG9CQUNBLG9CQUNBLG9CQUNBLG9CQU1BLG9CQUZBLG9CQUhBLG1CQU1BLHNCQUZBLG9CY2g1UFEsTUFBQSxtQkFDQSxVQUFBLE9BQ0EsYUFBQSxLQUNBLFlBQUEsS2RpNlBtQixnQ0FOSCx5Q0FDUyxtQ2MzNlAzQixpQ0FBQSxpQ2RxNlBtQixpQ0FDQSxpQ0FDQSxpQ0FDQSxpQ0FNQSxpQ0FGRSxpQ0FIRixnQ0FNQSxtQ0FGQSxpQ2MzNVBiLE1BQUEsS0FyQlosb0JBQUEsb0JBMEJRLFlBQUEsS0FESixpQ0FBQSxpQ0FJUSxNQUFBLEtBN0JaLG1DQWtDUSxRQUFBLFlBQUEsUUFBQSxLQUNBLGNBQUEsT0FBQSxVQUFBLE9BQ0EsTUFBQSxtQkFDQSxVQUFBLE9BQ0EsT0FBQSxFQUFBLEtBQ0EsUUFBQSxFQUFBLEVBQUEsS0F2Q1IsZ0VBNENnQixjQUFBLElBNUNoQixzRUFnRGdCLFlBQUEsS0FNaEIsb0NkazZQRSxtQkFOQSw0QkFDQSxzQmMzNVBFLG9CZG81UEYsb0JBQ0Esb0JBQ0Esb0JBQ0Esb0JBQ0Esb0JBTUEsb0JBRkEsb0JBSEEsbUJBTUEsc0JBRkEsb0JjOTRQVSxNQUFBLGtCQWZSLG1DQW1CUSxRQUFBLE1BQ0EsTUFBQSxrQkFDQSxRQUFBLEVBQUEsRUFBQSxLQXJCUixnRUEyQmdCLGNBQUEsRUEzQmhCLHNFQStCZ0IsWUFBQSxHQWNwQiwrREFFSSxtQ0FHUSxRQUFBLE1BQ0EsTUFBQSxtQkFDQSxRQUFBLEVBQUEsRUFBQSxLQUxSLGdFQVdnQixjQUFBLEtBQ0EsY0FBQSxFQVpoQixzRUFnQmdCLFlBQUEiLCJmaWxlIjoic2NyZWVuLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENPTE9SXG4kd2hpdGU6ICNmZmZmZmY7XG4kb2Zmd2hpdGU6ICNlZWYxZmE7XG4kZ3JheV9saWdodGVzdDogI2YyZjNmODtcbiRncmF5X2xpZ2h0OiAjZThlOWYzO1xuJGdyYXk6ICM3MDcwNzA7XG4kZ3JheV9kYXJrOiAjNGQ0NjQ3O1xuJG5lYXJseWJsYWNrOiAjMTQxOTIwO1xuJGJsYWNrOiAjMDAwMDAwO1xuJHB1cnBsZTogIzMzMmE2NjtcbiRwdXJwbGVfZGFyazogIzAwMDA0MTtcbiRvcmFuZ2U6ICNmZjZlNDI7XG4kZ3JlZW46ICM0ZWNkNWY7XG4kYmx1ZTogIzJiNTljMztcblxuQG1peGluIGJhY2tncm91bmQtb3BhY2l0eSgkY29sb3IsICRvcGFjaXR5OiAwLjMpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7IC8qIFRoZSBGYWxsYmFjayAqL1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoJGNvbG9yLCAkb3BhY2l0eSk7XG59XG5cbi8vIEd1dGVuYmVyZyBjb2xvciBvcHRpb25zXG4vLyAtLSBzZWUgZWRpdG9yLWNvbG9yLXBhbGV0dGUgaW4gZnVuY3Rpb25zLnBocFxuJGNvbG9yczogKFxuICAgICd3aGl0ZScgICAgICAgICA6ICNmZmZmZmYsXG4gICAgJ29mZndoaXRlJyAgICAgIDogI2VlZjFmYSxcbiAgICAnZ3JheV9saWdodGVzdCcgOiAjZjJmM2Y4LFxuICAgICdncmF5X2xpZ2h0JyAgICA6ICNlOGU5ZjMsXG4gICAgJ2dyYXknICAgICAgICAgIDogIzcwNzA3MCxcbiAgICAnZ3JheV9kYXJrJyAgICAgOiAjNGQ0NjQ3LFxuICAgICduZWFybHlibGFjaycgICA6ICMxNDE5MjAsXG4gICAgJ2JsYWNrJyAgICAgICAgIDogIzAwMDAwMCxcbiAgICAncHVycGxlJyAgICAgICAgOiAjMzMyYTY2LFxuICAgICdwdXJwbGVfZGFyaycgICA6ICMwMDAwNDEsXG4gICAgJ29yYW5nZScgICAgICAgIDogI2ZmNmU0MixcbiAgICAnZ3JlZW4nICAgICAgICAgOiAjNGVjZDVmLFxuICAgICdibHVlJyAgICAgICAgICA6ICMyYjU5YzMsXG4pO1xuXG5AZWFjaCAkbmFtZSwgJGNvbG9yIGluICRjb2xvcnMge1xuXG5cdC5oYXMtI3skbmFtZX0tY29sb3Ige1xuXHRcdGNvbG9yOiAkY29sb3I7XG5cdH1cblxuXHQuaGFzLSN7JG5hbWV9LWJhY2tncm91bmQtY29sb3Ige1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRjb2xvcjtcblx0fVxufVxuXG4vKkBtaXhpbiBwbGFjZWhvbGRlciB7XG4gICAgOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtAY29udGVudH1cbiAgICA6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAge0Bjb250ZW50fVxuICAgIDo6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICB7QGNvbnRlbnR9XG4gICAgOi1tcy1pbnB1dC1wbGFjZWhvbGRlciAgICAgIHtAY29udGVudH1cbn0qL1xuXG4vKiBTT1VSQ0UgU0FOUyBARk9OVC1GQUNFICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuQGZvbnQtZmFjZXtcbiAgICBmb250LWZhbWlseTpcIkh1cm1lIEdlb21ldHJpYyBTYW5zXzEgVzAxIEx0XCI7XG4gICAgc3JjOnVybChcIi4uLy4uL2ZvbnRzLzU1MTI4NzMvM2QwOGQ5YjctYzIzMi00OGZlLWE3ZDYtMmUyMzdjODYwMDRhLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLHVybChcIi4uLy4uL2ZvbnRzLzU1MTI4NzMvODdkYTcwOTUtZDEwMC00MDJmLWFlMzMtNTc5NjQ2NDQ2MDkzLndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbn1cblxuJHNzYW5zOiAnU291cmNlIFNhbnMgUHJvJywgc2Fucy1zZXJpZjtcblxuJG5vcm1hbDogNDAwO1xuJHNlbWlib2xkOiA2MDA7XG4kYm9sZDogNzAwO1xuXG4vKi5jbGVhcmZpeHtcblx0em9vbTogMTtcblxuXHQmOmFmdGVye1xuXHRcdGNvbnRlbnQ6ICcnO1xuXHRcdGhlaWdodDogMDtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR2aXNpYmlsaXR5OiBoaWRkZW47XG5cdFx0Y2xlYXI6IGJvdGg7XG5cdH1cbn0qL1xuXG5cbi8qXG4gIFNpbXBsZSBHcmlkXG4gIFByb2plY3QgUGFnZSAtIGh0dHA6Ly90aGlzaXNkYWxsYXMuZ2l0aHViLmNvbS9TaW1wbGUtR3JpZC9cbiAgQXV0aG9yIC0gRGFsbGFzIEJhc3NcbiAgU2l0ZSAtIGh0dHA6Ly9kYWxsYXNiYXNzLmNvbVxuKi9cblxuJGd1dHRlcjogMjBweDsgLy9jb2wgd2lkdGggaXMgNjUgYXQgZnVsbCB3aWR0aFxuJGJwX2Z1bGw6IDEzNjBweDtcbiRicF9taWQ6IDEwMjRweDtcbiRicF9zbWFsbDogNzY3cHg7XG5cbltjbGFzcyo9J2dyaWQnXSxcbltjbGFzcyo9J2NvbC0nXSxcbltjbGFzcyo9J21vYmlsZS0nXSxcbi5ncmlkOmFmdGVyIHtcblx0LXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXHQtbW96LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHRcbn1cblxuW2NsYXNzKj0nY29sLSddIHtcblx0ZmxvYXQ6IGxlZnQ7XG4gIFx0bWluLWhlaWdodDogMXB4O1xuXHRwYWRkaW5nLXJpZ2h0OiAkZ3V0dGVyOyAvKiBjb2x1bW4tc3BhY2UgKi9cbn1cblxuW2NsYXNzKj0nY29sLSddIFtjbGFzcyo9J2NvbC0nXTpsYXN0LWNoaWxkIHtcblx0cGFkZGluZy1yaWdodDogMDtcbn1cblxuLmdyaWQge1xuXHR3aWR0aDogMTAwJTtcblx0bWF4LXdpZHRoOjEzNjBweDtcblx0bWluLXdpZHRoOiA3MDhweDsgLyogd2hlbiB1c2luZyBwYWRkZWQgZ3JpZCBvbiBpcGFkIGluIHBvcnRyYWl0IG1vZGUsIHdpZHRoIHNob3VsZCBiZSB2aWV3cG9ydC13aWR0aCAtIHBhZGRpbmcgPSAoNzY4IC0gMjApID0gNzQ4LiBhY3R1YWxseSwgaXQgc2hvdWxkIGJlIGV2ZW4gc21hbGxlciB0byBhbGxvdyBmb3IgcGFkZGluZyBvZiBncmlkIGNvbnRhaW5pbmcgZWxlbWVudCAqL1xuXHRtYXJnaW46IDAgYXV0bztcblx0LypvdmVyZmxvdzogaGlkZGVuOyovXG5cdFxuXHQmLmV4dHJhX3dpZGUge1xuXHQgICAgbWF4LXdpZHRoOjEzNjBweDtcblx0fVxuXHQmLmZ1bGwge1xuXHQgICAgbWF4LXdpZHRoOm5vbmU7XG5cdH1cbn1cblxuLmdyaWQ6YWZ0ZXIge1xuXHRjb250ZW50OiBcIlwiO1xuXHRkaXNwbGF5OiB0YWJsZTtcblx0Y2xlYXI6IGJvdGg7XG59XG5cbi5ncmlkLXBhZCB7XG5cdHBhZGRpbmctdG9wOiAwO1xuXHRwYWRkaW5nLWxlZnQ6ICRndXR0ZXI7IC8qIGdyaWQtc3BhY2UgdG8gbGVmdCAqL1xuXHRwYWRkaW5nLXJpZ2h0OiAwOyAvKiBncmlkLXNwYWNlIHRvIHJpZ2h0OiAoZ3JpZC1zcGFjZS1sZWZ0IC0gY29sdW1uLXNwYWNlKSBlLmcuIDIwcHgtMjBweD0wICovXG59XG5cbi5wdXNoLXJpZ2h0IHtcblx0ZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cblxuXG4vKiBDb250ZW50IENvbHVtbnMgKi9cblxuLmNvbC0xLTEge1xuXHR3aWR0aDogMTAwJTtcbn1cbi5jb2wtMi0zLCAuY29sLTgtMTIge1xuXHR3aWR0aDogNjYuNjYlO1xufVxuXG4uY29sLTEtMiwgLmNvbC02LTEyIHtcblx0d2lkdGg6IDUwJTtcbn1cblxuLmNvbC0xLTMsIC5jb2wtNC0xMiB7XG5cdHdpZHRoOiAzMy4zMyU7XG59XG5cbi5jb2wtMS00LCAuY29sLTMtMTIge1xuXHR3aWR0aDogMjUlO1xufVxuXG4uY29sLTEtNSB7XG5cdHdpZHRoOiAyMCU7XG59XG5cbi5jb2wtMS02LCAuY29sLTItMTIge1xuXHR3aWR0aDogMTYuNjY3JTtcbn1cblxuLmNvbC0xLTcge1xuXHR3aWR0aDogMTQuMjglO1xufVxuXG4uY29sLTEtOCB7XG5cdHdpZHRoOiAxMi41JTtcbn1cblxuLmNvbC0xLTkge1xuXHR3aWR0aDogMTEuMSU7XG59XG5cbi5jb2wtMS0xMCB7XG5cdHdpZHRoOiAxMCU7XG59XG5cbi5jb2wtMS0xMSB7XG5cdHdpZHRoOiA5LjA5JTtcbn1cblxuLmNvbC0xLTEyIHtcblx0d2lkdGg6IDguMzMlXG59XG5cbi8qIExheW91dCBDb2x1bW5zICovXG5cbi5jb2wtMTEtMTIge1xuXHR3aWR0aDogOTEuNjYlXG59XG5cbi5jb2wtMTAtMTIge1xuXHR3aWR0aDogODMuMzMzJTtcbn1cblxuLmNvbC05LTEyIHtcblx0d2lkdGg6IDc1JTtcbn1cblxuLmNvbC01LTEyIHtcblx0d2lkdGg6IDQxLjY2JTtcbn1cblxuLmNvbC03LTEyIHtcblx0d2lkdGg6IDU4LjMzJVxufVxuXG4vKiBQdXNoaW5nIGJsb2NrcyAqL1xuLnB1c2gtMi0zLCAucHVzaC04LTEyIHtcblx0bWFyZ2luLWxlZnQ6IDY2LjY2JTtcbn1cblxuLnB1c2gtMS0yLCAucHVzaC02LTEyIHtcblx0bWFyZ2luLWxlZnQ6IDUwJTtcbn1cblxuLnB1c2gtNS0xMiB7XG4gICAgbWFyZ2luLWxlZnQ6IDQxLjY2JTtcbn1cblxuLnB1c2gtMS0zLCAucHVzaC00LTEyIHtcblx0bWFyZ2luLWxlZnQ6IDMzLjMzJTtcbn1cblxuLnB1c2gtMS00LCAucHVzaC0zLTEyIHtcblx0bWFyZ2luLWxlZnQ6IDI1JTtcbn1cblxuLnB1c2gtMS01IHtcblx0bWFyZ2luLWxlZnQ6IDIwJTtcbn1cblxuLnB1c2gtMS02LCAucHVzaC0yLTEyIHtcblx0bWFyZ2luLWxlZnQ6IDE2LjY2NyU7XG59XG5cbi5wdXNoLTEtNyB7XG5cdG1hcmdpbi1sZWZ0OiAxNC4yOCU7XG59XG5cbi5wdXNoLTEtOCB7XG5cdG1hcmdpbi1sZWZ0OiAxMi41JTtcbn1cblxuLnB1c2gtMS05IHtcblx0bWFyZ2luLWxlZnQ6IDExLjElO1xufVxuXG4ucHVzaC0xLTEwIHtcblx0bWFyZ2luLWxlZnQ6IDEwJTtcbn1cblxuLnB1c2gtMS0xMSB7XG5cdG1hcmdpbi1sZWZ0OiA5LjA5JTtcbn1cblxuLnB1c2gtMS0xMiB7XG5cdG1hcmdpbi1sZWZ0OiA4LjMzJVxufVxuXG4vKiBQdWxsaW5nIGJsb2NrcyAqL1xuLnB1bGwtMi0zLCAucHVsbC04LTEyIHtcblx0bWFyZ2luLWxlZnQ6IC02Ni42NiU7XG59XG5cbi5wdWxsLTEtMiwgLnB1bGwtNi0xMiB7XG5cdG1hcmdpbi1sZWZ0OiAtNTAlO1xufVxuXG4ucHVsbC01LTEyIHtcbiAgICBtYXJnaW4tbGVmdDogLTQxLjY2JTtcbn1cblxuLnB1bGwtMS0zLCAucHVsbC00LTEyIHtcblx0bWFyZ2luLWxlZnQ6IC0zMy4zMyU7XG59XG5cbi5wdWxsLTEtNCwgLnB1bGwtMy0xMiB7XG5cdG1hcmdpbi1sZWZ0OiAtMjUlO1xufVxuXG4ucHVsbC0xLTUge1xuXHRtYXJnaW4tbGVmdDogLTIwJTtcbn1cblxuLnB1bGwtMS02LCAucHVsbC0yLTEyIHtcblx0bWFyZ2luLWxlZnQ6IC0xNi42NjclO1xufVxuXG4ucHVsbC0xLTcge1xuXHRtYXJnaW4tbGVmdDogLTE0LjI4JTtcbn1cblxuLnB1bGwtMS04IHtcblx0bWFyZ2luLWxlZnQ6IC0xMi41JTtcbn1cblxuLnB1bGwtMS05IHtcblx0bWFyZ2luLWxlZnQ6IC0xMS4xJTtcbn1cblxuLnB1bGwtMS0xMCB7XG5cdG1hcmdpbi1sZWZ0OiAtMTAlO1xufVxuXG4ucHVsbC0xLTExIHtcblx0bWFyZ2luLWxlZnQ6IC05LjA5JTtcbn1cblxuLnB1bGwtMS0xMiB7XG5cdG1hcmdpbi1sZWZ0OiAtOC4zMyVcbn1cblxuQG1lZGlhIGhhbmRoZWxkLCBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcblx0LmdyaWQge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1pbi13aWR0aDogMDtcblx0XHRtYXJnaW4tbGVmdDogMDtcblx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0LypwYWRkaW5nLWxlZnQ6IDIwcHg7Ki8gLyogZ3JpZC1zcGFjZSB0byBsZWZ0ICovXG5cdFx0LypwYWRkaW5nLXJpZ2h0OiAxMHB4OyovIC8qIGdyaWQtc3BhY2UgdG8gcmlnaHQ6IChncmlkLXNwYWNlLWxlZnQgLSBjb2x1bW4tc3BhY2UpIGUuZy4gMjBweC0xMHB4PTEwcHggKi9cblx0XHRwYWRkaW5nLWxlZnQ6IDA7XG5cdFx0cGFkZGluZy1yaWdodDogMDtcblx0XHRcblx0XHQuc2l0ZS1oZWFkZXIgJiB7XG5cdFx0ICAgIFxuXHRcdH1cblx0XHRcblx0XHQuc2l0ZS1mb290ZXIgJiB7XG5cdFx0ICAgIHBhZGRpbmctbGVmdDoxMHB4O1xuXHRcdCAgICBwYWRkaW5nLXJpZ2h0OjEwcHg7XG5cdFx0ICAgIFxuXHRcdCAgICAuZ3JpZCB7XG5cdFx0ICAgICAgICBwYWRkaW5nOjAgMjBweDtcblx0XHQgICAgfVxuXHRcdH1cblx0XHRcblx0XHQmLmV4dHJhX3dpZGUge1xuICAgICAgICAgICAgbWF4LXdpZHRoOm5vbmU7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNDBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLnNpdGUtaGVhZGVyICYge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuc2l0ZS1mb290ZXIgJiB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmLmZ1bGwge1xuXHQgICAgICAgIG1heC13aWR0aDpub25lO1xuXHQgICAgICAgIHBhZGRpbmc6MDtcblx0ICAgIH1cblx0fVxuXG5cdFtjbGFzcyo9J2NvbC0nXSB7XG5cdFx0d2lkdGg6IGF1dG87XG5cdFx0ZmxvYXQ6IG5vbmU7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHBhZGRpbmctbGVmdDogMDtcblx0XHQvKnBhZGRpbmctcmlnaHQ6IDEwcHg7Ki8gLyogY29sdW1uLXNwYWNlICovXG5cdFx0cGFkZGluZy1yaWdodDogMDtcblx0fVxuXG5cdFtjbGFzcyo9J2NvbC0nXSBbY2xhc3MqPSdjb2wtJ10ge1xuXHRcdHBhZGRpbmctcmlnaHQ6IDA7XG5cdH1cblxuXHQvKiBNb2JpbGUgTGF5b3V0ICovXG5cblx0W2NsYXNzKj0nbW9iaWxlLWNvbC0nXSB7XG5cdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHBhZGRpbmctbGVmdDogMDtcblx0XHRwYWRkaW5nLXJpZ2h0OiAxMHB4OyAvKiBjb2x1bW4tc3BhY2UgKi9cblx0XHRwYWRkaW5nLWJvdHRvbTogMDtcblx0fVxuXG5cdC5tb2JpbGUtY29sLTEtMSB7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdH1cblx0Lm1vYmlsZS1jb2wtMi0zLCAubW9iaWxlLWNvbC04LTEyIHtcblx0XHR3aWR0aDogNjYuNjYlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS0yLCAubW9iaWxlLWNvbC02LTEyIHtcblx0XHR3aWR0aDogNTAlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS0zLCAubW9iaWxlLWNvbC00LTEyIHtcblx0XHR3aWR0aDogMzMuMzMlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS00LCAubW9iaWxlLWNvbC0zLTEyIHtcblx0XHR3aWR0aDogMjUlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS01IHtcblx0XHR3aWR0aDogMjAlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS02LCAubW9iaWxlLWNvbC0yLTEyIHtcblx0XHR3aWR0aDogMTYuNjY3JTtcblx0fVxuXG5cdC5tb2JpbGUtY29sLTEtNyB7XG5cdFx0d2lkdGg6IDE0LjI4JTtcblx0fVxuXG5cdC5tb2JpbGUtY29sLTEtOCB7XG5cdFx0d2lkdGg6IDEyLjUlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS05IHtcblx0XHR3aWR0aDogMTEuMSU7XG5cdH1cblxuXHQubW9iaWxlLWNvbC0xLTEwIHtcblx0XHR3aWR0aDogMTAlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS0xMSB7XG5cdFx0d2lkdGg6IDkuMDklO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtMS0xMiB7XG5cdFx0d2lkdGg6IDguMzMlXG5cdH1cblxuXHQvKiBMYXlvdXQgQ29sdW1ucyAqL1xuXG5cdC5tb2JpbGUtY29sLTExLTEyIHtcblx0XHR3aWR0aDogOTEuNjYlXG5cdH1cblxuXHQubW9iaWxlLWNvbC0xMC0xMiB7XG5cdFx0d2lkdGg6IDgzLjMzMyU7XG5cdH1cblxuXHQubW9iaWxlLWNvbC05LTEyIHtcblx0XHR3aWR0aDogNzUlO1xuXHR9XG5cblx0Lm1vYmlsZS1jb2wtNS0xMiB7XG5cdFx0d2lkdGg6IDQxLjY2JTtcblx0fVxuXG5cdC5tb2JpbGUtY29sLTctMTIge1xuXHRcdHdpZHRoOiA1OC4zMyVcblx0fVxuXHRcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5ncmlkIHtcblx0XHR3aWR0aDogMTAwJTtcblx0XHRtaW4td2lkdGg6IDA7XG5cdFx0bWFyZ2luLWxlZnQ6IDA7XG5cdFx0bWFyZ2luLXJpZ2h0OiAwO1xuXHRcdHBhZGRpbmctbGVmdDogMjBweDsgLyogZ3JpZC1zcGFjZSB0byBsZWZ0ICovXG5cdFx0cGFkZGluZy1yaWdodDogMTBweDsgLyogZ3JpZC1zcGFjZSB0byByaWdodDogKGdyaWQtc3BhY2UtbGVmdCAtIGNvbHVtbi1zcGFjZSkgZS5nLiAyMHB4LTEwcHg9MTBweCAqL1xuXHRcdFxuXHRcdCYuZXZlbl9wYWQge1xuXHQgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG5cdCAgICB9XG5cdCAgICBcblx0ICAgICYuZnVsbCB7XG5cdCAgICAgICAgbWF4LXdpZHRoOm5vbmU7XG5cdCAgICAgICAgcGFkZGluZzowO1xuXHQgICAgfVxuXHQgICAgXG5cdCAgICAuc2l0ZS1oZWFkZXIgJiB7XG5cdCAgICAgICAgcGFkZGluZzowO1xuXHQgICAgfVxuXHRcdFxuXHRcdC5zaXRlLWZvb3RlciAmIHtcblx0XHQgICAgXHRcdCAgICBcblx0XHQgICAgcGFkZGluZzowO1xuXHRcdH1cblx0fVxuXHRcblx0LnRhYmxldC1wdXNoLWxlZnQge1xuXHQgICAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbiAgICB9XG4gICAgXG4gICAgW2NsYXNzKj0ndGFibGV0LWNvbC0nXSB7XG5cdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHBhZGRpbmctbGVmdDogMDtcblx0XHRwYWRkaW5nLXJpZ2h0OiAxMHB4OyAvKiBjb2x1bW4tc3BhY2UgKi9cblx0XHRwYWRkaW5nLWJvdHRvbTogMDtcblx0XHRcblx0XHQuZXZlbl9wYWQgJiB7XG5cdFx0ICAgIHBhZGRpbmctcmlnaHQ6IDA7XG5cdFx0fVxuXHRcdFxuXHRcdCNmb290ZXJfY3RhICYge1xuXHRcdCAgICBmbG9hdDpub25lO1xuXHRcdCAgICBtYXJnaW46MCBhdXRvO1xuXHRcdH1cblx0XHRcblx0XHQuaGVybyAmIHtcblx0XHQgICAgZmxvYXQ6bm9uZTtcblx0XHQgICAgbWFyZ2luOjAgYXV0bztcblx0XHR9XG5cdFx0XG5cdH1cblxuXHQudGFibGV0LWNvbC0xLTEge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHR9XG5cdC50YWJsZXQtY29sLTItMywgLnRhYmxldC1jb2wtOC0xMiB7XG5cdFx0d2lkdGg6IDY2LjY2JTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtMiwgLnRhYmxldC1jb2wtNi0xMiB7XG5cdFx0d2lkdGg6IDUwJTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtMywgLnRhYmxldC1jb2wtNC0xMiB7XG5cdFx0d2lkdGg6IDMzLjMzJTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtNCwgLnRhYmxldC1jb2wtMy0xMiB7XG5cdFx0d2lkdGg6IDI1JTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtNSB7XG5cdFx0d2lkdGg6IDIwJTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtNiwgLnRhYmxldC1jb2wtMi0xMiB7XG5cdFx0d2lkdGg6IDE2LjY2NyU7XG5cdH1cblxuXHQudGFibGV0LWNvbC0xLTcge1xuXHRcdHdpZHRoOiAxNC4yOCU7XG5cdH1cblxuXHQudGFibGV0LWNvbC0xLTgge1xuXHRcdHdpZHRoOiAxMi41JTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtOSB7XG5cdFx0d2lkdGg6IDExLjElO1xuXHR9XG5cblx0LnRhYmxldC1jb2wtMS0xMCB7XG5cdFx0d2lkdGg6IDEwJTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtMTEge1xuXHRcdHdpZHRoOiA5LjA5JTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTEtMTIge1xuXHRcdHdpZHRoOiA4LjMzJVxuXHR9XG5cblx0LyogTGF5b3V0IENvbHVtbnMgKi9cblxuXHQudGFibGV0LWNvbC0xMS0xMiB7XG5cdFx0d2lkdGg6IDkxLjY2JVxuXHR9XG5cblx0LnRhYmxldC1jb2wtMTAtMTIge1xuXHRcdHdpZHRoOiA4My4zMzMlO1xuXHR9XG5cblx0LnRhYmxldC1jb2wtOS0xMiB7XG5cdFx0d2lkdGg6IDc1JTtcblx0fVxuXG5cdC50YWJsZXQtY29sLTUtMTIge1xuXHRcdHdpZHRoOiA0MS42NiU7XG5cdH1cblxuXHQudGFibGV0LWNvbC03LTEyIHtcblx0XHR3aWR0aDogNTguMzMlXG5cdH1cblx0XG5cdC8qIFB1c2hpbmcgYmxvY2tzICovXG4gICAgLnRhYmxldC1wdXNoLTItMywgLnRhYmxldC1wdXNoLTgtMTIge1xuICAgICAgICBtYXJnaW4tbGVmdDogNjYuNjYlO1xuICAgIH1cblxuICAgIC50YWJsZXQtcHVzaC0xLTIsIC50YWJsZXQtcHVzaC02LTEyIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDUwJTtcbiAgICB9XG5cbiAgICAudGFibGV0LXB1c2gtNS0xMiB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiA0MS42NiU7XG4gICAgfVxuXG4gICAgLnRhYmxldC1wdXNoLTEtMywgLnRhYmxldC1wdXNoLTQtMTIge1xuICAgICAgICBtYXJnaW4tbGVmdDogMzMuMzMlO1xuICAgIH1cblxuICAgIC50YWJsZXQtcHVzaC0xLTQsIC50YWJsZXQtcHVzaC0zLTEyIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDI1JTtcbiAgICB9XG5cbiAgICAudGFibGV0LXB1c2gtMS01IHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDIwJTtcbiAgICB9XG5cbiAgICAudGFibGV0LXB1c2gtMS02LCAudGFibGV0LXB1c2gtMi0xMiB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxNi42NjclO1xuICAgIH1cblxuICAgIC50YWJsZXQtcHVzaC0xLTcge1xuICAgICAgICBtYXJnaW4tbGVmdDogMTQuMjglO1xuICAgIH1cblxuICAgIC50YWJsZXQtcHVzaC0xLTgge1xuICAgICAgICBtYXJnaW4tbGVmdDogMTIuNSU7XG4gICAgfVxuXG4gICAgLnRhYmxldC1wdXNoLTEtOSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMS4xJTtcbiAgICB9XG5cbiAgICAudGFibGV0LXB1c2gtMS0xMCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMCU7XG4gICAgfVxuXG4gICAgLnRhYmxldC1wdXNoLTEtMTEge1xuICAgICAgICBtYXJnaW4tbGVmdDogOS4wOSU7XG4gICAgfVxuXG4gICAgLnRhYmxldC1wdXNoLTEtMTIge1xuICAgICAgICBtYXJnaW4tbGVmdDogOC4zMyVcbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogMTM2MHB4KSB7XG4gICAgXG4gICAgLmdyaWQge1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1pbi13aWR0aDogMDtcblx0XHRtYXJnaW4tbGVmdDogMDtcblx0XHRtYXJnaW4tcmlnaHQ6IDA7XG5cdFx0cGFkZGluZy1sZWZ0OiAyMHB4OyAvKiBncmlkLXNwYWNlIHRvIGxlZnQgKi9cblx0XHRwYWRkaW5nLXJpZ2h0OiAxMHB4OyAvKiBncmlkLXNwYWNlIHRvIHJpZ2h0OiAoZ3JpZC1zcGFjZS1sZWZ0IC0gY29sdW1uLXNwYWNlKSBlLmcuIDIwcHgtMTBweD0xMHB4ICovXG5cdFx0XG5cdFx0Ji5mdWxsIHtcblx0ICAgICAgICBtYXgtd2lkdGg6bm9uZTtcblx0ICAgICAgICBwYWRkaW5nOjA7XG5cdCAgICB9XG5cdFxuXHRcdCYuZXZlbl9wYWQge1xuXHQgICAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG5cdCAgICB9XG5cdCAgICBcblx0ICAgIC5zaXRlLWhlYWRlciAmIHtcblx0ICAgICAgICBwYWRkaW5nLWxlZnQ6IDA7XG5cdFx0ICAgIHBhZGRpbmctcmlnaHQ6IDA7XG5cdFx0ICAgIG1hcmdpbjowIGF1dG87XG5cdCAgICB9XG5cdFx0XG5cdFx0LnNpdGUtZm9vdGVyICYge1xuXHRcdCAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG5cdFx0ICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG5cdFx0fVxuXHR9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTMwMXB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogUkVTRVQgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmIsIHUsIGksIGNlbnRlcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcblx0bWFyZ2luOiAwO1xuXHRwYWRkaW5nOiAwO1xuXHRib3JkZXI6IDA7XG5cdGZvbnQtc2l6ZTogMTAwJTtcblx0Zm9udDogaW5oZXJpdDtcblx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuXHRkaXNwbGF5OiBibG9jaztcbn1cbmJvZHkge1xuXHRsaW5lLWhlaWdodDogMTtcbn1cbm9sLCB1bCB7XG5cdGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5ibG9ja3F1b3RlLCBxIHtcblx0cXVvdGVzOiBub25lO1xufVxuYmxvY2txdW90ZTpiZWZvcmUsIGJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSwgcTphZnRlciB7XG5cdGNvbnRlbnQ6ICcnO1xuXHRjb250ZW50OiBub25lO1xufVxudGFibGUge1xuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuXHRib3JkZXItc3BhY2luZzogMDtcbn1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU1RSVUNUVVJBTCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuaHRtbCB7XG4gICAgaGVpZ2h0OjEwMCU7XG59XG5ib2R5IHtcbiAgICBoZWlnaHQ6YXV0byAhaW1wb3J0YW50O1xuICAgIG1pbi1oZWlnaHQ6MTAwJTtcbiAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgIGZvbnQtd2VpZ2h0OiAkbm9ybWFsO1xuICAgIGZvbnQtc2l6ZTogMThweDtcblx0bGluZS1oZWlnaHQ6IDEuNDVlbTtcbiAgICBjb2xvcjogJGJsYWNrO1xuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG59XG5cbiNwYWdlIHtcblx0cG9zaXRpb246cmVsYXRpdmU7XG5cdHdpZHRoOjEwMCU7XG5cdGhlaWdodDoxMDAlO1xuXHRtYXJnaW46MCBhdXRvO1xufVxuXG4jbWFpbiB7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBtYXJnaW4tdG9wOjgxcHg7XG4gICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgdHJhbnNpdGlvbjptYXJnaW4gMC4zcztcbn1cblxuI3ByaW1hcnkge1xuICAgIGZsb2F0OmxlZnQ7XG4gICAgd2lkdGg6NTAlO1xuICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICBwYWRkaW5nOjAgMzBweCAwIDA7XG4gICAgXG4gICAgJi5mdWxsIHtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgYm9yZGVyOm5vbmU7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICB9XG4gICAgXG4gICAgLmFyY2hpdmUgJixcbiAgICAuc2luZ2xlLXBvc3QgJixcbiAgICAuc2VhcmNoICYge1xuICAgICAgICB3aWR0aDo3MiU7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICB9XG59XG4jc2Vjb25kYXJ5IHtcbiAgICBmbG9hdDpyaWdodDtcbiAgICB3aWR0aDo1MCU7XG4gICAgcGFkZGluZzowIDcwcHg7XG4gICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgIFxuICAgIC5hcmNoaXZlICYsXG4gICAgLnNpbmdsZS1wb3N0ICYsXG4gICAgLnNlYXJjaCAmIHtcbiAgICAgICAgd2lkdGg6MjglO1xuICAgICAgICBwYWRkaW5nOjAgNTBweDtcbiAgICB9XG59XG5cbiNjb250ZW50IHtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICB3aWR0aDoxMDAlO1xuICAgIC8qbWluLWhlaWdodDoxODAwcHg7Ki8gLyoqKioqKioqKioqKioqKioqKiBURU1QIEZPUiBERVYgKioqKiovXG4gICAgbWFyZ2luOjAgYXV0bztcbiAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgIHotaW5kZXg6MTA7XG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgIFxuICAgID4gYXJ0aWNsZSB7XG4gICAgICAgIC8vcGFkZGluZy10b3A6NDBweDtcbiAgICAgICAgXG4gICAgICAgID4gLmdmb3JtX3dyYXBwZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6MDtcbiAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDE2MHB4KTtcbiAgICAgICAgICAgIG1heC13aWR0aDoxMjAwcHg7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvIDgwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLnNpbmdsZS1wb3N0ICYge1xuICAgICAgICA+IGFydGljbGUge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OjYwcHg7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jb250ZW50X3NlY3Rpb24ge1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgLypvdmVyZmxvdzpoaWRkZW47Ki9cbiAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgXG4gICAgJi5jb250ZW50X3dyYXBwZXIge1xuICAgICAgICB6LWluZGV4OjEwO1xuICAgIH1cbiAgICBcbiAgICAmLmxpZ2h0LWJsdWUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkb2Zmd2hpdGU7XG4gICAgfVxuICAgIFxuICAgICYuZ3JheV9saWdodCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmF5X2xpZ2h0O1xuICAgIH1cbiAgICBcbiAgICAmLmxpZ2h0LWdyYXkge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheS1saWdodGVzdDtcbiAgICB9XG4gICAgXG4gICAgJi5ibHVlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XG4gICAgfVxuICAgIFxuICAgICYub3JhbmdlIHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJG9yYW5nZTtcbiAgICB9XG4gICAgXG4gICAgJi5wdXJwbGUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVycGxlO1xuICAgIH1cbiAgICBcbiAgICAmLmdyYXktbGlnaHQge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JheV9saWdodDtcbiAgICB9XG4gICAgXG4gICAgJi5ncmF5LWxpZ2h0IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyYXlfbGlnaHQ7XG4gICAgfVxuICAgIFxuICAgICYucHVycGxlLWRhcmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgfVxuICAgIFxuICAgICYud2hpdGUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgfVxuICAgIFxuICAgICYuZ3JhZC1ka3B1cnBsZS1ibHVlIHtcbiAgICAgICAgYmFja2dyb3VuZDogJHB1cnBsZV9kYXJrO1xuICAgICAgICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCg0NWRlZywgICRwdXJwbGVfZGFyayAwJSwgJGJsdWUgMTAwJSk7XG4gICAgICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCAgJHB1cnBsZV9kYXJrIDAlLCRibHVlIDEwMCUpO1xuICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICAkcHVycGxlX2RhcmsgMCUsJGJsdWUgMTAwJSk7XG4gICAgICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KCBzdGFydENvbG9yc3RyPScjMDAwMDQxJywgZW5kQ29sb3JzdHI9JyMyYjU5YzMnLEdyYWRpZW50VHlwZT0xICk7XG4gICAgfVxuICAgIFxuICAgICYuZ3JhZC1ka3B1cnBsZS1ibHVlLWZsYXQge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkcHVycGxlX2Rhcms7XG4gICAgICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KDkwZGVnLCAgJHB1cnBsZV9kYXJrIDAlLCAkYmx1ZSAxMDAlKTtcbiAgICAgICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoOTBkZWcsICAkcHVycGxlX2RhcmsgMCUsJGJsdWUgMTAwJSk7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgICRwdXJwbGVfZGFyayAwJSwkYmx1ZSAxMDAlKTtcbiAgICAgICAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoIHN0YXJ0Q29sb3JzdHI9JyMwMDAwNDEnLCBlbmRDb2xvcnN0cj0nIzJiNTljMycsR3JhZGllbnRUeXBlPTEgKTtcbiAgICB9XG4gICAgXG4gICAgJi5pbnZlcnQge1xuICAgICAgICA+ICoge1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgd2lkdGg6Y2FsYygxMDAlIC0gODBweCk7XG4gICAgbWF4LXdpZHRoOjEzNjBweDtcbiAgICBtYXJnaW46MCBhdXRvO1xuICAgIHBhZGRpbmc6NjBweCAwO1xuICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgXG4gICAgJi5mdWxsIHtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOm5vbmU7XG4gICAgfVxuICAgICYubmFycm93IHtcbiAgICAgICAgd2lkdGg6NzUlO1xuICAgICAgICBtYXgtd2lkdGg6Y2FsYygxMzYwcHggKiAwLjc1KTtcbiAgICB9XG4gICAgJi5uYXJyb3dlciB7XG4gICAgICAgIHdpZHRoOjY1JTtcbiAgICAgICAgbWF4LXdpZHRoOmNhbGMoMTM2MHB4ICogMC42NSk7XG4gICAgfVxufVxuXG4ud3lzaXd5ZyB7XG4gICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgIFxuICAgICYubmFycm93IHtcbiAgICAgICAgd2lkdGg6ODAlO1xuICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgIH1cbiAgICAmLm5hcnJvd2VyIHtcbiAgICAgICAgd2lkdGg6NjUlO1xuICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgI2NvbnRlbnQge1xuICAgICAgICBcbiAgICAgICAgPiBhcnRpY2xlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgPiAuZ2Zvcm1fd3JhcHBlciB7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYygxMDAlIC0gNDBweCk7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuc2luZ2xlLXBvc3QgJiB7XG4gICAgICAgICAgICA+IGFydGljbGUge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICNtYWluIHtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgfVxuICAgIFxuICAgICNwcmltYXJ5IHtcbiAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIHBhZGRpbmc6NDBweCAwO1xuICAgICAgICBcbiAgICAgICAgLmFyY2hpdmUgJixcbiAgICAgICAgLnNpbmdsZS1wb3N0ICYsXG4gICAgICAgIC5zZWFyY2ggJiB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICB9XG4gICAgfVxuICAgICNzZWNvbmRhcnkge1xuICAgICAgICBmbG9hdDpub25lO1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBtYXJnaW4tdG9wOjA7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgXG4gICAgICAgIC5hcmNoaXZlICYsXG4gICAgICAgIC5zaW5nbGUtcG9zdCAmLFxuICAgICAgICAuc2VhcmNoICYge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uIHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICBwYWRkaW5nLXRvcDo2MHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTozMHB4O1xuICAgIH1cbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uX2lubmVyLFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93LFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93ZXIge1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6MjBweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDoyMHB4O1xuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uX2lubmVyLFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93LFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93ZXIge1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBwYWRkaW5nLWxlZnQ6MjBweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDoyMHB4O1xuICAgIH1cbiAgICBcbn1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgICNjb250ZW50IHtcbiAgICAgICAgXG4gICAgICAgID4gYXJ0aWNsZSB7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuc2luZ2xlLXBvc3QgJiB7XG4gICAgICAgICAgICA+IGFydGljbGUge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICNzZWNvbmRhcnkge1xuICAgICAgICB3aWR0aDo1MCU7XG4gICAgICAgIHBhZGRpbmc6MCA0MHB4O1xuICAgIFxuICAgICAgICAuYXJjaGl2ZSAmLFxuICAgICAgICAuc2luZ2xlLXBvc3QgJixcbiAgICAgICAgLnNlYXJjaCAmIHtcbiAgICAgICAgICAgIHdpZHRoOjI4JTtcbiAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgMzBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIC53eXNpd3lnIHtcbiAgICAgICAgXG4gICAgICAgIC8qYnIge1xuICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICB9Ki9cbiAgICAgICAgXG4gICAgICAgICYubmFycm93IHtcbiAgICAgICAgICAgIHdpZHRoOjg1JTtcbiAgICAgICAgfVxuICAgICAgICAmLm5hcnJvd2VyIHtcbiAgICAgICAgICAgIHdpZHRoOjg1JTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93LFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93ZXIge1xuICAgICAgICB3aWR0aDo4NSU7XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICBcbiAgICB9XG4gICAgXG59XG5cbi8qIFNQRUNJRklDIEZPUiBCUklOR0lORyBJTiBNT0JJTEUgTkFWIEFORCBIQU1CVVJHRVIgKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIGJvZHkubW9iaWxlX25hdl9vcGVuIHtcbiAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgIH1cbiAgICBcbiAgICAjc2l0ZS1pbm5lciB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIH1cbiAgICBcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBUWVBPR1JBUEhZICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4qIHtcbiAgICA6Oi1tb3otc2VsZWN0aW9uIHtcbiAgICAgICAgYmFja2dyb3VuZDogJG9yYW5nZTtcbiAgICB9XG4gICAgOjpzZWxlY3Rpb24ge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkb3JhbmdlO1xuICAgIH1cbn1cblxuXG5ociB7XG4gICAgaGVpZ2h0OiAxcHg7XG4gICAgYmFja2dyb3VuZDogJGJsdWU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG1hcmdpbjogMjRweCAwO1xufVxuXG5hIHtcblx0dGV4dC1kZWNvcmF0aW9uOm5vbmU7XG5cdHRyYW5zaXRpb246YWxsIDAuM3M7XG5cdGNvbG9yOiAkYmx1ZTtcblx0XG5cdCY6aG92ZXIge1xuXHQgICAgY29sb3I6ICRvcmFuZ2U7XG5cdH1cbn1cblxuaDEsaDIsaDMsaDQsaDUsaDYge1xuICAgIG1hcmdpbjowIDAgMC41ZW0gMDtcbiAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgbGluZS1oZWlnaHQ6MS4yNWVtO1xuICAgIGNvbG9yOiAkYmx1ZTtcbiAgICBcbiAgICAmLmxhcmdlX21hcmdpbiB7XG4gICAgICAgIG1hcmdpbjowIDAgMWVtIDA7XG4gICAgfVxufVxuaDEge1xuICAgIGZvbnQtZmFtaWx5OiAkc3NhbnM7XG4gICAgZm9udC1zaXplOiAzLjg5ZW07IC8qIDcwcHggKi9cbiAgICBsaW5lLWhlaWdodDoxLjA1ZW07XG4gICAgXG4gICAgJi5taWRsb25nIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjc4ZW07IC8qIDUwcHggKi9cbiAgICB9XG4gICAgJi5sb25nIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjIyZW07IC8qIDQwcHggKi9cbiAgICB9XG4gICAgXG4gICAgI2hlcm9fc3MgJiB7XG4gICAgICAgIGZvbnQtc2l6ZToxLjc4ZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OjEuMzc1ZW07XG4gICAgfVxufVxuXG5oMiB7XG4gICAgZm9udC1zaXplOiAyZW07IC8qIDM2cHggKi9cbiAgICBsaW5lLWhlaWdodDoxLjI1ZW07XG4gICAgZm9udC1mYW1pbHk6ICRzc2FucztcbiAgICBmb250LXdlaWdodDokbm9ybWFsO1xuICAgIGNvbG9yOiRvcmFuZ2U7XG4gICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOjRweDtcbiAgICBcbiAgICAmLmxhcmdlX3B1cnBsZSB7XG4gICAgICAgIGZvbnQtc2l6ZToyLjMzZW07XG4gICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgfVxuICAgIFxuICAgICYubGluZWQsXG4gICAgJi5saW5lZF9sZWZ0IHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206MS41ZW07XG4gICAgICAgIFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICB0b3A6Y2FsYygxMDAlICsgMjBweCk7XG4gICAgICAgICAgICB3aWR0aDo3NXB4O1xuICAgICAgICAgICAgaGVpZ2h0OjJweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmLmFsdCB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDAuNzVlbTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgJi5saW5lZF9sZWZ0IHtcbiAgICAgICAgXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgJi50aXRsZV9jYXNlIHtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZSAhaW1wb3J0YW50O1xuICAgICAgICBsZXR0ZXItc3BhY2luZzowICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG5oMyB7XG4gICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgZm9udC1zaXplOjEuNWVtOyAvKiAyN3B4ICovXG4gICAgZm9udC1mYW1pbHk6ICRzc2FucztcbiAgICBsaW5lLWhlaWdodDoxLjI1ZW07XG4gICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOjNweDtcbiAgICBcbiAgICAmLmxpbmVkLFxuICAgICYubGluZWRfbGVmdCB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOjEuNWVtO1xuICAgICAgICBcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgdG9wOmNhbGMoMTAwJSArIDIwcHgpO1xuICAgICAgICAgICAgd2lkdGg6NzVweDtcbiAgICAgICAgICAgIGhlaWdodDoycHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAmLmxpbmVkX2xlZnQge1xuICAgICAgICBcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICB0cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAmLnRpdGxlX2Nhc2Uge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOjAgIWltcG9ydGFudDtcbiAgICB9XG59XG5cbmg0IHtcbiAgICBtYXJnaW46MCAwIDAuNWVtO1xuICAgIGNvbG9yOiRibGFjaztcbiAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgIGZvbnQtc2l6ZTogMS4yMmVtOyAvKiAyMnB4ICovXG4gICAgbGluZS1oZWlnaHQ6MS40NWVtO1xuICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6M3B4O1xuICAgIFxuICAgICYubGluZWQsXG4gICAgJi5saW5lZF9sZWZ0IHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbi1ib3R0b206MS41ZW07XG4gICAgICAgIFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICB0b3A6Y2FsYygxMDAlICsgMTJweCk7XG4gICAgICAgICAgICB3aWR0aDo3NXB4O1xuICAgICAgICAgICAgaGVpZ2h0OjJweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYubGluZWRfbGVmdCB7XG4gICAgICAgIFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgIHRyYW5zZm9ybTpub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYuY2hlY2ttYXJrIHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmc6MCAwIDAgNjBweDtcbiAgICAgICAgXG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgdG9wOi01cHg7XG4gICAgICAgICAgICB3aWR0aDozNnB4O1xuICAgICAgICAgICAgaGVpZ2h0OjM2cHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCguLi8uLi9pbWFnZXMvbGlzdC10eXBlLWNoZWNrbWFyay5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAmLnRpdGxlX2Nhc2Uge1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOjAgIWltcG9ydGFudDtcbiAgICB9XG59XG5cbmg1IHtcbiAgICBtYXJnaW46MDtcbiAgICBmb250LXNpemU6MWVtOyAvKiAxOHB4ICovXG4gICAgZm9udC13ZWlnaHQ6JGJvbGQ7XG59XG5oNiB7XG4gICAgbWFyZ2luOjA7XG4gICAgZm9udC1zaXplOjFlbTsgLyogMThweCAqL1xufVxuXG5zdXAsIHN1YiB7XG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IC0wLjU1ZW07XG4gICAgbGluZS1oZWlnaHQ6IDA7XG4gICAgZm9udC1zaXplOiA2MCU7XG59XG5zdWIgeyBcbiAgICB0b3A6IDAuNTVlbTsgXG59XG5cbi53eXNpd3lnIHtcbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOjFlbTtcbiAgICAgICAgXG4gICAgICAgIC5idG4ge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTowICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdWwsXG4gICAgb2wge1xuICAgICAgICBtYXJnaW46IDFlbSAwIDEuNTZlbSAyMHB4O1xuICAgICAgICBsaXN0LXN0eWxlOmRlY2ltYWw7XG4gICAgfVxuICAgIHVsIHtcbiAgICAgICAgcGFkZGluZzowO1xuICAgICAgICBsaXN0LXN0eWxlOmRpc2M7XG4gICAgfVxuICAgIHVsIGxpLFxuICAgIG9sIGxpIHtcbiAgICAgICAgZGlzcGxheTogbGlzdC1pdGVtOyBcbiAgICAgICAgbWFyZ2luLWJvdHRvbTowLjI1ZW07XG4gICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OjEuNDVlbTtcbiAgICAgICAgY29sb3I6JGdyYXk7XG4gICAgfVxuICAgIG9sIGxpIHtcbiAgICAgICAgbGlzdC1zdHlsZTogZGVjaW1hbDtcbiAgICB9XG4gICAgICAgIFxuICAgIHVsIGxpIHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICAgICAgXG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDotMjBweDtcbiAgICAgICAgICAgIHRvcDowLjVlbTtcbiAgICAgICAgICAgIHdpZHRoOjhweDtcbiAgICAgICAgICAgIGhlaWdodDo4cHg7XG4gICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czo0cHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRibHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC5pbnZlcnQgJiB7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICBhIHtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtcbiAgICAgICAgY29sb3I6ICRibHVlO1xuICAgICAgICBcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5idG4ge1xuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuYnRuIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH1cbiAgICBcbiAgICBwOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgIC8vbWFyZ2luOjA7XG4gICAgICAgIFxuICAgICAgICBzcGFuLmludHJvIHtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYucGxhc3Qge1xuICAgICAgICBcbiAgICAgICAgcDpsYXN0LW9mLXR5cGUge1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHA6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjEuNTZlbTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcDpvbmx5LW9mLXR5cGUge1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5zaW5nbGUtcG9zdCAjY29udGVudCB7XG4gICAgXG4gICAgdWwsXG4gICAgb2wge1xuICAgICAgICBtYXJnaW46IDFlbSAwIDEuNTZlbSAyMHB4O1xuICAgICAgICBsaXN0LXN0eWxlOmRlY2ltYWw7XG4gICAgfVxuICAgIHVsIHtcbiAgICAgICAgcGFkZGluZzowO1xuICAgICAgICBsaXN0LXN0eWxlOmRpc2M7XG4gICAgfVxuICAgIHVsIGxpLFxuICAgIG9sIGxpIHtcbiAgICAgICAgZGlzcGxheTogbGlzdC1pdGVtOyBcbiAgICAgICAgbWFyZ2luLWJvdHRvbTowLjI1ZW07XG4gICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OjEuNDVlbTtcbiAgICAgICAgY29sb3I6JGJsYWNrO1xuICAgIH1cbiAgICBvbCBsaSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6IGRlY2ltYWw7XG4gICAgfVxuICAgICAgICBcbiAgICB1bCBsaSB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICBcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5wIHtcbiAgICBtYXJnaW4tYm90dG9tOjEuNTZlbTtcbiAgICBsaW5lLWhlaWdodDoxLjU2ZW07XG4gICAgXG4gICAgc3Ryb25nLCBiIHtcbiAgICAgICAgZm9udC1mYW1pbHk6JHNzYW5zO1xuICAgIH1cbiAgICBcbiAgICAmLmZvb3Rub3RlIHtcbiAgICAgICAgZm9udC1zaXplOjAuOGVtO1xuICAgICAgICBmb250LXN0eWxlOml0YWxpYztcbiAgICB9XG59XG5cbnN0cm9uZywgYiB7XG4gICAgZm9udC13ZWlnaHQ6ICRib2xkO1xufVxuaSwgZW0ge1xuICAgIGZvbnQtc3R5bGU6aXRhbGljO1xufVxuXG5ibG9ja3F1b3RlIHtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBAZXh0ZW5kIHA7XG4gICAgZm9udC1zaXplOjEuNGVtO1xuICAgIGxpbmUtaGVpZ2h0OjEuNWVtO1xuICAgIGZvbnQtc3R5bGU6aXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgbWFyZ2luOjAgMCAyZW07XG4gICAgcGFkZGluZzowO1xuICAgIGJvcmRlcjpub25lO1xuICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgIFxuICAgIHAge1xuICAgICAgICBtYXJnaW46MDtcbiAgICB9XG4gICAgXG4gICAgLnd5c2l3eWcgJiB7XG4gICAgICAgIG1hcmdpbjowIDAgMmVtIDA7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICB9XG59XG5jaXRlLFxucC5jaXRlIHtcbiAgICBAZXh0ZW5kIHA7XG4gICAgZm9udC1zaXplOjEuNGVtO1xuICAgIGxpbmUtaGVpZ2h0OjEuNWVtO1xuICAgIGZvbnQtc3R5bGU6aXRhbGljO1xuICAgIGZvbnQtd2VpZ2h0OiRib2xkO1xuICAgIG1hcmdpbi1ib3R0b206MS41NmVtO1xuICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgXG4gICAgLnd5c2l3eWcgJiB7XG4gICAgICAgIG1hcmdpbjowO1xuICAgIH1cbiAgICBcbiAgICBzcGFuIHtcbiAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICB9XG59XG5cbmltZ3tcblx0dmVydGljYWwtYWxpZ246IGJvdHRvbTtcblx0XG5cdC53eXNpd3lnICYge1xuXHQgICAgbWF4LXdpZHRoOjEwMCU7XG5cdCAgICBoZWlnaHQ6YXV0bztcblx0ICAgIFxuXHQgICAgJi5hbGlnbmNlbnRlciB7XG5cdCAgICAgICAgXG5cdCAgICB9XG5cdH1cbn1cbi5zY3JlZW4tcmVhZGVyLXRleHQge1xuICAgIGNsaXA6cmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIHRvcDoxMHB4O1xuICAgIGxlZnQ6MTBweDtcbiAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgIGZvbnQtc2l6ZTowLjg5ZW07XG4gICAgZm9udC13ZWlnaHQ6ICRub3JtYWw7XG4gICAgY29sb3I6ICRibHVlO1xuICAgIHotaW5kZXg6MTAwMDA7XG4gICAgb3BhY2l0eTowO1xuICAgIHRyYW5zaXRpb246b3BhY2l0eSAwLjJzO1xufVxuLnNpdGUtbmF2aWdhdGlvbiAuc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgICBsZWZ0OmF1dG87XG4gICAgcmlnaHQ6MTBweDtcbn1cbi5zY3JlZW4tcmVhZGVyLXRleHQ6Zm9jdXMge1xuICAgIGNsaXA6YXV0bztcbiAgICBvcGFjaXR5OjE7XG59XG5cbi8qKioqIFNQRUNJQUwgTkVTVEVEIE5VTUJFUkVEIExJU1RTLCBBIExBIFNVUFBPUlQgU0VSVklDRVMgQUdSRUVNRU5UICoqKioqKioqKioqKioqKioqKi9cbi53eXNpd3lnIHtcblxuICAgIC50YWJfaW5kZW50X3dyYXAge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6MzZweDtcbiAgICB9XG4gICAgXG4gICAgLnNwZWNpYWxfb2wge1xuICAgICAgICBcbiAgICAgICAgbGkge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIGNvdW50ZXItaW5jcmVtZW50OiBpdGVtO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTAwJTtcbiAgICAgICAgICAgICAgICBjb250ZW50OmNvdW50ZXJzKGl0ZW0sICcuJykgJy4gJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgY291bnRlci1yZXNldDogaXRlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbm9sIGxpIHtkaXNwbGF5OmJsb2NrO30gLyogaGlkZSBvcmlnaW5hbCBsaXN0IGNvdW50ZXIgKi9cbm9sID4gbGk6Zmlyc3QtY2hpbGQge2NvdW50ZXItcmVzZXQ6IGl0ZW07fSAvKiByZXNldCBjb3VudGVyICovXG5vbCA+IGxpIHtjb3VudGVyLWluY3JlbWVudDogaXRlbTsgcG9zaXRpb246IHJlbGF0aXZlO30gLyogaW5jcmVtZW50IGNvdW50ZXIgKi9cbm9sID4gbGk6YmVmb3JlIHtjb250ZW50OmNvdW50ZXJzKGl0ZW0sIFwiLlwiKSBcIi4gXCI7IHBvc2l0aW9uOiBhYnNvbHV0ZTsgbWFyZ2luLXJpZ2h0OiAxMDAlOyByaWdodDogMTBweDt9IC8qIHByaW50IGNvdW50ZXIgKi9cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgaDIsaDMsaDQsaDUsaDYge1xuICAgICAgICBcbiAgICAgICAgYnIge1xuICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjQ0ZW07IC8qIDQ0cHggKi9cbiAgICBcbiAgICAgICAgJi5taWRsb25nIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS43NWVtO1xuICAgICAgICB9XG4gICAgICAgICYubG9uZyB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEuNGVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgaDIge1xuICAgICAgICBmb250LXNpemU6Mi4yMmVtOyAvKiA0MHB4ICovXG4gICAgfVxuICAgIFxuICAgIGgzIHtcbiAgICAgICAgZm9udC1zaXplOjEuNTZlbTsgLyogMjhweCAqL1xuICAgIH1cbiAgICBcbiAgICBoNCB7XG4gICAgICAgIGZvbnQtc2l6ZToxLjIyZW07IC8qIDIycHggKi9cbiAgICB9XG4gICAgXG4gICAgLnd5c2l3eWcge1xuICAgICAgICBwIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTowLjg5ZW07XG4gICAgICAgIH1cbiAgICAgICAgdWwsXG4gICAgICAgIG9sIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTowLjg5ZW07XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY2l0ZSxcbiAgICBwLmNpdGUge1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOjAuODllbTtcbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogM2VtOyAvKiA1NHB4ICovXG4gICAgXG4gICAgICAgICYubWlkbG9uZyB7XG4gICAgICAgICAgICBmb250LXNpemU6IDIuMjVlbTtcbiAgICAgICAgfVxuICAgICAgICAmLmxvbmcge1xuICAgICAgICAgICAgZm9udC1zaXplOiAxLjc1ZW07XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICNoZXJvX3NzICYge1xuICAgICAgICAgICAgZm9udC1zaXplOjEuNWVtO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGgyIHtcbiAgICAgICAgZm9udC1zaXplOiAyLjQ0ZW07IC8qIDQ0cHggKi9cbiAgICB9XG5cbiAgICBoMyB7XG4gICAgICAgIGZvbnQtc2l6ZToxLjc4ZW07IC8qIDMycHggKi9cbiAgICB9XG4gICAgXG4gICAgLnd5c2l3eWcge1xuICAgICAgICBwIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTowLjg5ZW07XG4gICAgICAgIH1cbiAgICAgICAgdWwsXG4gICAgICAgIG9sIHtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTowLjg5ZW07XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY2l0ZSxcbiAgICBwLmNpdGUge1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICB9XG5cbiAgICBwIHtcbiAgICAgICAgZm9udC1zaXplOjAuODllbTtcbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBVVElMSVRZICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgIEhFTFBFUiBDTEFTU0VTXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cbi5jbGVhcmZpeDpiZWZvcmUsIC5jbGVhcmZpeDphZnRlciB7IGNvbnRlbnQ6IFwiXCI7IGRpc3BsYXk6IHRhYmxlOyB9XG4uY2xlYXJmaXg6YWZ0ZXIgeyBjbGVhcjogYm90aDsgfVxuLmNsZWFyZml4IHsgKnpvb206IDE7IH1cblxuXG4vKiBQQVRURVJOUyAqL1xuXG4vL0JVTExFVEVEIExJU1QgV0lUSCBCSUcgQ0hFQ0sgTUFSSyBJQ09OU1xuLnd5c2l3eWcgdWwuY2hlY2ttYXJrIHtcbiAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICBcbiAgICA+IGxpIHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbjowIDAgMjBweDtcbiAgICAgICAgcGFkZGluZzowIDAgMCA2MHB4O1xuICAgICAgICBjb2xvcjogJG5lYXJseWJsYWNrO1xuICAgICAgICBcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICB0b3A6LTVweDtcbiAgICAgICAgICAgIHdpZHRoOjM2cHg7XG4gICAgICAgICAgICBoZWlnaHQ6MzZweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKC4uLy4uL2ltYWdlcy9saXN0LXR5cGUtY2hlY2ttYXJrLnN2Zykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLmZsZXhyb3cge1xuICAgIGRpc3BsYXk6ZmxleDtcbiAgICBcbiAgICAuZmxleF9pIHtcbiAgICAgICAgZmxleC1ncm93OjE7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICAuZmxleF9pICsgLmZsZXhfaSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OjUlO1xuICAgIH1cbiAgICBcbn1cblxuXG4uYWxpZ25sZWZ0LFxuLmFsaWducmlnaHQge1xuICAgIGZsb2F0Om5vbmU7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBtYXgtd2lkdGg6MTAwJTtcbiAgICBoZWlnaHQ6YXV0bztcbn1cbi5hbGlnbm5vbmUsXG4uYWxpZ25jZW50ZXIge1xuICAgIHdpZHRoOmF1dG87XG4gICAgbWF4LXdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OmF1dG87XG4gICAgdGV4dC1hbGlnbjpjZW50ZXI7XG59XG5cbmZpZ3VyZSB7XG4gICAgZGlzcGxheTpibG9jaztcbiAgICB3aWR0aDoxMDAlO1xuICAgIG1hcmdpbjowIGF1dG8gMS42N2VtO1xuICAgIFxuICAgICYud3AtY2FwdGlvbiB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206MTBweDtcbiAgICB9XG59XG4gICAgXG5maWdjYXB0aW9uIHtcbiAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgZm9udC1zaXplOjAuNzhlbTtcbiAgICBsaW5lLWhlaWdodDoxLjRlbTtcbiAgICBmb250LXN0eWxlOml0YWxpYztcbiAgICBjb2xvcjogIzY2Njtcbn1cblxuXG5cbmlmcmFtZSB7XG4gICAgbWF4LXdpZHRoOjEwMCUgIWltcG9ydGFudDtcbn1cblxuLnZpZF9jb250IHtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O1xuICAgIGJhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgIHotaW5kZXg6MTA7XG59XG5cbi52aWRlb19jb250YWluZXIge1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIC8vcGFkZGluZy1ib3R0b206NTYuMjUlO1xuICAgIHBhZGRpbmctYm90dG9tOjYyLjUlO1xuICAgIC8qcGFkZGluZy10b3A6MzBweDsqL1xuICAgIG1hcmdpbjowIDAgMCAwO1xuICAgIHdpZHRoOjEwMCU7XG4gICAgaGVpZ2h0OjA7XG4gICAgb3BhY2l0eToxO1xuICAgIHZpc2liaWxpdHk6dmlzaWJsZTtcbiAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgdHJhbnNpdGlvbjpvcGFjaXR5IDAuM3M7XG4gICAgXG4gICAgJi5vZmYge1xuICAgICAgICBvcGFjaXR5OjA7XG4gICAgICAgIHZpc2liaWxpdHk6aGlkZGVuO1xuICAgIH1cbn1cbi52aWRlb19jb250YWluZXIgaWZyYW1lLFxuLnZpZGVvX2NvbnRhaW5lciBvYmplY3QsXG4udmlkZW9fY29udGFpbmVyIGVtYmVkIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4udG9fY29sc18zIHtcbiAgICBjb2x1bW4tY291bnQ6MztcbiAgICBjb2x1bW4tZ2FwOiA3NHB4O1xuICAgIFxuICAgID4gbGkge1xuICAgICAgICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7XG4gICAgICAgIGJyZWFrLWluc2lkZTogYXZvaWQ7XG4gICAgfVxufVxuXG4ucG9zX3JlbCB7XG4gICAgcG9zaXRpb246cmVsYXRpdmUgIWltcG9ydGFudDtcbn1cbi5mbG9hdF9sZWZ0IHtcblx0ZmxvYXQ6bGVmdCAhaW1wb3J0YW50O1xufVxuLmZsb2F0X3JpZ2h0IHtcblx0ZmxvYXQ6cmlnaHQgIWltcG9ydGFudDtcbn1cbi5vZl9oaWRkZW4ge1xuICAgIG92ZXJmbG93OmhpZGRlbiAhaW1wb3J0YW50O1xufVxuLm5vbWFyZ2luIHtcbiAgICBtYXJnaW46MCAhaW1wb3J0YW50O1xufVxuLm5vbWFyZ2luX3RvcCB7XG4gICAgbWFyZ2luLXRvcDowICFpbXBvcnRhbnQ7XG59XG4ubm9tYXJnaW5fYm90dG9tIHtcbiAgICBtYXJnaW4tYm90dG9tOjAgIWltcG9ydGFudDtcbn1cbi5sYXJnZV9tYXJnaW5fYm90dG9tIHtcbiAgICBtYXJnaW4tYm90dG9tOjYwcHggIWltcG9ydGFudDtcbn1cbi50YWxsX3BhZCB7XG4gICAgcGFkZGluZy10b3A6MTAwcHggIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLWJvdHRvbToxMDBweCAhaW1wb3J0YW50O1xufVxuLnNob3J0X3BhZCB7XG4gICAgcGFkZGluZy10b3A6MzBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOjMwcHggIWltcG9ydGFudDtcbn1cbi5taWRfcGFkIHtcbiAgICBwYWRkaW5nLXRvcDo2MHB4ICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1ib3R0b206NjBweCAhaW1wb3J0YW50O1xufVxuLm5vcGFkZGluZyB7XG4gICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG59XG4ubm9wYWRkaW5nX2xyIHtcbiAgICBwYWRkaW5nLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctcmlnaHQ6MCAhaW1wb3J0YW50O1xufVxuLm5vcGFkZGluZ190YiB7XG4gICAgcGFkZGluZy10b3A6MCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOjAgIWltcG9ydGFudDtcbn1cbi5ub3BhZGRpbmdfdG9wIHtcbiAgICBwYWRkaW5nLXRvcDowICFpbXBvcnRhbnQ7XG59XG4ubm9wYWRkaW5nX2JvdHRvbSB7XG4gICAgcGFkZGluZy1ib3R0b206MCAhaW1wb3J0YW50O1xufVxuLnNtYWxsX3BhZGRpbmdfYm90dG9tIHtcbiAgICBwYWRkaW5nLWJvdHRvbTozMHB4ICFpbXBvcnRhbnQ7XG59XG4ubGFyZ2VfcGFkZGluZ19ib3R0b20ge1xuICAgIHBhZGRpbmctYm90dG9tOjEwMHB4ICFpbXBvcnRhbnQ7XG59XG4uc21hbGxfcGFkZGluZ190b3Age1xuICAgIHBhZGRpbmctdG9wOjMwcHggIWltcG9ydGFudDtcbn1cbi5sYXJnZV9wYWRkaW5nX3RvcCB7XG4gICAgcGFkZGluZy10b3A6MTAwcHggIWltcG9ydGFudDtcbn1cblxuLyogU09VUFk6IFBST1ZJREUgQUJJTElUWSBUTyBPVkVSUklERSBZQiBCTE9DSyBQQURESU5HUyBWSUEgR1VURU5CRVJHIEFEVkFOQ0VEIENTUyBGSUVMRCAqL1xuLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nIHtcbiAgICBcbiAgICAmLnRhbGxfcGFkIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6MTAwcHggIWltcG9ydGFudDtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOjEwMHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5taWRfcGFkIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6NjBweCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206NjBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYuc2hvcnRfcGFkIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6MzBweCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206MzBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYubm9wYWRkaW5nIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5ub3BhZGRpbmdfbHIge1xuICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjAgIWltcG9ydGFudDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDowICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5ub3BhZGRpbmdfdGIge1xuICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDowICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTowICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5ub3BhZGRpbmdfdG9wIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6MCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYubm9wYWRkaW5nX2JvdHRvbSB7XG4gICAgICAgIHBhZGRpbmc6MCAhaW1wb3J0YW50O1xuICAgICAgICAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctYm90dG9tOjAgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAmLnNtYWxsX3BhZGRpbmdfdG9wIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6MzBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYuc21hbGxfcGFkZGluZ19ib3R0b20ge1xuICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTozMHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5zbWFsbF9wYWRkaW5nX3RiIHtcbiAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6MzBweCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206MzBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYubGFyZ2VfcGFkZGluZ190b3Age1xuICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLXRvcDoxMDBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYubGFyZ2VfcGFkZGluZ19ib3R0b20ge1xuICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbToxMDBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgICYubGFyZ2VfcGFkZGluZ190YiB7XG4gICAgICAgIHBhZGRpbmc6MCAhaW1wb3J0YW50O1xuICAgICAgICAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOjEwMHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbToxMDBweCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubm9idWxsZXRzIHtcbiAgICBsaXN0LXN0eWxlOm5vbmUgIWltcG9ydGFudDtcbn1cbi51cHBlciB7XG4gICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlICFpbXBvcnRhbnQ7XG59XG4ubG93ZXIge1xuICAgIHRleHQtdHJhbnNmb3JtOm5vbmUgIWltcG9ydGFudDtcbn1cbi5jZW50ZXJlZCB7XG4gICAgdGV4dC1hbGlnbjpjZW50ZXIgIWltcG9ydGFudDtcbn1cbi5sZWZ0ZWQge1xuICAgIHRleHQtYWxpZ246bGVmdCAhaW1wb3J0YW50O1xufVxuLnJpZ2h0ZWQge1xuICAgIHRleHQtYWxpZ246cmlnaHQgIWltcG9ydGFudDtcbn1cbi5ibG9ja2l0IHtcbiAgICBkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnQ7XG59XG4uZmxleF92ZXJ0X2NlbnQge1xuICAgIGRpc3BsYXk6ZmxleCAhaW1wb3J0YW50O1xuICAgIGFsaWduLWl0ZW1zOmNlbnRlciAhaW1wb3J0YW50O1xufVxuLndpZHRoX2NhcCB7XG4gICAgbWF4LXdpZHRoOjEwMDhweDtcbn1cblxuLnNob3dfb25fbW9iaWxlIHtcblx0ZGlzcGxheTpub25lICFpbXBvcnRhbnQ7XG59XG4uaGlkZV9vbl9tb2JpbGUge1xuXHRkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnQ7XG59XG5cbi5zaG93X29uX3RhYmxldCB7XG5cdGRpc3BsYXk6bm9uZSAhaW1wb3J0YW50O1xufVxuLmhpZGVfb25fdGFibGV0IHtcblx0ZGlzcGxheTpibG9jayAhaW1wb3J0YW50O1xufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgXG4gICAgLmZsZXhyb3cge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIFxuICAgICAgICAmLm5vZmxleF9tIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5mbGV4X2kgKyAuZmxleF9pIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgfVxuICAgIFxuICAgIC50b19jb2xzXzMge1xuICAgICAgICBjb2x1bW4tY291bnQ6MTtcbiAgICB9XG4gICAgXG4gICAgLnRhbGxfcGFkIHtcbiAgICAgICAgcGFkZGluZy10b3A6NjBweCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTo2MHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIFxuICAgIC5zaG93X29uX21vYmlsZSB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2sgIWltcG9ydGFudDtcbiAgICB9XG4gICAgLmhpZGVfb25fbW9iaWxlIHtcbiAgICAgICAgZGlzcGxheTpub25lICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLnNob3dfb25fdGFibGV0IHtcbiAgICAgICAgZGlzcGxheTpibG9jayAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAuaGlkZV9vbl90YWJsZXQge1xuICAgICAgICBkaXNwbGF5Om5vbmUgIWltcG9ydGFudDtcbiAgICB9XG4gICAgXG4gICAgLm5vcGFkZGluZ190YWJsZXQge1xuICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICB9XG4gICAgXG4gICAgLnRhbGxfcGFkIHtcbiAgICAgICAgcGFkZGluZy10b3A6NjBweCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTo2MHB4ICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIFxufSIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNMSURFUlMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zbGljay1zbGlkZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtbXMtdG91Y2gtYWN0aW9uOiBwYW4teTtcbiAgICB0b3VjaC1hY3Rpb246IHBhbi15O1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG4uc2xpY2stbGlzdCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICB9XG5cbiAgICAmLmRyYWdnaW5nIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBjdXJzb3I6IGhhbmQ7XG4gICAgfVxufVxuLnNsaWNrLXNsaWRlciAuc2xpY2stdHJhY2ssXG4uc2xpY2stc2xpZGVyIC5zbGljay1saXN0IHtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgIC1vLXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbn1cblxuLnNsaWNrLXRyYWNrIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuXG4gICAgJjpiZWZvcmUsXG4gICAgJjphZnRlciB7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIH1cblxuICAgICY6YWZ0ZXIge1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG5cbiAgICAuc2xpY2stbG9hZGluZyAmIHtcbiAgICAgICAgdmlzaWJpbGl0eTogaGlkZGVuO1xuICAgIH1cbn1cbi5zbGljay1zbGlkZSB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDFweDtcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBmbG9hdDogcmlnaHQ7XG4gICAgfVxuICAgIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgICAmLnNsaWNrLWxvYWRpbmcgaW1nIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICBkaXNwbGF5OiBub25lO1xuXG4gICAgJi5kcmFnZ2luZyBpbWcge1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICB9XG5cbiAgICAuc2xpY2staW5pdGlhbGl6ZWQgJiB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cblxuICAgIC5zbGljay1sb2FkaW5nICYge1xuICAgICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgfVxuXG4gICAgLnNsaWNrLXZlcnRpY2FsICYge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICB9XG59XG4uc2xpY2stYXJyb3cuc2xpY2staGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xufVxuXG4vLyBEZWZhdWx0IFZhcmlhYmxlc1xuXG4vLyBTbGljayBpY29uIGVudGl0eSBjb2RlcyBvdXRwdXRzIHRoZSBmb2xsb3dpbmdcbi8vIFwiXFwyMTkwXCIgb3V0cHV0cyBhc2NpaSBjaGFyYWN0ZXIgXCLihpBcIlxuLy8gXCJcXDIxOTJcIiBvdXRwdXRzIGFzY2lpIGNoYXJhY3RlciBcIuKGklwiXG4vLyBcIlxcMjAyMlwiIG91dHB1dHMgYXNjaWkgY2hhcmFjdGVyIFwi4oCiXCJcblxuJHNsaWNrLWZvbnQtcGF0aDogXCIuL2ZvbnRzL1wiICFkZWZhdWx0O1xuJHNsaWNrLWZvbnQtZmFtaWx5OiBcInNsaWNrXCIgIWRlZmF1bHQ7XG4kc2xpY2stbG9hZGVyLXBhdGg6IFwiLi9cIiAhZGVmYXVsdDtcbiRzbGljay1hcnJvdy1jb2xvcjogd2hpdGUgIWRlZmF1bHQ7XG4kc2xpY2stZG90LWNvbG9yOiBibGFjayAhZGVmYXVsdDtcbiRzbGljay1kb3QtY29sb3ItYWN0aXZlOiAkc2xpY2stZG90LWNvbG9yICFkZWZhdWx0O1xuJHNsaWNrLXByZXYtY2hhcmFjdGVyOiBcIlxcMjE5MFwiICFkZWZhdWx0O1xuJHNsaWNrLW5leHQtY2hhcmFjdGVyOiBcIlxcMjE5MlwiICFkZWZhdWx0O1xuJHNsaWNrLWRvdC1jaGFyYWN0ZXI6IFwiXFwyMDIyXCIgIWRlZmF1bHQ7XG4kc2xpY2stZG90LXNpemU6IDZweCAhZGVmYXVsdDtcbiRzbGljay1vcGFjaXR5LWRlZmF1bHQ6IDAuNzUgIWRlZmF1bHQ7XG4kc2xpY2stb3BhY2l0eS1vbi1ob3ZlcjogMSAhZGVmYXVsdDtcbiRzbGljay1vcGFjaXR5LW5vdC1hY3RpdmU6IDAuMjUgIWRlZmF1bHQ7XG5cbkBmdW5jdGlvbiBzbGljay1pbWFnZS11cmwoJHVybCkge1xuICAgIEBpZiBmdW5jdGlvbi1leGlzdHMoaW1hZ2UtdXJsKSB7XG4gICAgICAgIEByZXR1cm4gaW1hZ2UtdXJsKCR1cmwpO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICAgIEByZXR1cm4gdXJsKCRzbGljay1sb2FkZXItcGF0aCArICR1cmwpO1xuICAgIH1cbn1cblxuQGZ1bmN0aW9uIHNsaWNrLWZvbnQtdXJsKCR1cmwpIHtcbiAgICBAaWYgZnVuY3Rpb24tZXhpc3RzKGZvbnQtdXJsKSB7XG4gICAgICAgIEByZXR1cm4gZm9udC11cmwoJHVybCk7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgICAgQHJldHVybiB1cmwoJHNsaWNrLWZvbnQtcGF0aCArICR1cmwpO1xuICAgIH1cbn1cblxuLyogU2xpZGVyICovXG5cbi5zbGljay1saXN0IHtcbiAgICAuc2xpY2stbG9hZGluZyAmIHtcbiAgICAgICAgLy9iYWNrZ3JvdW5kOiAjZmZmIHNsaWNrLWltYWdlLXVybChcImFqYXgtbG9hZGVyLmdpZlwiKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlIHVybCguLi8uLi9pbWFnZXMvbG9hZGluZy5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIH1cbn1cblxuLyogSWNvbnMgKi9cbi8qQGlmICRzbGljay1mb250LWZhbWlseSA9PSBcInNsaWNrXCIge1xuICAgIEBmb250LWZhY2Uge1xuICAgICAgICBmb250LWZhbWlseTogXCJzbGlja1wiO1xuICAgICAgICBzcmM6IHNsaWNrLWZvbnQtdXJsKFwic2xpY2suZW90XCIpO1xuICAgICAgICBzcmM6IHNsaWNrLWZvbnQtdXJsKFwic2xpY2suZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgc2xpY2stZm9udC11cmwoXCJzbGljay53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHNsaWNrLWZvbnQtdXJsKFwic2xpY2sudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCBzbGljay1mb250LXVybChcInNsaWNrLnN2ZyNzbGlja1wiKSBmb3JtYXQoXCJzdmdcIik7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICB9XG59Ki9cblxuLyogQXJyb3dzICovXG5cbi5zbGljay1wcmV2LFxuLnNsaWNrLW5leHQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDBweDtcbiAgICBmb250LXNpemU6IDBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHRvcDogNTAlO1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTUwJSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgJjpob3ZlciwgJjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIC8vb3BhY2l0eTogJHNsaWNrLW9wYWNpdHktb24taG92ZXI7XG4gICAgICAgICAgICBjb2xvcjogJGJsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJi5zbGljay1kaXNhYmxlZDpiZWZvcmUge1xuICAgICAgICBvcGFjaXR5OiAkc2xpY2stb3BhY2l0eS1ub3QtYWN0aXZlO1xuICAgIH1cbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIC8qZm9udC1mYW1pbHk6ICRzbGljay1mb250LWZhbWlseTtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgY29sb3I6ICRzbGljay1hcnJvdy1jb2xvcjtcbiAgICAgICAgb3BhY2l0eTogJHNsaWNrLW9wYWNpdHktZGVmYXVsdDtcbiAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7Ki9cbiAgICAgICAgXG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICB0b3A6NTAlO1xuICAgICAgICBtYXJnaW46LTlweDtcbiAgICAgICAgd2lkdGg6MjBweDtcbiAgICAgICAgaGVpZ2h0OjE4cHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OjE4cHg7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICBjb2xvcjokb3JhbmdlO1xuICAgICAgICBmb250LWZhbWlseTonZGFzaGljb25zJztcbiAgICAgICAgY29udGVudDonXFxmNTIyJztcbiAgICAgICAgZm9udC1zaXplOjI2cHg7XG4gICAgICAgIHRleHQtaW5kZW50OjA7XG4gICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgfVxuICAgIFxuICAgIC50ZXN0X3NsaWRlciAmIHtcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICB3aWR0aDogMzFweDtcbiAgICAgICAgJjpob3ZlciwgJjpmb2N1cyB7XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgLy9jb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgIHRvcDowO1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICB3aWR0aDozMXB4O1xuICAgICAgICAgICAgaGVpZ2h0OjQwcHg7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDo0MHB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICBjb2xvcjokcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAvKmZvbnQtZmFtaWx5OiRzc2FucztcbiAgICAgICAgICAgIGNvbnRlbnQ6Jz4nO1xuICAgICAgICAgICAgZm9udC1zaXplOjI2cHg7XG4gICAgICAgICAgICB0ZXh0LWluZGVudDowOyovXG4gICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoLi4vLi4vaW1hZ2VzL3NsaWRlci1hcnJvdy1hbHQuc3ZnKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5zbGljay1wcmV2IHtcbiAgICBsZWZ0OiAtNDBweDtcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBsZWZ0OiBhdXRvO1xuICAgICAgICByaWdodDogLTQwcHg7XG4gICAgfVxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgLypjb250ZW50OiAkc2xpY2stcHJldi1jaGFyYWN0ZXI7XG4gICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgICBjb250ZW50OiAkc2xpY2stbmV4dC1jaGFyYWN0ZXI7XG4gICAgICAgIH0qL1xuICAgICAgICB0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyk7XG4gICAgfVxuICAgIFxuICAgIC50ZXN0X3NsaWRlciAmIHtcbiAgICAgICAgLy9sZWZ0Oi04MHB4O1xuICAgIH1cbn1cblxuLnNsaWNrLW5leHQge1xuICAgIHJpZ2h0OiAtNDBweDtcbiAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICBsZWZ0OiAtNDBweDtcbiAgICAgICAgcmlnaHQ6IGF1dG87XG4gICAgfVxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgLypjb250ZW50OiAkc2xpY2stbmV4dC1jaGFyYWN0ZXI7XG4gICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgICBjb250ZW50OiAkc2xpY2stcHJldi1jaGFyYWN0ZXI7XG4gICAgICAgIH0qL1xuICAgIH1cbiAgICBcbiAgICAudGVzdF9zbGlkZXIgJiB7XG4gICAgICAgIC8vcmlnaHQ6LTgwcHg7XG4gICAgfVxufVxuXG4vKiBEb3RzICovXG5cbi5zbGljay1kb3R0ZWQuc2xpY2stc2xpZGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4uc2xpY2stZG90cyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogLTI1cHg7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbGkge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgbWFyZ2luOiAwIDVweDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICBidXR0b24ge1xuICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAwcHg7XG4gICAgICAgICAgICBmb250LXNpemU6IDBweDtcbiAgICAgICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICY6aG92ZXIsICY6Zm9jdXMge1xuICAgICAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAkc2xpY2stb3BhY2l0eS1vbi1ob3ZlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICRzbGljay1kb3QtY2hhcmFjdGVyO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDogMjBweDtcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJHNsaWNrLWZvbnQtZmFtaWx5O1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogJHNsaWNrLWRvdC1zaXplO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHNsaWNrLWRvdC1jb2xvcjtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAkc2xpY2stb3BhY2l0eS1ub3QtYWN0aXZlO1xuICAgICAgICAgICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAgICAgICAgICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJi5zbGljay1hY3RpdmUgYnV0dG9uOmJlZm9yZSB7XG4gICAgICAgICAgICBjb2xvcjogJHNsaWNrLWRvdC1jb2xvci1hY3RpdmU7XG4gICAgICAgICAgICBvcGFjaXR5OiAkc2xpY2stb3BhY2l0eS1kZWZhdWx0O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuc2xpY2stcHJldiB7XG4gICAgICAgIGxlZnQ6IC0yMHB4O1xuICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgICAgbGVmdDogYXV0bztcbiAgICAgICAgICAgIHJpZ2h0OiAtMjBweDtcbiAgICAgICAgfVxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAudGVzdF9zbGlkZXIgJiB7XG4gICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuc2xpY2stbmV4dCB7XG4gICAgICAgIHJpZ2h0OiAtMjBweDtcbiAgICAgICAgW2Rpcj1cInJ0bFwiXSAmIHtcbiAgICAgICAgICAgIGxlZnQ6IC0yMHB4O1xuICAgICAgICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICAgIH1cbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLnRlc3Rfc2xpZGVyICYge1xuICAgICAgICAgICAgcmlnaHQ6MDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU1VDQ0VTUyBTVE9SWSBCTE9DS1MgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLnNzX2FhZyB7XG4gICAgXG4gICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgLmdyaWQge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6ZmxleC1zdGFydDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuZGF0YSB7XG4gICAgICAgIHBhZGRpbmc6MCAwIDAgNDBweDtcbiAgICAgICAgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkICRncmF5O1xuICAgICAgICBcbiAgICAgICAgLnJlc3VsdHMge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAubGFiZWwge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgIG1hcmdpbjo1MHB4IDAgMCAwO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjAgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmxnX3RleHQge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToyLjIyZW07XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS4yZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuZGVzYyB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAxLjc1ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuZm91ciB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmxnX3RleHQge1xuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjRlbTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjEuNjdlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmRlc2Mge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDEuMjVlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5ub3RlcyB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5sYWJlbCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHVsIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOjUwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNjBweDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS4zZW07XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOmNhbGMoMTAwJSArIDMwcHgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6MzVweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDoycHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmljb25fYnVja2V0cyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7XG4gICAgICAgIFxuICAgICAgICAuYnVja2V0IHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgICAgIHdpZHRoOjMzLjMzJTtcbiAgICAgICAgICAgIHBhZGRpbmc6MCA4MHB4IDAgMDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjkycHg7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDMwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuc3NfYWFnIHtcbiAgICAgICAgXG4gICAgICAgIGgyIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJi5saW5lZF9sZWZ0IHtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5kYXRhIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaDQge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYubGluZWRfbGVmdCB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHBhZGRpbmc6NDBweCAwIDAgMDtcbiAgICAgICAgICAgIGJvcmRlcjpub25lO1xuICAgICAgICAgICAgYm9yZGVyLXRvcDoxcHggc29saWQgJGdyYXk7XG4gICAgICAgIFxuICAgICAgICAgICAgLnJlc3VsdHMge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLm5vdGVzIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5pY29uX2J1Y2tldHMge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweDtcbiAgICAgICAgXG4gICAgICAgICAgICAuYnVja2V0IHtcbiAgICAgICAgICAgICAgICB3aWR0aDo4MCU7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gMzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5zc19hYWcge1xuICAgIFxuICAgICAgICAuZGF0YSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5yZXN1bHRzIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5sZ190ZXh0IHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjJlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmljb25fYnVja2V0cyB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAzMHB4IDAgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4uc3NfYml6X3RlY2hfcmVzdWx0cyB7XG4gICAgXG4gICAgXG4gICAgLmxpc3RfY29sIHtcbiAgICAgICAgXG4gICAgICAgIGgyLmxpbmVkIHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgM2VtO1xuICAgICAgICB9XG4gICAgICAgIGgyLmxpbmVkX2xlZnQge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAyLjVlbTtcbiAgICAgICAgfVxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNTBweCAwIDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLnJlc3VsdHMge1xuICAgICAgICBtYXJnaW4tbGVmdDowICFpbXBvcnRhbnQ7XG4gICAgICAgIFxuICAgICAgICAmLnNwbGl0IHtcbiAgICAgICAgICAgIGNvbHVtbi1jb3VudDoyO1xuICAgICAgICAgICAgY29sdW1uLWdhcDo2MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICBicmVhay1pbnNpZGU6YXZvaWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgNjBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNjBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgICAgICB0b3A6MDtcbiAgICAgICAgICAgICAgICB3aWR0aDozNnB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDozNnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKC4uLy4uL2ltYWdlcy9saXN0LXR5cGUtY2hlY2ttYXJrLnN2Zykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLnNzX2Jpel90ZWNoX3Jlc3VsdHMge1xuICAgIFxuICAgICAgICAubGlzdF9jb2wge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA2MHB4O1xuICAgICAgICBcbiAgICAgICAgICAgIGgyLmxpbmVkIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGgyLmxpbmVkX2xlZnQge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5yZXN1bHRzIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgJi5zcGxpdCB7XG4gICAgICAgICAgICAgICAgY29sdW1uLWNvdW50OmF1dG87XG4gICAgICAgICAgICAgICAgY29sdW1uLWdhcDpub3JtYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4uc3NfY2hhbGxlbmdlcyB7XG4gICAgXG4gICAgXG4gICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuZ3JpZCB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICB9XG4gICAgXG4gICAgLmljb24ge1xuICAgICAgICBcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaW1nIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOjIwMHB4O1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmNvbnQge1xuICAgICAgICBvcmRlcjotMTtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMTAwcHggMCA2MHB4O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHBhZGRpbmc6ODBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JG9mZndoaXRlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDotNDBweDtcbiAgICAgICAgICAgICAgICB0b3A6Y2FsYyg1MCUgLSAyNHB4KTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMDsgXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwOyBcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMjRweCAwIDI0cHggNDBweDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRvZmZ3aGl0ZTtcbiAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAxLjVlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5zc19jaGFsbGVuZ2VzIHtcbiAgICAgICAgXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA4MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjQwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OmNhbGMoNTAlIC0gMjRweCk7XG4gICAgICAgICAgICAgICAgICAgIHRvcDotNDBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDI0cHggNDBweCAyNHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRvZmZ3aGl0ZSB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuc3NfY2hhbGxlbmdlcyB7XG4gICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAxMDBweCAwIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4uc3NfY29udF9yb3dzIHtcbiAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgXG4gICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBtYXJnaW4tYm90dG9tOjgwcHg7XG4gICAgICAgIFxuICAgICAgICAmLmxhc3Qge1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OnRhYmxlO1xuICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBkaXNwbGF5OnRhYmxlLWNlbGw7XG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICY6bGFzdC1vZi10eXBlIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuZ3JpZCB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICB9XG4gICAgXG4gICAgLmltZyB7XG4gICAgICAgIG9yZGVyOi0xO1xuICAgICAgICBcbiAgICAgICAgJi5wdXNoLXJpZ2h0IHtcbiAgICAgICAgICAgIG9yZGVyOjE7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC52aWRfY29udCB7XG4gICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRibGFjaztcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmltZ19jb250IHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OjMwMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRibGFjaztcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuY29udCB7XG4gICAgICAgIFxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAvL21pbi1oZWlnaHQ6NDAwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMCAwIDgwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuZmxpcCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDgwcHggMCAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuc3NfY29udF9yb3dzIHtcbiAgICAgICAgXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206NDBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmZsaXAge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLnNzX2NvbnRfcm93cyB7XG4gICAgXG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW1nX2NvbnQge1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6MjAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMCAwIDUwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmZsaXAge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjAgNTBweCAwIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5zc19kYl9yZXFzIHtcbiAgICBcbiAgICBcbiAgICAudmVydF9hbGlnbiB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5ncmlkIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtcbiAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgIH1cbiAgICBcbiAgICAuaWNvbiB7XG4gICAgICAgIFxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6MjAwcHg7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuY29udCB7XG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZzowIDYwcHggMCAxMDBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOjgwcHggMTAwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRvZmZ3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDotNDBweDtcbiAgICAgICAgICAgICAgICB0b3A6Y2FsYyg1MCUgLSAyNHB4KTtcbiAgICAgICAgICAgICAgICB3aWR0aDogMDsgXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAwOyBcbiAgICAgICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMjRweCA0MHB4IDI0cHggMDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICRvZmZ3aGl0ZSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMC4yNWVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLnNzX2RiX3JlcXMge1xuICAgIFxuICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDgwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuY29udCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NDBweCA2MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6Y2FsYyg1MCUgLSAyNHB4KTtcbiAgICAgICAgICAgICAgICAgICAgdG9wOi00MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDAgMjRweCA0MHB4IDI0cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJG9mZndoaXRlIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5zc19kYl9yZXFzIHtcbiAgICAgICAgXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgMTAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NDBweCA2MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5zc19pbWdfY29udCB7XG4gICAgXG4gICAgaDMge1xuICAgICAgICBtYXJnaW46MCAwIDFlbTtcbiAgICAgICAgZm9udC1zaXplOjIuMzNlbTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6MHB4O1xuICAgICAgICBjb2xvcjokcHVycGxlX2Rhcms7XG4gICAgICAgIFxuICAgICAgICBhIHtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7XG4gICAgICAgICAgICBjb2xvcjogJGJsdWU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgLmltZyB7XG4gICAgICAgICAgICBcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuZ3JpZCB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICB9XG4gICAgXG4gICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIHBhZGRpbmc6MCA2MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5pbWcge1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgICAgIHotaW5kZXg6MTU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLnNzX2ltZ19jb250IHtcbiAgICAgICAgXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLnNzX2ltZ19jb250IHtcbiAgICBcbiAgICAgICAgaDMge1xuICAgICAgICAgICAgZm9udC1zaXplOjJlbTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDAgMCA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5zc190ZWNoX3Jlc3VsdHMge1xuICAgIFxuICAgIFxuICAgIC5tZXRyaWNfYnVja2V0cyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6dG9wO1xuICAgICAgICBcbiAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICB3aWR0aDoyNSU7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMTBweDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAubGdfdGV4dCB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDAuNWVtO1xuICAgICAgICAgICAgZm9udC1zaXplOjMuMzNlbTtcbiAgICAgICAgICAgIGNvbG9yOiRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE7XG4gICAgICAgICAgICBmb250LXZhcmlhbnQ6IHNtYWxsLWNhcHM7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5zc190ZWNoX3Jlc3VsdHMge1xuICAgICAgICBcbiAgICAgICAgLm1ldHJpY19idWNrZXRzIHtcbiAgICAgICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICBcbiAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgIGZsZXg6MCAwIDUwJTtcbiAgICAgICAgICAgICAgICB3aWR0aDphdXRvO1xuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6c3RyZXRjaDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5zc190ZXN0IHtcbiAgICBwYWRkaW5nOjEwMHB4IDA7XG4gICAgXG4gICAgLnBhZ2UgJiB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOjE2MHB4O1xuICAgIH1cbiAgICBcbiAgICAudGVzdF9iZyB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOjEwMHB4IDQ0cHggMTYwcHg7XG4gICAgICAgIGJvcmRlcjoxcHggZGFzaGVkICRwdXJwbGVfZGFyaztcbiAgICAgICAgYmFja2dyb3VuZDokb2Zmd2hpdGU7XG4gICAgICAgIFxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgdG9wOjA7XG4gICAgICAgICAgICB3aWR0aDoxMDhweDtcbiAgICAgICAgICAgIGhlaWdodDoxMDhweDtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MTVweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6NjBweDtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggZGFzaGVkICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLC01MCUpO1xuICAgICAgICAgICAgZm9udC1zaXplOjYuNjdlbTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE1NHB4O1xuICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICBmb250LXN0eWxlOml0YWxpYztcbiAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICBjb250ZW50OifigJwnO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgcGFkZGluZzowIDU2cHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuc2luZ2xlIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMzNlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjVlbTtcbiAgICAgICAgICAgICAgICBmb250LXN0eWxlOml0YWxpYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNpdGVzX2NvbnQge1xuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgIHRvcDoxMDAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDg4cHgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuY2l0ZSB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNTZweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjMwcHggNzBweDtcbiAgICAgICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRibGFjaztcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgICAgICBmbGV4OjAgMCAxMTJweDtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMTJweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MTEycHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMzBweCAwIDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czo2MHB4O1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgICAgICBib3JkZXI6MnB4IHNvbGlkICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRib2xkO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDokbm9ybWFsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLnNzX3Rlc3Qge1xuICAgICAgICBwYWRkaW5nOjQwcHggMCAxMDBweDtcbiAgICBcbiAgICAgICAgLnBhZ2UgJiB7XG4gICAgICAgICAgICBwYWRkaW5nLWJvdHRvbToxMDBweDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAudGVzdF9iZyB7XG4gICAgICAgICAgICBwYWRkaW5nOjcwcHggMjBweCAxNjBweDtcbiAgICAgICAgXG4gICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAyMHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206NDBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmNpdGVzX2NvbnQge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmNpdGUge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOjI2MHB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MTBweCBhdXRvO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjIwcHggMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaGVhZHNob3Qge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OjAgMCA2MHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDo2MHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6NjBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMjBweCAwIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgICAgIGZsZXg6MCAwIGNhbGMoMTAwJSAtIDg0cHgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5zc190ZXN0IHtcbiAgICBcbiAgICAgICAgLnRlc3RfYmcge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOjEwMHB4IDQ0cHggMTYwcHg7XG4gICAgICAgICAgICBib3JkZXI6MXB4IGRhc2hlZCAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRvZmZ3aGl0ZTtcbiAgICAgICAgXG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICAgICAgdG9wOjA7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTA4cHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjEwOHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MTVweDtcbiAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOjYwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyOjFweCBkYXNoZWQgJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6Ni42N2VtO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE1NHB4O1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6aXRhbGljO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6J+KAnCc7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLnF1b3RlIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMjBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYuc2luZ2xlIHtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MS4zM2VtO1xuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjVlbTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zdHlsZTppdGFsaWM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5jaXRlc19jb250IHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgICAgICB0b3A6MTAwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDg4cHgpO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5jaXRlIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMjBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MjBweCAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRibGFjaztcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaGVhZHNob3Qge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OjAgMCA4MHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDo4MHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ODBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMjBweCAwIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgICAgICBmbGV4OjEgMCBjYWxjKDEwMCUgLSAxMDBweCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5zc195Yl9zb2x1dGlvbiB7XG4gICAgXG4gICAgXG4gICAgaDIubGluZWQge1xuICAgICAgICBtYXJnaW4tYm90dG9tOjJlbTtcbiAgICB9XG4gICAgLmljb25fYnVja2V0cyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6ZmxleC1zdGFydDtcbiAgICAgICAgXG4gICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgZmxleDoxIDAgMjUlO1xuICAgICAgICAgICAgYWxpZ24tc2VsZjpzdHJldGNoO1xuICAgICAgICAgICAgcGFkZGluZzowIDEwcHg7XG4gICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgd2lkdGg6MTEycHg7XG4gICAgICAgICAgICBoZWlnaHQ6MTEycHg7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvIDIwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuc3NfeWJfc29sdXRpb24ge1xuICAgICAgICBcbiAgICAgICAgLmljb25fYnVja2V0cyB7XG4gICAgICAgICAgICBmbGV4LXdyYXA6d3JhcDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgZmxleDowIDAgNTAlO1xuICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgYWxpZ24tc2VsZjpzdHJldGNoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XG4uaGFzLXdoaXRlLWNvbG9yIHtcbiAgY29sb3I6ICNmZmZmZmY7IH1cblxuLmhhcy13aGl0ZS1iYWNrZ3JvdW5kLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsgfVxuXG4uaGFzLW9mZndoaXRlLWNvbG9yIHtcbiAgY29sb3I6ICNlZWYxZmE7IH1cblxuLmhhcy1vZmZ3aGl0ZS1iYWNrZ3JvdW5kLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZjFmYTsgfVxuXG4uaGFzLWdyYXlfbGlnaHRlc3QtY29sb3Ige1xuICBjb2xvcjogI2YyZjNmODsgfVxuXG4uaGFzLWdyYXlfbGlnaHRlc3QtYmFja2dyb3VuZC1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYzZjg7IH1cblxuLmhhcy1ncmF5X2xpZ2h0LWNvbG9yIHtcbiAgY29sb3I6ICNlOGU5ZjM7IH1cblxuLmhhcy1ncmF5X2xpZ2h0LWJhY2tncm91bmQtY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOWYzOyB9XG5cbi5oYXMtZ3JheS1jb2xvciB7XG4gIGNvbG9yOiAjNzA3MDcwOyB9XG5cbi5oYXMtZ3JheS1iYWNrZ3JvdW5kLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzcwNzA3MDsgfVxuXG4uaGFzLWdyYXlfZGFyay1jb2xvciB7XG4gIGNvbG9yOiAjNGQ0NjQ3OyB9XG5cbi5oYXMtZ3JheV9kYXJrLWJhY2tncm91bmQtY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGQ0NjQ3OyB9XG5cbi5oYXMtbmVhcmx5YmxhY2stY29sb3Ige1xuICBjb2xvcjogIzE0MTkyMDsgfVxuXG4uaGFzLW5lYXJseWJsYWNrLWJhY2tncm91bmQtY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTQxOTIwOyB9XG5cbi5oYXMtYmxhY2stY29sb3Ige1xuICBjb2xvcjogIzAwMDAwMDsgfVxuXG4uaGFzLWJsYWNrLWJhY2tncm91bmQtY29sb3Ige1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwOyB9XG5cbi5oYXMtcHVycGxlLWNvbG9yIHtcbiAgY29sb3I6ICMzMzJhNjY7IH1cblxuLmhhcy1wdXJwbGUtYmFja2dyb3VuZC1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMzJhNjY7IH1cblxuLmhhcy1wdXJwbGVfZGFyay1jb2xvciB7XG4gIGNvbG9yOiAjMDAwMDQxOyB9XG5cbi5oYXMtcHVycGxlX2RhcmstYmFja2dyb3VuZC1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwNDE7IH1cblxuLmhhcy1vcmFuZ2UtY29sb3Ige1xuICBjb2xvcjogI2ZmNmU0MjsgfVxuXG4uaGFzLW9yYW5nZS1iYWNrZ3JvdW5kLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNmU0MjsgfVxuXG4uaGFzLWdyZWVuLWNvbG9yIHtcbiAgY29sb3I6ICM0ZWNkNWY7IH1cblxuLmhhcy1ncmVlbi1iYWNrZ3JvdW5kLWNvbG9yIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRlY2Q1ZjsgfVxuXG4uaGFzLWJsdWUtY29sb3Ige1xuICBjb2xvcjogIzJiNTljMzsgfVxuXG4uaGFzLWJsdWUtYmFja2dyb3VuZC1jb2xvciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYjU5YzM7IH1cblxuLypAbWl4aW4gcGxhY2Vob2xkZXIge1xuICAgIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7QGNvbnRlbnR9XG4gICAgOi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAgIHtAY29udGVudH1cbiAgICA6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAge0Bjb250ZW50fVxuICAgIDotbXMtaW5wdXQtcGxhY2Vob2xkZXIgICAgICB7QGNvbnRlbnR9XG59Ki9cbi8qIFNPVVJDRSBTQU5TIEBGT05ULUZBQ0UgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiSHVybWUgR2VvbWV0cmljIFNhbnNfMSBXMDEgTHRcIjtcbiAgc3JjOiB1cmwoXCIuLi8uLi9mb250cy81NTEyODczLzNkMDhkOWI3LWMyMzItNDhmZS1hN2Q2LTJlMjM3Yzg2MDA0YS53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiLi4vLi4vZm9udHMvNTUxMjg3My84N2RhNzA5NS1kMTAwLTQwMmYtYWUzMy01Nzk2NDY0NDYwOTMud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpOyB9XG5cbi8qLmNsZWFyZml4e1xuXHR6b29tOiAxO1xuXG5cdCY6YWZ0ZXJ7XG5cdFx0Y29udGVudDogJyc7XG5cdFx0aGVpZ2h0OiAwO1xuXHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdHZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufSovXG4vKlxuICBTaW1wbGUgR3JpZFxuICBQcm9qZWN0IFBhZ2UgLSBodHRwOi8vdGhpc2lzZGFsbGFzLmdpdGh1Yi5jb20vU2ltcGxlLUdyaWQvXG4gIEF1dGhvciAtIERhbGxhcyBCYXNzXG4gIFNpdGUgLSBodHRwOi8vZGFsbGFzYmFzcy5jb21cbiovXG5bY2xhc3MqPSdncmlkJ10sXG5bY2xhc3MqPSdjb2wtJ10sXG5bY2xhc3MqPSdtb2JpbGUtJ10sXG4uZ3JpZDphZnRlciB7XG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbltjbGFzcyo9J2NvbC0nXSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7XG4gIC8qIGNvbHVtbi1zcGFjZSAqLyB9XG5cbltjbGFzcyo9J2NvbC0nXSBbY2xhc3MqPSdjb2wtJ106bGFzdC1jaGlsZCB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7IH1cblxuLmdyaWQge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMzYwcHg7XG4gIG1pbi13aWR0aDogNzA4cHg7XG4gIC8qIHdoZW4gdXNpbmcgcGFkZGVkIGdyaWQgb24gaXBhZCBpbiBwb3J0cmFpdCBtb2RlLCB3aWR0aCBzaG91bGQgYmUgdmlld3BvcnQtd2lkdGggLSBwYWRkaW5nID0gKDc2OCAtIDIwKSA9IDc0OC4gYWN0dWFsbHksIGl0IHNob3VsZCBiZSBldmVuIHNtYWxsZXIgdG8gYWxsb3cgZm9yIHBhZGRpbmcgb2YgZ3JpZCBjb250YWluaW5nIGVsZW1lbnQgKi9cbiAgbWFyZ2luOiAwIGF1dG87XG4gIC8qb3ZlcmZsb3c6IGhpZGRlbjsqLyB9XG4gIC5ncmlkLmV4dHJhX3dpZGUge1xuICAgIG1heC13aWR0aDogMTM2MHB4OyB9XG4gIC5ncmlkLmZ1bGwge1xuICAgIG1heC13aWR0aDogbm9uZTsgfVxuXG4uZ3JpZDphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IHRhYmxlO1xuICBjbGVhcjogYm90aDsgfVxuXG4uZ3JpZC1wYWQge1xuICBwYWRkaW5nLXRvcDogMDtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAvKiBncmlkLXNwYWNlIHRvIGxlZnQgKi9cbiAgcGFkZGluZy1yaWdodDogMDtcbiAgLyogZ3JpZC1zcGFjZSB0byByaWdodDogKGdyaWQtc3BhY2UtbGVmdCAtIGNvbHVtbi1zcGFjZSkgZS5nLiAyMHB4LTIwcHg9MCAqLyB9XG5cbi5wdXNoLXJpZ2h0IHtcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7IH1cblxuLyogQ29udGVudCBDb2x1bW5zICovXG4uY29sLTEtMSB7XG4gIHdpZHRoOiAxMDAlOyB9XG5cbi5jb2wtMi0zLCAuY29sLTgtMTIge1xuICB3aWR0aDogNjYuNjYlOyB9XG5cbi5jb2wtMS0yLCAuY29sLTYtMTIge1xuICB3aWR0aDogNTAlOyB9XG5cbi5jb2wtMS0zLCAuY29sLTQtMTIge1xuICB3aWR0aDogMzMuMzMlOyB9XG5cbi5jb2wtMS00LCAuY29sLTMtMTIge1xuICB3aWR0aDogMjUlOyB9XG5cbi5jb2wtMS01IHtcbiAgd2lkdGg6IDIwJTsgfVxuXG4uY29sLTEtNiwgLmNvbC0yLTEyIHtcbiAgd2lkdGg6IDE2LjY2NyU7IH1cblxuLmNvbC0xLTcge1xuICB3aWR0aDogMTQuMjglOyB9XG5cbi5jb2wtMS04IHtcbiAgd2lkdGg6IDEyLjUlOyB9XG5cbi5jb2wtMS05IHtcbiAgd2lkdGg6IDExLjElOyB9XG5cbi5jb2wtMS0xMCB7XG4gIHdpZHRoOiAxMCU7IH1cblxuLmNvbC0xLTExIHtcbiAgd2lkdGg6IDkuMDklOyB9XG5cbi5jb2wtMS0xMiB7XG4gIHdpZHRoOiA4LjMzJTsgfVxuXG4vKiBMYXlvdXQgQ29sdW1ucyAqL1xuLmNvbC0xMS0xMiB7XG4gIHdpZHRoOiA5MS42NiU7IH1cblxuLmNvbC0xMC0xMiB7XG4gIHdpZHRoOiA4My4zMzMlOyB9XG5cbi5jb2wtOS0xMiB7XG4gIHdpZHRoOiA3NSU7IH1cblxuLmNvbC01LTEyIHtcbiAgd2lkdGg6IDQxLjY2JTsgfVxuXG4uY29sLTctMTIge1xuICB3aWR0aDogNTguMzMlOyB9XG5cbi8qIFB1c2hpbmcgYmxvY2tzICovXG4ucHVzaC0yLTMsIC5wdXNoLTgtMTIge1xuICBtYXJnaW4tbGVmdDogNjYuNjYlOyB9XG5cbi5wdXNoLTEtMiwgLnB1c2gtNi0xMiB7XG4gIG1hcmdpbi1sZWZ0OiA1MCU7IH1cblxuLnB1c2gtNS0xMiB7XG4gIG1hcmdpbi1sZWZ0OiA0MS42NiU7IH1cblxuLnB1c2gtMS0zLCAucHVzaC00LTEyIHtcbiAgbWFyZ2luLWxlZnQ6IDMzLjMzJTsgfVxuXG4ucHVzaC0xLTQsIC5wdXNoLTMtMTIge1xuICBtYXJnaW4tbGVmdDogMjUlOyB9XG5cbi5wdXNoLTEtNSB7XG4gIG1hcmdpbi1sZWZ0OiAyMCU7IH1cblxuLnB1c2gtMS02LCAucHVzaC0yLTEyIHtcbiAgbWFyZ2luLWxlZnQ6IDE2LjY2NyU7IH1cblxuLnB1c2gtMS03IHtcbiAgbWFyZ2luLWxlZnQ6IDE0LjI4JTsgfVxuXG4ucHVzaC0xLTgge1xuICBtYXJnaW4tbGVmdDogMTIuNSU7IH1cblxuLnB1c2gtMS05IHtcbiAgbWFyZ2luLWxlZnQ6IDExLjElOyB9XG5cbi5wdXNoLTEtMTAge1xuICBtYXJnaW4tbGVmdDogMTAlOyB9XG5cbi5wdXNoLTEtMTEge1xuICBtYXJnaW4tbGVmdDogOS4wOSU7IH1cblxuLnB1c2gtMS0xMiB7XG4gIG1hcmdpbi1sZWZ0OiA4LjMzJTsgfVxuXG4vKiBQdWxsaW5nIGJsb2NrcyAqL1xuLnB1bGwtMi0zLCAucHVsbC04LTEyIHtcbiAgbWFyZ2luLWxlZnQ6IC02Ni42NiU7IH1cblxuLnB1bGwtMS0yLCAucHVsbC02LTEyIHtcbiAgbWFyZ2luLWxlZnQ6IC01MCU7IH1cblxuLnB1bGwtNS0xMiB7XG4gIG1hcmdpbi1sZWZ0OiAtNDEuNjYlOyB9XG5cbi5wdWxsLTEtMywgLnB1bGwtNC0xMiB7XG4gIG1hcmdpbi1sZWZ0OiAtMzMuMzMlOyB9XG5cbi5wdWxsLTEtNCwgLnB1bGwtMy0xMiB7XG4gIG1hcmdpbi1sZWZ0OiAtMjUlOyB9XG5cbi5wdWxsLTEtNSB7XG4gIG1hcmdpbi1sZWZ0OiAtMjAlOyB9XG5cbi5wdWxsLTEtNiwgLnB1bGwtMi0xMiB7XG4gIG1hcmdpbi1sZWZ0OiAtMTYuNjY3JTsgfVxuXG4ucHVsbC0xLTcge1xuICBtYXJnaW4tbGVmdDogLTE0LjI4JTsgfVxuXG4ucHVsbC0xLTgge1xuICBtYXJnaW4tbGVmdDogLTEyLjUlOyB9XG5cbi5wdWxsLTEtOSB7XG4gIG1hcmdpbi1sZWZ0OiAtMTEuMSU7IH1cblxuLnB1bGwtMS0xMCB7XG4gIG1hcmdpbi1sZWZ0OiAtMTAlOyB9XG5cbi5wdWxsLTEtMTEge1xuICBtYXJnaW4tbGVmdDogLTkuMDklOyB9XG5cbi5wdWxsLTEtMTIge1xuICBtYXJnaW4tbGVmdDogLTguMzMlOyB9XG5cbkBtZWRpYSBoYW5kaGVsZCwgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5ncmlkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIC8qcGFkZGluZy1sZWZ0OiAyMHB4OyovXG4gICAgLyogZ3JpZC1zcGFjZSB0byBsZWZ0ICovXG4gICAgLypwYWRkaW5nLXJpZ2h0OiAxMHB4OyovXG4gICAgLyogZ3JpZC1zcGFjZSB0byByaWdodDogKGdyaWQtc3BhY2UtbGVmdCAtIGNvbHVtbi1zcGFjZSkgZS5nLiAyMHB4LTEwcHg9MTBweCAqL1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICAgLnNpdGUtZm9vdGVyIC5ncmlkIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7IH1cbiAgICAgIC5zaXRlLWZvb3RlciAuZ3JpZCAuZ3JpZCB7XG4gICAgICAgIHBhZGRpbmc6IDAgMjBweDsgfVxuICAgIC5ncmlkLmV4dHJhX3dpZGUge1xuICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgcGFkZGluZzogMCA0MHB4OyB9XG4gICAgICAuc2l0ZS1oZWFkZXIgLmdyaWQuZXh0cmFfd2lkZSB7XG4gICAgICAgIHBhZGRpbmc6IDAgMTBweDsgfVxuICAgICAgLnNpdGUtZm9vdGVyIC5ncmlkLmV4dHJhX3dpZGUge1xuICAgICAgICBwYWRkaW5nOiAwOyB9XG4gICAgLmdyaWQuZnVsbCB7XG4gICAgICBtYXgtd2lkdGg6IG5vbmU7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gIFtjbGFzcyo9J2NvbC0nXSB7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAvKnBhZGRpbmctcmlnaHQ6IDEwcHg7Ki9cbiAgICAvKiBjb2x1bW4tc3BhY2UgKi9cbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gIFtjbGFzcyo9J2NvbC0nXSBbY2xhc3MqPSdjb2wtJ10ge1xuICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgLyogTW9iaWxlIExheW91dCAqL1xuICBbY2xhc3MqPSdtb2JpbGUtY29sLSddIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gICAgLyogY29sdW1uLXNwYWNlICovXG4gICAgcGFkZGluZy1ib3R0b206IDA7IH1cbiAgLm1vYmlsZS1jb2wtMS0xIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAubW9iaWxlLWNvbC0yLTMsIC5tb2JpbGUtY29sLTgtMTIge1xuICAgIHdpZHRoOiA2Ni42NiU7IH1cbiAgLm1vYmlsZS1jb2wtMS0yLCAubW9iaWxlLWNvbC02LTEyIHtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC5tb2JpbGUtY29sLTEtMywgLm1vYmlsZS1jb2wtNC0xMiB7XG4gICAgd2lkdGg6IDMzLjMzJTsgfVxuICAubW9iaWxlLWNvbC0xLTQsIC5tb2JpbGUtY29sLTMtMTIge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgLm1vYmlsZS1jb2wtMS01IHtcbiAgICB3aWR0aDogMjAlOyB9XG4gIC5tb2JpbGUtY29sLTEtNiwgLm1vYmlsZS1jb2wtMi0xMiB7XG4gICAgd2lkdGg6IDE2LjY2NyU7IH1cbiAgLm1vYmlsZS1jb2wtMS03IHtcbiAgICB3aWR0aDogMTQuMjglOyB9XG4gIC5tb2JpbGUtY29sLTEtOCB7XG4gICAgd2lkdGg6IDEyLjUlOyB9XG4gIC5tb2JpbGUtY29sLTEtOSB7XG4gICAgd2lkdGg6IDExLjElOyB9XG4gIC5tb2JpbGUtY29sLTEtMTAge1xuICAgIHdpZHRoOiAxMCU7IH1cbiAgLm1vYmlsZS1jb2wtMS0xMSB7XG4gICAgd2lkdGg6IDkuMDklOyB9XG4gIC5tb2JpbGUtY29sLTEtMTIge1xuICAgIHdpZHRoOiA4LjMzJTsgfVxuICAvKiBMYXlvdXQgQ29sdW1ucyAqL1xuICAubW9iaWxlLWNvbC0xMS0xMiB7XG4gICAgd2lkdGg6IDkxLjY2JTsgfVxuICAubW9iaWxlLWNvbC0xMC0xMiB7XG4gICAgd2lkdGg6IDgzLjMzMyU7IH1cbiAgLm1vYmlsZS1jb2wtOS0xMiB7XG4gICAgd2lkdGg6IDc1JTsgfVxuICAubW9iaWxlLWNvbC01LTEyIHtcbiAgICB3aWR0aDogNDEuNjYlOyB9XG4gIC5tb2JpbGUtY29sLTctMTIge1xuICAgIHdpZHRoOiA1OC4zMyU7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5ncmlkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAvKiBncmlkLXNwYWNlIHRvIGxlZnQgKi9cbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgIC8qIGdyaWQtc3BhY2UgdG8gcmlnaHQ6IChncmlkLXNwYWNlLWxlZnQgLSBjb2x1bW4tc3BhY2UpIGUuZy4gMjBweC0xMHB4PTEwcHggKi8gfVxuICAgIC5ncmlkLmV2ZW5fcGFkIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cbiAgICAuZ3JpZC5mdWxsIHtcbiAgICAgIG1heC13aWR0aDogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDA7IH1cbiAgICAuc2l0ZS1oZWFkZXIgLmdyaWQge1xuICAgICAgcGFkZGluZzogMDsgfVxuICAgIC5zaXRlLWZvb3RlciAuZ3JpZCB7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gIC50YWJsZXQtcHVzaC1sZWZ0IHtcbiAgICBmbG9hdDogbGVmdCAhaW1wb3J0YW50OyB9XG4gIFtjbGFzcyo9J3RhYmxldC1jb2wtJ10ge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgICAvKiBjb2x1bW4tc3BhY2UgKi9cbiAgICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuICAgIC5ldmVuX3BhZCBbY2xhc3MqPSd0YWJsZXQtY29sLSddIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAjZm9vdGVyX2N0YSBbY2xhc3MqPSd0YWJsZXQtY29sLSddIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAuaGVybyBbY2xhc3MqPSd0YWJsZXQtY29sLSddIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLnRhYmxldC1jb2wtMS0xIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAudGFibGV0LWNvbC0yLTMsIC50YWJsZXQtY29sLTgtMTIge1xuICAgIHdpZHRoOiA2Ni42NiU7IH1cbiAgLnRhYmxldC1jb2wtMS0yLCAudGFibGV0LWNvbC02LTEyIHtcbiAgICB3aWR0aDogNTAlOyB9XG4gIC50YWJsZXQtY29sLTEtMywgLnRhYmxldC1jb2wtNC0xMiB7XG4gICAgd2lkdGg6IDMzLjMzJTsgfVxuICAudGFibGV0LWNvbC0xLTQsIC50YWJsZXQtY29sLTMtMTIge1xuICAgIHdpZHRoOiAyNSU7IH1cbiAgLnRhYmxldC1jb2wtMS01IHtcbiAgICB3aWR0aDogMjAlOyB9XG4gIC50YWJsZXQtY29sLTEtNiwgLnRhYmxldC1jb2wtMi0xMiB7XG4gICAgd2lkdGg6IDE2LjY2NyU7IH1cbiAgLnRhYmxldC1jb2wtMS03IHtcbiAgICB3aWR0aDogMTQuMjglOyB9XG4gIC50YWJsZXQtY29sLTEtOCB7XG4gICAgd2lkdGg6IDEyLjUlOyB9XG4gIC50YWJsZXQtY29sLTEtOSB7XG4gICAgd2lkdGg6IDExLjElOyB9XG4gIC50YWJsZXQtY29sLTEtMTAge1xuICAgIHdpZHRoOiAxMCU7IH1cbiAgLnRhYmxldC1jb2wtMS0xMSB7XG4gICAgd2lkdGg6IDkuMDklOyB9XG4gIC50YWJsZXQtY29sLTEtMTIge1xuICAgIHdpZHRoOiA4LjMzJTsgfVxuICAvKiBMYXlvdXQgQ29sdW1ucyAqL1xuICAudGFibGV0LWNvbC0xMS0xMiB7XG4gICAgd2lkdGg6IDkxLjY2JTsgfVxuICAudGFibGV0LWNvbC0xMC0xMiB7XG4gICAgd2lkdGg6IDgzLjMzMyU7IH1cbiAgLnRhYmxldC1jb2wtOS0xMiB7XG4gICAgd2lkdGg6IDc1JTsgfVxuICAudGFibGV0LWNvbC01LTEyIHtcbiAgICB3aWR0aDogNDEuNjYlOyB9XG4gIC50YWJsZXQtY29sLTctMTIge1xuICAgIHdpZHRoOiA1OC4zMyU7IH1cbiAgLyogUHVzaGluZyBibG9ja3MgKi9cbiAgLnRhYmxldC1wdXNoLTItMywgLnRhYmxldC1wdXNoLTgtMTIge1xuICAgIG1hcmdpbi1sZWZ0OiA2Ni42NiU7IH1cbiAgLnRhYmxldC1wdXNoLTEtMiwgLnRhYmxldC1wdXNoLTYtMTIge1xuICAgIG1hcmdpbi1sZWZ0OiA1MCU7IH1cbiAgLnRhYmxldC1wdXNoLTUtMTIge1xuICAgIG1hcmdpbi1sZWZ0OiA0MS42NiU7IH1cbiAgLnRhYmxldC1wdXNoLTEtMywgLnRhYmxldC1wdXNoLTQtMTIge1xuICAgIG1hcmdpbi1sZWZ0OiAzMy4zMyU7IH1cbiAgLnRhYmxldC1wdXNoLTEtNCwgLnRhYmxldC1wdXNoLTMtMTIge1xuICAgIG1hcmdpbi1sZWZ0OiAyNSU7IH1cbiAgLnRhYmxldC1wdXNoLTEtNSB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwJTsgfVxuICAudGFibGV0LXB1c2gtMS02LCAudGFibGV0LXB1c2gtMi0xMiB7XG4gICAgbWFyZ2luLWxlZnQ6IDE2LjY2NyU7IH1cbiAgLnRhYmxldC1wdXNoLTEtNyB7XG4gICAgbWFyZ2luLWxlZnQ6IDE0LjI4JTsgfVxuICAudGFibGV0LXB1c2gtMS04IHtcbiAgICBtYXJnaW4tbGVmdDogMTIuNSU7IH1cbiAgLnRhYmxldC1wdXNoLTEtOSB7XG4gICAgbWFyZ2luLWxlZnQ6IDExLjElOyB9XG4gIC50YWJsZXQtcHVzaC0xLTEwIHtcbiAgICBtYXJnaW4tbGVmdDogMTAlOyB9XG4gIC50YWJsZXQtcHVzaC0xLTExIHtcbiAgICBtYXJnaW4tbGVmdDogOS4wOSU7IH1cbiAgLnRhYmxldC1wdXNoLTEtMTIge1xuICAgIG1hcmdpbi1sZWZ0OiA4LjMzJTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogMTM2MHB4KSB7XG4gIC5ncmlkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4td2lkdGg6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAvKiBncmlkLXNwYWNlIHRvIGxlZnQgKi9cbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xuICAgIC8qIGdyaWQtc3BhY2UgdG8gcmlnaHQ6IChncmlkLXNwYWNlLWxlZnQgLSBjb2x1bW4tc3BhY2UpIGUuZy4gMjBweC0xMHB4PTEwcHggKi8gfVxuICAgIC5ncmlkLmZ1bGwge1xuICAgICAgbWF4LXdpZHRoOiBub25lO1xuICAgICAgcGFkZGluZzogMDsgfVxuICAgIC5ncmlkLmV2ZW5fcGFkIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cbiAgICAuc2l0ZS1oZWFkZXIgLmdyaWQge1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgcGFkZGluZy1yaWdodDogMDtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgLnNpdGUtZm9vdGVyIC5ncmlkIHtcbiAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBSRVNFVCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBjaXRlLFxucC5jaXRlLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udDogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5ib2R5IHtcbiAgbGluZS1oZWlnaHQ6IDE7IH1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTsgfVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lOyB9XG5cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNUUlVDVFVSQUwgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbmh0bWwge1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuYm9keSB7XG4gIGhlaWdodDogYXV0byAhaW1wb3J0YW50O1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICBmb250LWZhbWlseTogXCJTb3VyY2UgU2FucyBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS40NWVtO1xuICBjb2xvcjogIzAwMDAwMDtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG5cbiNwYWdlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4jbWFpbiB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiA4MXB4O1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICB0cmFuc2l0aW9uOiBtYXJnaW4gMC4zczsgfVxuXG4jcHJpbWFyeSB7XG4gIGZsb2F0OiBsZWZ0O1xuICB3aWR0aDogNTAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwIDMwcHggMCAwOyB9XG4gICNwcmltYXJ5LmZ1bGwge1xuICAgIGZsb2F0OiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5hcmNoaXZlICNwcmltYXJ5LFxuICAuc2luZ2xlLXBvc3QgI3ByaW1hcnksXG4gIC5zZWFyY2ggI3ByaW1hcnkge1xuICAgIHdpZHRoOiA3MiU7XG4gICAgcGFkZGluZzogMDsgfVxuXG4jc2Vjb25kYXJ5IHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICB3aWR0aDogNTAlO1xuICBwYWRkaW5nOiAwIDcwcHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgLmFyY2hpdmUgI3NlY29uZGFyeSxcbiAgLnNpbmdsZS1wb3N0ICNzZWNvbmRhcnksXG4gIC5zZWFyY2ggI3NlY29uZGFyeSB7XG4gICAgd2lkdGg6IDI4JTtcbiAgICBwYWRkaW5nOiAwIDUwcHg7IH1cblxuI2NvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICAvKm1pbi1oZWlnaHQ6MTgwMHB4OyovXG4gIC8qKioqKioqKioqKioqKioqKiogVEVNUCBGT1IgREVWICoqKioqL1xuICBtYXJnaW46IDAgYXV0bztcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgei1pbmRleDogMTA7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgI2NvbnRlbnQgPiBhcnRpY2xlID4gLmdmb3JtX3dyYXBwZXIge1xuICAgIHBhZGRpbmctdG9wOiAwO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxNjBweCk7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gODBweDsgfVxuICAuc2luZ2xlLXBvc3QgI2NvbnRlbnQgPiBhcnRpY2xlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDYwcHg7IH1cblxuLmNvbnRlbnRfc2VjdGlvbiB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIC8qb3ZlcmZsb3c6aGlkZGVuOyovXG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbi5jb250ZW50X3dyYXBwZXIge1xuICAgIHotaW5kZXg6IDEwOyB9XG4gIC5jb250ZW50X3NlY3Rpb24ubGlnaHQtYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2VlZjFmYTsgfVxuICAuY29udGVudF9zZWN0aW9uLmdyYXlfbGlnaHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU5ZjM7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbi5saWdodC1ncmF5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmM2Y4OyB9XG4gIC5jb250ZW50X3NlY3Rpb24uYmx1ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJiNTljMzsgfVxuICAuY29udGVudF9zZWN0aW9uLm9yYW5nZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNmU0MjsgfVxuICAuY29udGVudF9zZWN0aW9uLnB1cnBsZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMmE2NjsgfVxuICAuY29udGVudF9zZWN0aW9uLmdyYXktbGlnaHQge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGU5ZjM7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbi5ncmF5LWxpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZThlOWYzOyB9XG4gIC5jb250ZW50X3NlY3Rpb24ucHVycGxlLWRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDAwNDE7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbi53aGl0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsgfVxuICAuY29udGVudF9zZWN0aW9uLmdyYWQtZGtwdXJwbGUtYmx1ZSB7XG4gICAgYmFja2dyb3VuZDogIzAwMDA0MTtcbiAgICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCg0NWRlZywgIzAwMDA0MSAwJSwgIzJiNTljMyAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCg0NWRlZywgIzAwMDA0MSAwJSwgIzJiNTljMyAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMwMDAwNDEgMCUsICMyYjU5YzMgMTAwJSk7XG4gICAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoIHN0YXJ0Q29sb3JzdHI9JyMwMDAwNDEnLCBlbmRDb2xvcnN0cj0nIzJiNTljMycsR3JhZGllbnRUeXBlPTEgKTsgfVxuICAuY29udGVudF9zZWN0aW9uLmdyYWQtZGtwdXJwbGUtYmx1ZS1mbGF0IHtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMDAwMDQxIDAlLCAjMmI1OWMzIDEwMCUpO1xuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMDAwMDQxIDAlLCAjMmI1OWMzIDEwMCUpO1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgIzAwMDA0MSAwJSwgIzJiNTljMyAxMDAlKTtcbiAgICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0nIzAwMDA0MScsIGVuZENvbG9yc3RyPScjMmI1OWMzJyxHcmFkaWVudFR5cGU9MSApOyB9XG4gIC5jb250ZW50X3NlY3Rpb24uaW52ZXJ0ID4gKiB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cblxuLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA4MHB4KTtcbiAgbWF4LXdpZHRoOiAxMzYwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiA2MHB4IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb25faW5uZXIuZnVsbCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiBub25lOyB9XG4gIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93IHtcbiAgICB3aWR0aDogNzUlO1xuICAgIG1heC13aWR0aDogY2FsYygxMzYwcHggKiAwLjc1KTsgfVxuICAuY29udGVudF9zZWN0aW9uX2lubmVyLm5hcnJvd2VyIHtcbiAgICB3aWR0aDogNjUlO1xuICAgIG1heC13aWR0aDogY2FsYygxMzYwcHggKiAwLjY1KTsgfVxuXG4ud3lzaXd5ZyB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLnd5c2l3eWcubmFycm93IHtcbiAgICB3aWR0aDogODAlO1xuICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gIC53eXNpd3lnLm5hcnJvd2VyIHtcbiAgICB3aWR0aDogNjUlO1xuICAgIG1hcmdpbjogMCBhdXRvOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICNjb250ZW50ID4gYXJ0aWNsZSA+IC5nZm9ybV93cmFwcGVyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XG4gICAgbWFyZ2luOiAwIGF1dG8gNDBweDsgfVxuICAuc2luZ2xlLXBvc3QgI2NvbnRlbnQgPiBhcnRpY2xlIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7IH1cbiAgI21haW4ge1xuICAgIG1hcmdpbjogMDsgfVxuICAjcHJpbWFyeSB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDQwcHggMDsgfVxuICAgIC5hcmNoaXZlICNwcmltYXJ5LFxuICAgIC5zaW5nbGUtcG9zdCAjcHJpbWFyeSxcbiAgICAuc2VhcmNoICNwcmltYXJ5IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogMDsgfVxuICAjc2Vjb25kYXJ5IHtcbiAgICBmbG9hdDogbm9uZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgICAuYXJjaGl2ZSAjc2Vjb25kYXJ5LFxuICAgIC5zaW5nbGUtcG9zdCAjc2Vjb25kYXJ5LFxuICAgIC5zZWFyY2ggI3NlY29uZGFyeSB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDA7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgcGFkZGluZy10b3A6IDYwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lcixcbiAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lci5uYXJyb3csXG4gIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93ZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lcixcbiAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lci5uYXJyb3csXG4gIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93ZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNpbmdsZS1wb3N0ICNjb250ZW50ID4gYXJ0aWNsZSB7XG4gICAgcGFkZGluZy1sZWZ0OiAwOyB9XG4gICNzZWNvbmRhcnkge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMCA0MHB4OyB9XG4gICAgLmFyY2hpdmUgI3NlY29uZGFyeSxcbiAgICAuc2luZ2xlLXBvc3QgI3NlY29uZGFyeSxcbiAgICAuc2VhcmNoICNzZWNvbmRhcnkge1xuICAgICAgd2lkdGg6IDI4JTtcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDMwcHg7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEzNjBweCkge1xuICAud3lzaXd5ZyB7XG4gICAgLypiciB7XG4gICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgIH0qLyB9XG4gICAgLnd5c2l3eWcubmFycm93IHtcbiAgICAgIHdpZHRoOiA4NSU7IH1cbiAgICAud3lzaXd5Zy5uYXJyb3dlciB7XG4gICAgICB3aWR0aDogODUlOyB9XG4gIC5jb250ZW50X3NlY3Rpb25faW5uZXIubmFycm93LFxuICAuY29udGVudF9zZWN0aW9uX2lubmVyLm5hcnJvd2VyIHtcbiAgICB3aWR0aDogODUlOyB9IH1cblxuLyogU1BFQ0lGSUMgRk9SIEJSSU5HSU5HIElOIE1PQklMRSBOQVYgQU5EIEhBTUJVUkdFUiAqL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIGJvZHkubW9iaWxlX25hdl9vcGVuIHtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICNzaXRlLWlubmVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBIRUFERVIgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jbW9iaWxlX25hdl90b2dnbGUge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDVweDtcbiAgd2lkdGg6IDcwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3V0bGluZTogbm9uZTtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgei1pbmRleDogMTAwMTA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG4gICNtb2JpbGVfbmF2X3RvZ2dsZS5vcGVuIHtcbiAgICB0b3A6IDVweDsgfVxuICAjbW9iaWxlX25hdl90b2dnbGUgLmlubmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAxNnB4O1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjFweDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB0cmFuc2l0aW9uOiAuNXMgZWFzZS1pbi1vdXQ7IH1cblxuI21vYmlsZV9uYXZfdG9nZ2xlIHNwYW4ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBoZWlnaHQ6IDJweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gIG9wYWNpdHk6IDE7XG4gIGxlZnQ6IDA7XG4gIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB0cmFuc2l0aW9uOiAuMjVzIGVhc2UtaW4tb3V0OyB9XG5cbiNtb2JpbGVfbmF2X3RvZ2dsZS5vcGVuIHNwYW4ge1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG5cbiNtb2JpbGVfbmF2X3RvZ2dsZSBzcGFuOm50aC1jaGlsZCgxKSB7XG4gIHRvcDogMHB4OyB9XG5cbiNtb2JpbGVfbmF2X3RvZ2dsZSBzcGFuOm50aC1jaGlsZCgyKSxcbiNtb2JpbGVfbmF2X3RvZ2dsZSBzcGFuOm50aC1jaGlsZCgzKSB7XG4gIHRvcDogOXB4OyB9XG5cbiNtb2JpbGVfbmF2X3RvZ2dsZSBzcGFuOm50aC1jaGlsZCg0KSB7XG4gIHRvcDogMThweDsgfVxuXG4jbW9iaWxlX25hdl90b2dnbGUub3BlbiBzcGFuOm50aC1jaGlsZCgxKSB7XG4gIHRvcDogOXB4O1xuICB3aWR0aDogMCU7XG4gIGxlZnQ6IDUwJTsgfVxuXG4jbW9iaWxlX25hdl90b2dnbGUub3BlbiBzcGFuOm50aC1jaGlsZCgyKSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTsgfVxuXG4jbW9iaWxlX25hdl90b2dnbGUub3BlbiBzcGFuOm50aC1jaGlsZCgzKSB7XG4gIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cblxuI21vYmlsZV9uYXZfdG9nZ2xlLm9wZW4gc3BhbjpudGgtY2hpbGQoNCkge1xuICB0b3A6IDlweDtcbiAgd2lkdGg6IDAlO1xuICBsZWZ0OiA1MCU7IH1cblxuI21vYmlsZV9uYXZfdHJheSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA2MHB4O1xuICBib3R0b206IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA2MHB4KTtcbiAgcGFkZGluZzogMjBweCAyMHB4IDE0MHB4O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBvdmVyZmxvdzogc2Nyb2xsO1xuICB6LWluZGV4OiAxMDAwMDtcbiAgYmFja2dyb3VuZDogIzAwMDA0MTsgfVxuXG4uc2l0ZS1oZWFkZXIge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGxlZnQ6IDA7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmZmZmO1xuICBoZWlnaHQ6IDgwcHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhcjtcbiAgei1pbmRleDogMTAwMDsgfVxuICAuc2l0ZS1oZWFkZXIgLmdyaWQtcGFkIHtcbiAgICBwYWRkaW5nLXRvcDogMDsgfVxuICAuc2l0ZS1oZWFkZXIuc2Nyb2xsaW5nIHtcbiAgICAvKnBvc2l0aW9uOmZpeGVkO1xuICAgICAgICB0b3A6LTEwMCU7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTsqL1xuICAgIGhlaWdodDogODBweDsgfVxuXG4uaGVhZGVyX2lubmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogY2FsYygxMDAlIC0gODBweCk7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuLnNpdGUtdGl0bGUge1xuICBmbG9hdDogbGVmdDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxNjBweDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbjogMjZweCAwIDAgMDtcbiAgei1pbmRleDogMTAwMDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyOyB9XG4gIC5zY3JvbGxpbmcgLnNpdGUtdGl0bGUge1xuICAgIG1hcmdpbjogMjZweCAwIDAgMDsgfVxuICAuc2l0ZS10aXRsZSA+IGEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLnNpdGUtdGl0bGUgPiBhIGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLnNpdGUtdGl0bGUgPiBhOmhvdmVyIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uaGVhZGVyX3JpZ2h0IHtcbiAgbWFyZ2luOiAwO1xuICB6LWluZGV4OiAxMDAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBsaW5lYXI7IH1cbiAgLnNjcm9sbGluZyAuaGVhZGVyX3JpZ2h0IHtcbiAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgLmhvbWUgLnNjcm9sbGluZyAuaGVhZGVyX3JpZ2h0IHtcbiAgICAgIG1hcmdpbi10b3A6IDA7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTBweCkge1xuICAjbW9iaWxlX25hdl90b2dnbGUge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDk5MHB4KSB7XG4gICNtb2JpbGVfbmF2X3RvZ2dsZSB7XG4gICAgdG9wOiAxNXB4OyB9XG4gICNtb2JpbGVfbmF2X3RyYXkge1xuICAgIHRvcDogODBweDtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA4MHB4KTtcbiAgICBwYWRkaW5nOiAyMHB4IDQwcHggMTQwcHg7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5zaXRlLWhlYWRlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGhlaWdodDogNjBweDsgfVxuICAuaGVhZGVyX2lubmVyIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7IH1cbiAgLnNpdGUtdGl0bGUge1xuICAgIG1hcmdpbi10b3A6IDE3cHg7IH1cbiAgICAuc2Nyb2xsaW5nIC5zaXRlLXRpdGxlIHtcbiAgICAgIG1hcmdpbi10b3A6IDE3cHg7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBGT09URVIgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uc2l0ZS1mb290ZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cbiAgLnNpdGUtZm9vdGVyIC5sb2dvIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNjBweCk7XG4gICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWFyZ2luOiAwIDAgNDBweDtcbiAgICB6LWluZGV4OiAxMDAwO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuICAgIC5zaXRlLWZvb3RlciAubG9nbyBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAuc2l0ZS1mb290ZXIgLmZvb3Rlcl9pbm5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA4MHB4KTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcGFkZGluZzogNjBweCAwO1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAuc2l0ZS1mb290ZXIgLmZvb3Rlcl9pbm5lciAuZ3JpZCB7XG4gICAgICBtaW4td2lkdGg6IDA7IH1cbiAgLnNpdGUtZm9vdGVyICNtZW51LWZvb3Rlci1uYXYge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3c7IH1cbiAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiA+IGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDMwcHg7IH1cbiAgICAgIC5zaXRlLWZvb3RlciAjbWVudS1mb290ZXItbmF2ID4gbGkgYSB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDA7XG4gICAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNDVlbTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgICAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiA+IGxpIGE6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gICAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiA+IGxpID4gYSB7XG4gICAgICAgIHBhZGRpbmc6IDAgMCAzMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMS4xZW07XG4gICAgICAgIGZvbnQtc2l6ZTogMS4yMmVtO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMnB4OyB9XG4gICAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiA+IGxpLm5vbGluayA+IGEge1xuICAgICAgICBjb2xvcjogIzAwMDAwMDtcbiAgICAgICAgY3Vyc29yOiBkZWZhdWx0OyB9XG4gICAgICAgIC5zaXRlLWZvb3RlciAjbWVudS1mb290ZXItbmF2ID4gbGkubm9saW5rID4gYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICAgICAgY3Vyc29yOiBkZWZhdWx0OyB9XG4gICAgLnNpdGUtZm9vdGVyICNtZW51LWZvb3Rlci1uYXYgbGkgbGk6aG92ZXIgPiBhLFxuICAgIC5zaXRlLWZvb3RlciAjbWVudS1mb290ZXItbmF2IGxpIGxpOmZvY3VzID4gYSxcbiAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiBsaSBsaS5jdXJyZW50LW1lbnUtaXRlbSA+IGEsXG4gICAgLnNpdGUtZm9vdGVyICNtZW51LWZvb3Rlci1uYXYgbGkgbGkuY3VycmVudC1tZW51LWFuY2VzdG9yID4gYSxcbiAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiBsaSBsaS5jdXJyZW50LXBvc3QtYW5jZXN0b3IgPiBhLFxuICAgIC5zaXRlLWZvb3RlciAjbWVudS1mb290ZXItbmF2IGxpIGxpLmN1cnJlbnQtcGFnZS1hbmNlc3RvciA+IGEge1xuICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgLnNpdGUtZm9vdGVyIHAsIC5zaXRlLWZvb3RlciBibG9ja3F1b3RlLCAuc2l0ZS1mb290ZXIgY2l0ZSB7XG4gICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgICAuc2l0ZS1mb290ZXIgcC5jb3B5cmlnaHQsIC5zaXRlLWZvb3RlciBibG9ja3F1b3RlLmNvcHlyaWdodCwgLnNpdGUtZm9vdGVyIGNpdGUuY29weXJpZ2h0IHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuNDVlbTtcbiAgICAgIGNvbG9yOiAjMzMyYTY2OyB9XG4gICAgICAuc2l0ZS1mb290ZXIgcC5jb3B5cmlnaHQgYSwgLnNpdGUtZm9vdGVyIGJsb2NrcXVvdGUuY29weXJpZ2h0IGEsIC5zaXRlLWZvb3RlciBjaXRlLmNvcHlyaWdodCBhIHtcbiAgICAgICAgY29sb3I6ICMzMzJhNjY7IH1cbiAgICAgICAgLnNpdGUtZm9vdGVyIHAuY29weXJpZ2h0IGE6aG92ZXIsIC5zaXRlLWZvb3RlciBibG9ja3F1b3RlLmNvcHlyaWdodCBhOmhvdmVyLCAuc2l0ZS1mb290ZXIgY2l0ZS5jb3B5cmlnaHQgYTpob3ZlciB7XG4gICAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAuc2l0ZS1mb290ZXIgcCBhLCAuc2l0ZS1mb290ZXIgYmxvY2txdW90ZSBhLCAuc2l0ZS1mb290ZXIgY2l0ZSBhIHtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAuc2l0ZS1mb290ZXIgcCBhOmhvdmVyLCAuc2l0ZS1mb290ZXIgYmxvY2txdW90ZSBhOmhvdmVyLCAuc2l0ZS1mb290ZXIgY2l0ZSBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgLnNpdGUtZm9vdGVyIC5zb2NpYWxfY29udCB7XG4gICAgbWFyZ2luOiAwIDAgNDBweDsgfVxuICAuc2l0ZS1mb290ZXIgLnNvY2lhbCB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMzhweDtcbiAgICBoZWlnaHQ6IDM4cHg7XG4gICAgbWFyZ2luOiAwIDAgMCAxMHB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICMwMDAwNDE7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICBjb2xvcjogIzAwMDAwMDsgfVxuICAgIC5zaXRlLWZvb3RlciAuc29jaWFsLmZpcnN0IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLnNpdGUtZm9vdGVyIC5zb2NpYWwuZ2gge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgICAgLnNpdGUtZm9vdGVyIC5zb2NpYWwuZ2ggc3ZnIHtcbiAgICAgICAgdG9wOiAxN3B4OyB9XG4gICAgICAgIC5zaXRlLWZvb3RlciAuc29jaWFsLmdoIHN2ZyAuaWNvbiB7XG4gICAgICAgICAgZmlsbDogI2ZmZmZmZjsgfVxuICAgICAgLnNpdGUtZm9vdGVyIC5zb2NpYWwuZ2g6aG92ZXIgc3ZnIC5pY29uIHtcbiAgICAgICAgZmlsbDogI2ZmZmZmZjsgfVxuICAgICAgLnNpdGUtZm9vdGVyIC5zb2NpYWwuZ2g6aG92ZXIgc3ZnIC5iZyB7XG4gICAgICAgIGZpbGw6ICNmZjZlNDI7IH1cbiAgICAuc2l0ZS1mb290ZXIgLnNvY2lhbCBzdmcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIG1hcmdpbjogLTIwcHggMCAwIDA7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICAgICAgLnNpdGUtZm9vdGVyIC5zb2NpYWwgc3ZnIC5pY29uIHtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgICAgIGZpbGw6ICMwMDAwNDE7IH1cbiAgICAgIC5zaXRlLWZvb3RlciAuc29jaWFsIHN2ZyAuYmcge1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgIC5zaXRlLWZvb3RlciAuc29jaWFsOmhvdmVyIHtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgLnNpdGUtZm9vdGVyIC5zb2NpYWw6aG92ZXIgc3ZnIC5pY29uIHtcbiAgICAgICAgZmlsbDogI2ZmNmU0MjsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5zaXRlLWZvb3RlciAubG9nbyB7XG4gICAgbWFyZ2luOiAwIGF1dG8gNDBweDsgfVxuICAuc2l0ZS1mb290ZXIgLmZvb3Rlcl9pbm5lciB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpOyB9XG4gIC5zaXRlLWZvb3RlciAjbWVudS1mb290ZXItbmF2IHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5zaXRlLWZvb3RlciAjbWVudS1mb290ZXItbmF2ID4gbGkge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLnNpdGUtZm9vdGVyICNtZW51LWZvb3Rlci1uYXYgLnN1Yi1tZW51IHtcbiAgICAgIG1hcmdpbjogMCAwIDQwcHg7IH1cbiAgICAuc2l0ZS1mb290ZXIgI21lbnUtZm9vdGVyLW5hdiBsaSBsaSBhIHtcbiAgICAgIHBhZGRpbmc6IDNweCAwOyB9XG4gIC5zaXRlLWZvb3RlciBwLmNvcHlyaWdodCwgLnNpdGUtZm9vdGVyIGJsb2NrcXVvdGUuY29weXJpZ2h0LCAuc2l0ZS1mb290ZXIgY2l0ZS5jb3B5cmlnaHQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuc2l0ZS1mb290ZXIgLnNvY2lhbF9jb250IHtcbiAgICBtYXJnaW46IDAgYXV0byA0MHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5zaXRlLWZvb3RlciAuc29jaWFsX2NvbnQge1xuICAgIG1hcmdpbjogMCAyMHB4IDQwcHggMDsgfVxuICAuc2l0ZS1mb290ZXIgLnNvY2lhbCB7XG4gICAgd2lkdGg6IDI4cHg7XG4gICAgaGVpZ2h0OiAyOHB4O1xuICAgIG1hcmdpbjogMCAwIDEwcHggMTBweDsgfVxuICAgIC5zaXRlLWZvb3RlciAuc29jaWFsLmdoIHN2ZyB7XG4gICAgICB0b3A6IDEzcHg7IH1cbiAgICAuc2l0ZS1mb290ZXIgLnNvY2lhbCBzdmcge1xuICAgICAgbWFyZ2luOiAtMTJweCAwIDAgMDtcbiAgICAgIGhlaWdodDogMjRweDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIEdMT0JBTCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qIEdSSUQgQUNDRVNTT1JJRVMgKi9cbi5ncmlkID4gZGl2LmZsdXNoX3JpZ2h0ID4gLmNvbnQge1xuICB3aWR0aDogY2FsYygxMDAlICsgMjBweCk7XG4gIG1hcmdpbi1yaWdodDogLTIwcHg7IH1cblxuLmdyaWQgPiBkaXYuZmx1c2hfbGVmdCA+IC5jb250IHtcbiAgd2lkdGg6IGNhbGMoMTAwJSArIDIwcHgpO1xuICBtYXJnaW4tbGVmdDogLTIwcHg7IH1cblxuLmdyaWQgPiBkaXYuZmx1c2hfbGVmdF9yaWdodCB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgLmdyaWQgPiBkaXYuZmx1c2hfbGVmdF9yaWdodCA+IC5jb250IHtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgMjBweCArIDIwcHgpO1xuICAgIG1hcmdpbi1sZWZ0OiAtMjBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IC0yMHB4OyB9XG5cbi8qQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTM2MHB4KSB7XG4gICAgLmdyaWQgPiBkaXYuZmx1c2hfcmlnaHQgPiAuY29udCB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoKCgxMDB2dyAtIDEzNjBweCkgLyAyKSArIDIwcHgpKTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBjYWxjKC0xICogKCgoMTAwdncgLSAxMzYwcHgpIC8gMikgKyAyMHB4KSk7XG4gICAgfVxuICAgIC5ncmlkID4gZGl2LmZsdXNoX2xlZnQgPiAuY29udCB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoKCgxMDB2dyAtIDEzNjBweCkgLyAyKSArIDIwcHgpKTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEgKiAoKCgxMDB2dyAtIDEzNjBweCkgLyAyKSArIDIwcHgpKTtcbiAgICB9XG59Ki9cbi8qKiBUT0M6ICoqL1xuLyoqIFVOSVFVRSBHVVRFTkJFUkcgQkxPQ0tTICoqL1xuLyoqIEhPTUVQQUdFICoqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogVU5JUVVFIEdVVEVOQkVSRyBCTE9DS1MgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmltZ19jb250LndpZGVfY29udGVudCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLmltZ19jb250LndpZGVfY29udGVudCAuY29udCBoMiB7XG4gIHBhZGRpbmctcmlnaHQ6IDYwcHg7IH1cblxuLmltZ19jb250IC52ZXJ0X2FsaWduIC5ncmlkIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uaW1nX2NvbnQgLnZlcnRfYWxpZ24gLmlubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5pbWdfY29udCAuY29udCB7XG4gIG9yZGVyOiAtMTsgfVxuICAuaW1nX2NvbnQgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDAgNjBweDsgfVxuXG4uaW1nX2NvbnQgLmltZyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTsgfVxuICAuaW1nX2NvbnQgLmltZyAuaW5uZXJfY29udGVudCB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHBhZGRpbmctcmlnaHQ6IDYwcHg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB6LWluZGV4OiAxNTsgfVxuICAuaW1nX2NvbnQgLmltZyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5pbWdfY29udCAuaW1nIC56b29tX2NvbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIC5pbWdfY29udCAuaW1nIC56b29tX2NvbnQgLmhvdmVyX3Byb21wdCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDY1LCAwLjYpO1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKC4uLy4uL2ltYWdlcy9tYWctZ2xhc3MtZmF0LXdoaXRlLnN2Zyk7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTIwcHggYXV0bztcbiAgICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4zcztcbiAgICAgIG9wYWNpdHk6IDA7IH1cbiAgICAgIC5pbWdfY29udCAuaW1nIC56b29tX2NvbnQgLmhvdmVyX3Byb21wdC5raWxsIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5pbWdfY29udCAuaW1nIC56b29tX2NvbnQgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IGF1dG87IH1cbiAgICAuaW1nX2NvbnQgLmltZyAuem9vbV9jb250Lnpvb21hYmxlOmhvdmVyIC5ob3Zlcl9wcm9tcHQge1xuICAgICAgb3BhY2l0eTogMTsgfVxuXG4uaW1nX2NvbnQuZmxpcCAuY29udCB7XG4gIG9yZGVyOiAxOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5pbWdfY29udCAudmVydF9hbGlnbiAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmltZ19jb250LndpZGVfY29udGVudCAuY29udCBoMiB7XG4gICAgcGFkZGluZy1yaWdodDogMDsgfVxuICAuaW1nX2NvbnQgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLmltZ19jb250IC5pbWcge1xuICAgIG1hcmdpbjogMCAwIDQwcHg7IH1cbiAgICAuaW1nX2NvbnQgLmltZyAuaW5uZXJfY29udGVudCB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICAgLmltZ19jb250IC5pbWcgaW1nIHtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgbWF4LXdpZHRoOiAxMDAlOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaW1nX2NvbnQud2lkZV9jb250ZW50IC5jb250IGgyIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gIC5pbWdfY29udCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogMDsgfVxuICAuaW1nX2NvbnQgLmltZyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuICAgIC5pbWdfY29udCAuaW1nIC5pbm5lcl9jb250ZW50IHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAuaW1nX2NvbnQgLmltZyBpbWcge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBtYXgtd2lkdGg6IDEwMCU7IH0gfVxuXG4uY3RhX2J1Y2tldHMgLmN0YSB7XG4gIHBhZGRpbmc6IDAgNDBweDsgfVxuXG4uY3RhX2J1Y2tldHMgLmJ0biB7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmN0YV9idWNrZXRzIC5jdGEge1xuICAgIG1hcmdpbjogMCAwIDYwcHg7XG4gICAgcGFkZGluZzogMDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmN0YV9idWNrZXRzIC5jdGEge1xuICAgIG1hcmdpbi1ib3R0b206IDYwcHg7IH0gfVxuXG4udGVhbV9ncmlkIC50ZWFtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiA4MHB4IDAgMCAwO1xuICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwOyB9XG4gIC50ZWFtX2dyaWQgLnRlYW0gLmdyaWRibG9jayB7XG4gICAgd2lkdGg6IGNhbGMoMzMuMzMlIC0gMTRweCk7XG4gICAgbWFyZ2luOiAwIDAgNjBweCAyMHB4OyB9XG4gICAgLnRlYW1fZ3JpZCAudGVhbSAuZ3JpZGJsb2NrOmZpcnN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsgfVxuICAgIC50ZWFtX2dyaWQgLnRlYW0gLmdyaWRibG9jazpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC50ZWFtX2dyaWQgLnRlYW0gLmlubmVyIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMCAxMCU7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLnRlYW1fZ3JpZCAudGVhbSAuaW5uZXIgLmhlYWRzaG90IHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGhlaWdodDogMTgwcHg7XG4gICAgICB3aWR0aDogMTgwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBib3JkZXI6IDNweCBzb2xpZCAjZmY2ZTQyO1xuICAgICAgbWFyZ2luOiAwIGF1dG8gNDBweDsgfVxuICAgICAgLnRlYW1fZ3JpZCAudGVhbSAuaW5uZXIgLmhlYWRzaG90IGltZyB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgICAudGVhbV9ncmlkIC50ZWFtIC5pbm5lciBwLCAudGVhbV9ncmlkIC50ZWFtIC5pbm5lciBibG9ja3F1b3RlLCAudGVhbV9ncmlkIC50ZWFtIC5pbm5lciBjaXRlIHtcbiAgICAgIG1hcmdpbjogMCAwIDAuNzVlbTtcbiAgICAgIGNvbG9yOiAjMTQxOTIwO1xuICAgICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7IH1cbiAgLnRlYW1fZ3JpZCAudGVhbSAuc29jaWFsIGEge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDMycHg7XG4gICAgaGVpZ2h0OiAzM3B4O1xuICAgIG1hcmdpbjogMCAwIDAgMTBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgICAudGVhbV9ncmlkIC50ZWFtIC5zb2NpYWwgYTpvbmx5LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAudGVhbV9ncmlkIC50ZWFtIC5zb2NpYWwgYS5maXJzdCB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgIC50ZWFtX2dyaWQgLnRlYW0gLnNvY2lhbCBhIHN2ZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgd2lkdGg6IDMycHg7XG4gICAgICBoZWlnaHQ6IDMzcHg7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG4gICAgICAudGVhbV9ncmlkIC50ZWFtIC5zb2NpYWwgYSBzdmcgLmJnIHtcbiAgICAgICAgb3BhY2l0eTogMDsgfVxuICAgICAgLnRlYW1fZ3JpZCAudGVhbSAuc29jaWFsIGEgc3ZnIC5pY29uIHtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgICAgIGZpbGw6ICMwMDAwNDE7IH1cbiAgICAudGVhbV9ncmlkIC50ZWFtIC5zb2NpYWwgYTpob3ZlciBzdmcgLmljb24ge1xuICAgICAgZmlsbDogI2ZmNmU0MjsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAudGVhbV9ncmlkIC50ZWFtIC5ncmlkYmxvY2sge1xuICAgIHdpZHRoOiA5MCU7XG4gICAgbWF4LXdpZHRoOiA0ODBweDtcbiAgICBtYXJnaW46IDAgYXV0byA2MHB4OyB9XG4gICAgLnRlYW1fZ3JpZCAudGVhbSAuZ3JpZGJsb2NrOmZpcnN0LW9mLXR5cGUsIC50ZWFtX2dyaWQgLnRlYW0gLmdyaWRibG9jazpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLnRlYW1fZ3JpZCAudGVhbSAuaW5uZXIgLmhlYWRzaG90IHtcbiAgICBtYXJnaW46IDAgYXV0byAzMHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAudGVhbV9ncmlkIC50ZWFtIC5ncmlkYmxvY2sge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDIwcHgpOyB9XG4gICAgLnRlYW1fZ3JpZCAudGVhbSAuZ3JpZGJsb2NrOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDIwcHg7IH1cbiAgICAudGVhbV9ncmlkIC50ZWFtIC5ncmlkYmxvY2s6bnRoLW9mLXR5cGUoMm4gKyAxKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfSB9XG5cbi5sb2dvX2dyaWQgLmxvZ29zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgbWFyZ2luOiA4MHB4IDAgNjBweDtcbiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDtcbiAgcGFkZGluZzogMDsgfVxuICAubG9nb19ncmlkIC5sb2dvcyAuZ3JpZGJsb2NrIHtcbiAgICB3aWR0aDogY2FsYygyNSUgLSAyMHB4KTtcbiAgICBoZWlnaHQ6IDk2cHg7XG4gICAgbWFyZ2luOiAwIDAgMCAyMHB4OyB9XG4gICAgLmxvZ29fZ3JpZCAubG9nb3MgLmdyaWRibG9jazpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7IH1cbiAgICAubG9nb19ncmlkIC5sb2dvcyAuZ3JpZGJsb2NrOm50aC1vZi10eXBlKDRuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgLmxvZ29fZ3JpZCAubG9nb3MgLmlubmVyIHtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBtYXJnaW46IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5sb2dvX2dyaWQgLmxvZ29zIC5pbm5lciAubG9nbyB7XG4gICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiA5MCU7XG4gICAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgICAgLmxvZ29fZ3JpZCAubG9nb3MgLmlubmVyIC5sb2dvIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIG1heC1oZWlnaHQ6IDk2cHg7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IH1cbiAgLmxvZ29fZ3JpZCAubG9nb3MudGhyZWUgLmdyaWRibG9jayB7XG4gICAgd2lkdGg6IGNhbGMoMjUlIC0gNjBweCk7XG4gICAgbWFyZ2luOiAwIDAgMCA4MHB4OyB9XG4gICAgLmxvZ29fZ3JpZCAubG9nb3MudGhyZWUgLmdyaWRibG9jazpudGgtb2YtdHlwZSg0biArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA2MHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5sb2dvX2dyaWQgLmxvZ29zIHtcbiAgICBtYXJnaW46IDYwcHggMCAzMHB4OyB9XG4gICAgLmxvZ29fZ3JpZCAubG9nb3MgLmdyaWRibG9jayB7XG4gICAgICB3aWR0aDogY2FsYyg1MCUgLSA0MHB4KTtcbiAgICAgIG1hcmdpbjogMjBweCAwIDIwcHggNDBweDsgfVxuICAgICAgLmxvZ29fZ3JpZCAubG9nb3MgLmdyaWRibG9jazpudGgtb2YtdHlwZSg0biArIDEpLCAubG9nb19ncmlkIC5sb2dvcyAuZ3JpZGJsb2NrOm50aC1vZi10eXBlKDJuICsgMSkge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgIC5sb2dvX2dyaWQgLmxvZ29zLnRocmVlIC5ncmlkYmxvY2sge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDMwMHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG8gMjBweDsgfVxuICAgICAgLmxvZ29fZ3JpZCAubG9nb3MudGhyZWUgLmdyaWRibG9jazpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG8gIWltcG9ydGFudDsgfVxuICAgICAgLmxvZ29fZ3JpZCAubG9nb3MudGhyZWUgLmdyaWRibG9jazpudGgtb2YtdHlwZSg0biArIDEpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5sb2dvX2dyaWQgLmxvZ29zLnRocmVlIC5ncmlkYmxvY2sge1xuICAgIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gNjBweCk7IH0gfVxuXG4uZndfY3RhIC5oZWFkX3dyYXAge1xuICB3aWR0aDogNzAlO1xuICBtYXJnaW46IDAgYXV0byA2MHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5md19jdGEgLmhlYWRfd3JhcCBoMiB7XG4gICAgZmxleDogMCAwIGNhbGMoMTAwJSAtIDQwMHB4KTtcbiAgICBtYXJnaW46IDAgMCA0MHB4O1xuICAgIHBhZGRpbmctbGVmdDogNDBweDtcbiAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICNmZmZmZmY7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC5md19jdGEgLmhlYWRfd3JhcCAubG9nb3NfZ3JvdXAge1xuICAgIGZsZXg6IDAgMCA0MDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuZndfY3RhIC5oZWFkX3dyYXAgLmxvZ29zX2dyb3VwIC5sb2dvIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMCA3MHB4IDQwcHggMDsgfVxuICAgICAgLmZ3X2N0YSAuaGVhZF93cmFwIC5sb2dvc19ncm91cCAubG9nbyBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICBtYXgtaGVpZ2h0OiA1MHB4OyB9XG5cbi5md19jdGEgaDIge1xuICBtYXJnaW46IDAgMCAwLjc1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICNmZmZmZmY7IH1cbiAgLmZ3X2N0YSBoMi5zdGFuZGFyZCB7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBjb2xvcjogI2ZmNmU0MjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGxldHRlci1zcGFjaW5nOiA0cHg7IH1cbiAgLmZ3X2N0YSBoMi5saW5lZCB7XG4gICAgbWFyZ2luOiAwIDAgMS41ZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAgIC5md19jdGEgaDIubGluZWQ6YWZ0ZXIge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuXG4uZndfY3RhIHAsIC5md19jdGEgYmxvY2txdW90ZSwgLmZ3X2N0YSBjaXRlIHtcbiAgbWFyZ2luOiAwIDAgMi4yNWVtO1xuICBjb2xvcjogI2ZmZmZmZjsgfVxuICAuZndfY3RhIHAgc3BhbiwgLmZ3X2N0YSBibG9ja3F1b3RlIHNwYW4sIC5md19jdGEgY2l0ZSBzcGFuIHtcbiAgICBjb2xvcjogI2ZmNmU0MjsgfVxuXG4uZndfY3RhIC5zb2NpYWxfd3JhcCB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cbiAgLmZ3X2N0YSAuc29jaWFsX3dyYXAgYSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogNDRweDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgbWFyZ2luOiAwIDAgMCAyMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAgIC5md19jdGEgLnNvY2lhbF93cmFwIGEuZmlyc3Qge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAuZndfY3RhIC5zb2NpYWxfd3JhcCBhIHN2ZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgd2lkdGg6IDQ0cHg7XG4gICAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOyB9XG4gICAgICAuZndfY3RhIC5zb2NpYWxfd3JhcCBhIHN2ZyAuYmcge1xuICAgICAgICBvcGFjaXR5OiAwOyB9XG4gICAgICAuZndfY3RhIC5zb2NpYWxfd3JhcCBhIHN2ZyAuaWNvbiB7XG4gICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgICAgICBmaWxsOiAjZmZmZmZmOyB9XG4gICAgLmZ3X2N0YSAuc29jaWFsX3dyYXAgYTpob3ZlciBzdmcgLmljb24ge1xuICAgICAgZmlsbDogI2ZmNmU0MjsgfVxuXG4uZndfY3RhIC5jdGFzX3dyYXAgLmJ0biB7XG4gIG1hcmdpbjogMCAwIDEwcHggNDBweDtcbiAgLyomOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiRvcmFuZ2UgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6ICRvcmFuZ2UgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH0qLyB9XG4gIC5md19jdGEgLmN0YXNfd3JhcCAuYnRuOmZpcnN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5md19jdGEgLmhlYWRfd3JhcCB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuZndfY3RhIC5oZWFkX3dyYXAgaDIge1xuICAgICAgZmxleDogMSAwIDYwJTtcbiAgICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2ZmZmZmZjsgfVxuICAgIC5md19jdGEgLmhlYWRfd3JhcCAubG9nb3NfZ3JvdXAge1xuICAgICAgZmxleDogMCAwIDQwJTsgfVxuICAgICAgLmZ3X2N0YSAuaGVhZF93cmFwIC5sb2dvc19ncm91cCAubG9nbyB7XG4gICAgICAgIG1hcmdpbjogMCAzMHB4IDMwcHggMDsgfVxuICAgICAgICAuZndfY3RhIC5oZWFkX3dyYXAgLmxvZ29zX2dyb3VwIC5sb2dvIGltZyB7XG4gICAgICAgICAgbWF4LWhlaWdodDogMzBweDsgfVxuICAuZndfY3RhIHAgYnIsIC5md19jdGEgYmxvY2txdW90ZSBiciwgLmZ3X2N0YSBjaXRlIGJyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5md19jdGEgLmN0YXNfd3JhcCAuYnRuIHtcbiAgICBtYXJnaW46IDAgMTBweCAyMHB4IDEwcHg7IH1cbiAgICAuZndfY3RhIC5jdGFzX3dyYXAgLmJ0bjpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuZndfY3RhIC5oZWFkX3dyYXAge1xuICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmxvZ29zX2NvbnQgLnZlcnRfYWxpZ24gLmdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG5cbi5sb2dvc19jb250IC52ZXJ0X2FsaWduIC5pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4ubG9nb3NfY29udCAubG9nb3MgLmlubmVyX2NvbnRlbnQge1xuICBwYWRkaW5nOiAwIDYwcHg7IH1cblxuLmxvZ29zX2NvbnQgLmNvbnQge1xuICBvcmRlcjogLTE7IH1cbiAgLmxvZ29zX2NvbnQgLmNvbnQgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwIDYwcHg7IH1cbiAgLmxvZ29zX2NvbnQgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiA2MHB4O1xuICAgIGJhY2tncm91bmQ6ICNlZWYxZmE7IH1cbiAgICAubG9nb3NfY29udCAuY29udCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogLTQwcHg7XG4gICAgICB0b3A6IDEwMHB4O1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgYm9yZGVyLXdpZHRoOiAyNHB4IDAgMjRweCA0MHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZWVmMWZhO1xuICAgICAgY29udGVudDogJyc7IH1cbiAgLmxvZ29zX2NvbnQgLmNvbnQuZmxpcCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgbGVmdDogLTQwcHg7XG4gICAgYm9yZGVyLXdpZHRoOiAyNHB4IDQwcHggMjRweCAwO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgI2VlZjFmYSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDsgfVxuXG4ubG9nb3NfY29udCAubG9nb3Nfc3RhZ2dlciBsaSAubG9nbyB7XG4gIGZsb2F0OiBsZWZ0O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDQwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuICAubG9nb3NfY29udCAubG9nb3Nfc3RhZ2dlciBsaSAubG9nbyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5sb2dvc19jb250IC5sb2dvc19zdGFnZ2VyIGxpOm50aC1jaGlsZChldmVuKSAubG9nbyB7XG4gIGZsb2F0OiByaWdodDsgfVxuXG4ubG9nb3NfY29udCAubG9nb3Nfc3RhZ2dlciBsaTpsYXN0LW9mLXR5cGUgLmxvZ28ge1xuICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5sb2dvc19jb250IC52ZXJ0X2FsaWduIC5ncmlkIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5sb2dvc19jb250IC5sb2dvcyB7XG4gICAgbWFyZ2luOiAwIDAgODBweDsgfVxuICAgIC5sb2dvc19jb250IC5sb2dvcyAuaW5uZXJfY29udGVudCB7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gIC5sb2dvc19jb250IC5jb250IC5pbm5lciB7XG4gICAgcGFkZGluZzogMDsgfVxuICAubG9nb3NfY29udCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogMzBweDsgfVxuICAgIC5sb2dvc19jb250IC5jb250IC5pbm5lcl9jb250ZW50OmFmdGVyIHtcbiAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgbGVmdDogMTAwcHg7XG4gICAgICB0b3A6IC00MHB4O1xuICAgICAgYm9yZGVyLXdpZHRoOiAwIDI0cHggNDBweCAyNHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZWVmMWZhIHRyYW5zcGFyZW50OyB9XG4gIC5sb2dvc19jb250IC5jb250LmZsaXAgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgIHJpZ2h0OiBhdXRvO1xuICAgIGxlZnQ6IDEwMHB4O1xuICAgIHRvcDogLTQwcHg7XG4gICAgYm9yZGVyLXdpZHRoOiAwIDI0cHggNDBweCAyNHB4O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2VlZjFmYSB0cmFuc3BhcmVudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmxvZ29zX2NvbnQgLmxvZ29zIC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5sb2dvc19jb250IC5jb250IC5pbm5lciB7XG4gICAgcGFkZGluZzogMCA2MHB4IDAgMDsgfVxuICAubG9nb3NfY29udCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogNDBweDsgfVxuICAubG9nb3NfY29udCAuY29udC5mbGlwIC5pbm5lciB7XG4gICAgcGFkZGluZzogMCAwIDAgNjBweDsgfVxuICAubG9nb3NfY29udCAubG9nb3Nfc3RhZ2dlciB7XG4gICAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsgfVxuICAgIC5sb2dvc19jb250IC5sb2dvc19zdGFnZ2VyIGxpIC5sb2dvIHtcbiAgICAgIGZsb2F0OiBub25lO1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1heC13aWR0aDogMjAwcHg7XG4gICAgICBtYXJnaW46IDAgYXV0byAzMHB4OyB9XG4gICAgLmxvZ29zX2NvbnQgLmxvZ29zX3N0YWdnZXIgbGk6bnRoLWNoaWxkKGV2ZW4pIC5sb2dvIHtcbiAgICAgIGZsb2F0OiBub25lOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAxMzYwcHgpIHtcbiAgLmxvZ29zX2NvbnQgLmNvbnQgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwIDYwcHggMCAwOyB9XG4gIC5sb2dvc19jb250IC5jb250LmZsaXAgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwIDAgMCA2MHB4OyB9IH1cblxuLnRlc3RfY29udCAudmVydF9hbGlnbiAuZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnRlc3RfY29udCAudmVydF9hbGlnbiAuaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLnRlc3RfY29udCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gIHBhZGRpbmc6IDAgNjBweDsgfVxuXG4udGVzdF9jb250IC50ZXN0IHtcbiAgb3JkZXI6IC0xOyB9XG4gIC50ZXN0X2NvbnQgLnRlc3QgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwIDYwcHg7IH1cbiAgLnRlc3RfY29udCAudGVzdCAuaW5uZXJfY29udGVudCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHBhZGRpbmc6IDYwcHg7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgIC50ZXN0X2NvbnQgLnRlc3QgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IC00MHB4O1xuICAgICAgdG9wOiAxMDBweDtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgIGJvcmRlci13aWR0aDogMjRweCAwIDI0cHggNDBweDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZmZmZjtcbiAgICAgIGNvbnRlbnQ6ICcnOyB9XG4gIC50ZXN0X2NvbnQgLnRlc3QuZmxpcCB7XG4gICAgb3JkZXI6IDE7IH1cbiAgICAudGVzdF9jb250IC50ZXN0LmZsaXAgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICBsZWZ0OiAtNDBweDtcbiAgICAgIGJvcmRlci13aWR0aDogMjRweCA0MHB4IDI0cHggMDtcbiAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgI2ZmZmZmZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAudGVzdF9jb250IC52ZXJ0X2FsaWduIC5ncmlkIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAudGVzdF9jb250IC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC50ZXN0X2NvbnQgLnRlc3Qge1xuICAgIG1hcmdpbjogMCAwIDgwcHg7IH1cbiAgICAudGVzdF9jb250IC50ZXN0IC5pbm5lciB7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gICAgLnRlc3RfY29udCAudGVzdCAuaW5uZXJfY29udGVudCB7XG4gICAgICBwYWRkaW5nOiAzMHB4OyB9XG4gICAgICAudGVzdF9jb250IC50ZXN0IC5pbm5lcl9jb250ZW50OmFmdGVyIHtcbiAgICAgICAgcmlnaHQ6IGF1dG87XG4gICAgICAgIGxlZnQ6IDEwMHB4O1xuICAgICAgICB0b3A6IGF1dG87XG4gICAgICAgIGJvdHRvbTogLTQwcHg7XG4gICAgICAgIGJvcmRlci13aWR0aDogNDBweCAyNHB4IDAgMjRweDtcbiAgICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50OyB9XG4gICAgLnRlc3RfY29udCAudGVzdC5mbGlwIC5pbm5lcl9jb250ZW50OmFmdGVyIHtcbiAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgbGVmdDogMTAwcHg7XG4gICAgICB0b3A6IGF1dG87XG4gICAgICBib3R0b206IC00MHB4O1xuICAgICAgYm9yZGVyLXdpZHRoOiA0MHB4IDI0cHggMCAyNHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjZmZmZmZmIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAudGVzdF9jb250IC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwIDA7IH1cbiAgLnRlc3RfY29udCAudGVzdCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDAgNjBweCAwIDA7IH1cbiAgLnRlc3RfY29udCAudGVzdCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogNDBweDsgfVxuICAudGVzdF9jb250IC50ZXN0LmZsaXAgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwIDAgMCA2MHB4OyB9XG4gIC50ZXN0X2NvbnQgLnRlc3QuZmxpcCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgbGVmdDogLTQwcHg7XG4gICAgYm9yZGVyLXdpZHRoOiAyNHB4IDQwcHggMjRweCAwO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgI2ZmZmZmZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDsgfSB9XG5cbi50ZXN0aW1vbmlhbCB7XG4gIGJhY2tncm91bmQ6ICMyYjU5YzM7IH1cbiAgLnRlc3RpbW9uaWFsIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmctdG9wOiAxMDBweDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTYwcHg7IH1cbiAgLnRlc3RpbW9uaWFsICoge1xuICAgIGNvbG9yOiAjZmZmZmZmOyB9XG4gIC50ZXN0aW1vbmlhbCBoMyB7XG4gICAgbWFyZ2luLWJvdHRvbTogMmVtOyB9XG4gIC50ZXN0aW1vbmlhbCBibG9ja3F1b3RlIHtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAudGVzdGltb25pYWwgY2l0ZSB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgLnRlc3RpbW9uaWFsIC5pbWcgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTAwJTsgfVxuXG4uaWNvbl9sYWJlbF9ncmlkIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICBwYWRkaW5nOiAxMDBweCAwIDIwcHg7IH1cblxuLmljb25fbGFiZWxfZ3JpZCAuaW50cm8ge1xuICB3aWR0aDogNzAlO1xuICBtYXJnaW46IDAgYXV0byA4MHB4OyB9XG5cbi5pY29uX2xhYmVsX2dyaWQgaDMge1xuICBjb2xvcjogIzAwMDA0MTtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cblxuLmljb25fbGFiZWxfZ3JpZCAuaWNvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogdG9wO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuICAuaWNvbl9sYWJlbF9ncmlkIC5pY29ucyAuYnVja2V0IHtcbiAgICB3aWR0aDogMzMuMzMlO1xuICAgIG1hcmdpbjogMCBhdXRvIDgwcHg7XG4gICAgcGFkZGluZzogMCAzMHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5pY29uX2xhYmVsX2dyaWQgLmljb25zIC5pY29uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogMTIwcHg7XG4gICAgaGVpZ2h0OiAxMjBweDtcbiAgICBtYXJnaW46IDAgYXV0byA1MHB4O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGJvdHRvbTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDkwJSBhdXRvOyB9XG4gIC5pY29uX2xhYmVsX2dyaWQgLmljb25zIHAsIC5pY29uX2xhYmVsX2dyaWQgLmljb25zIGJsb2NrcXVvdGUsIC5pY29uX2xhYmVsX2dyaWQgLmljb25zIGNpdGUge1xuICAgIG1hcmdpbjogMmVtIDAgMCAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5pY29uX2xhYmVsX2dyaWQgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgcGFkZGluZzogNjBweCAyMHB4IDIwcHg7IH1cbiAgLmljb25fbGFiZWxfZ3JpZCAuaW50cm8ge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5pY29uX2xhYmVsX2dyaWQgLmljb25zIC5idWNrZXQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgbWFyZ2luOiAwIGF1dG8gNDBweDtcbiAgICBwYWRkaW5nOiAwIDEwcHg7IH1cbiAgLmljb25fbGFiZWxfZ3JpZCAuaWNvbnMgcCwgLmljb25fbGFiZWxfZ3JpZCAuaWNvbnMgYmxvY2txdW90ZSwgLmljb25fbGFiZWxfZ3JpZCAuaWNvbnMgY2l0ZSB7XG4gICAgbWFyZ2luOiAxZW0gMCAwOyB9XG4gIC5pY29uX2xhYmVsX2dyaWQgLmljb25zIC5pY29uIHtcbiAgICBtYXJnaW46IDAgYXV0byAzMHB4OyB9IH1cblxuLnZhbHVlc190ZW5ldHMgaDIubGluZWRfbGVmdDphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cblxuLnZhbHVlc190ZW5ldHMgcCwgLnZhbHVlc190ZW5ldHMgYmxvY2txdW90ZSwgLnZhbHVlc190ZW5ldHMgY2l0ZSxcbi52YWx1ZXNfdGVuZXRzIGxpLFxuLnZhbHVlc190ZW5ldHMgaDUsXG4udmFsdWVzX3RlbmV0cyBoNiB7XG4gIGNvbG9yOiAjZmZmZmZmOyB9XG5cbi52YWx1ZXNfdGVuZXRzIGgzLFxuLnZhbHVlc190ZW5ldHMgaDQge1xuICBjb2xvcjogI2ZmNmU0MjsgfVxuXG4udmFsdWVzX3RlbmV0cyBoNSB7XG4gIG1hcmdpbjogMCAwIDAuNzVlbTsgfVxuXG4udmFsdWVzX3RlbmV0cyAudGVuZXRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBtYXJnaW46IDgwcHggMCAwIDA7IH1cbiAgLnZhbHVlc190ZW5ldHMgLnRlbmV0cyAuYnVja2V0IHtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1hcmdpbjogMCAwIDUwcHg7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgLnZhbHVlc190ZW5ldHMgLnRlbmV0cyAuYnVja2V0Om50aC1vZi10eXBlKGV2ZW4pIHtcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDYwcHg7IH1cbiAgICAudmFsdWVzX3RlbmV0cyAudGVuZXRzIC5idWNrZXQ6bnRoLW9mLXR5cGUob2RkKSB7XG4gICAgICBwYWRkaW5nOiAwIDYwcHggMCAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC52YWx1ZXNfdGVuZXRzIC50ZW5ldHMge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLnZhbHVlc190ZW5ldHMgLnRlbmV0cyAuYnVja2V0IHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAudmFsdWVzX3RlbmV0cyAudGVuZXRzIC5idWNrZXQ6bnRoLW9mLXR5cGUoZXZlbikge1xuICAgICAgICBwYWRkaW5nOiAwOyB9XG4gICAgICAudmFsdWVzX3RlbmV0cyAudGVuZXRzIC5idWNrZXQ6bnRoLW9mLXR5cGUob2RkKSB7XG4gICAgICAgIHBhZGRpbmc6IDA7IH0gfVxuXG4uYmxvZ19waWNrZXIgaDMge1xuICBjb2xvcjogIzAwMDA0MTtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cblxuLmJsb2dfcGlja2VyIC5mZWF0dXJlZF9wb3N0cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBtYXJnaW46IDgwcHggMCA1MHB4O1xuICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyB9XG5cbi5ibG9nX3BpY2tlciAuaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMjdweCk7XG4gIG1hcmdpbjogMCAwIDQwcHggNDBweDtcbiAgei1pbmRleDogMTA7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cbiAgLmJsb2dfcGlja2VyIC5pdGVtOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5ibG9nX3BpY2tlciAuaXRlbSAudG9wIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgei1pbmRleDogMTI7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgIC5ibG9nX3BpY2tlciAuaXRlbSAudG9wIC5pbm5lciB7XG4gICAgICBwYWRkaW5nOiA0MHB4O1xuICAgICAgaGVpZ2h0OiAyMzBweDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBiYWNrZ3JvdW5kOiAjMmI1OWMzO1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gIC5ibG9nX3BpY2tlciAuaXRlbSAuYnRtIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIHotaW5kZXg6IDExOyB9XG4gICAgLmJsb2dfcGlja2VyIC5pdGVtIC5idG0gLmlubmVyIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmc6IDMwcHggNDBweCA4MHB4IDIwcHg7IH1cbiAgICAuYmxvZ19waWNrZXIgLml0ZW0gLmJ0bSBoNCB7XG4gICAgICBtYXJnaW46IDAgMCAwLjc1ZW07XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwOyB9XG4gICAgLmJsb2dfcGlja2VyIC5pdGVtIC5idG0gcCwgLmJsb2dfcGlja2VyIC5pdGVtIC5idG0gYmxvY2txdW90ZSwgLmJsb2dfcGlja2VyIC5pdGVtIC5idG0gY2l0ZSB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgLmJsb2dfcGlja2VyIC5pdGVtIC5ybV93cmFwIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMjBweDtcbiAgICBib3R0b206IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmJsb2dfcGlja2VyIC5mZWF0dXJlZF9wb3N0cyB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmJsb2dfcGlja2VyIC5pdGVtIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDAgMCA0MHB4IDA7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5ibG9nX3BpY2tlciAuaXRlbSB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgICBtYXJnaW46IDAgYXV0byA0MHB4OyB9XG4gICAgLmJsb2dfcGlja2VyIC5pdGVtOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87IH0gfVxuXG4ud3lzIC5pbm5lciB7XG4gIG1hcmdpbjogMCBhdXRvO1xuICB3aWR0aDogMTAwJTsgfVxuXG4ubmFycm93X3d5cyAuaW5uZXIge1xuICBtYXJnaW46IDAgYXV0bztcbiAgd2lkdGg6IDcwJTtcbiAgbWF4LXdpZHRoOiA5MDBweDsgfVxuXG4uaW5zZXRfcmlnaHRfY29sIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICB3aWR0aDogODAlOyB9XG5cbi5pbnNldF9yaWdodF9jb2wgLmxlZnQgLmlubmVyIHtcbiAgcGFkZGluZy1yaWdodDogNzBweDsgfVxuXG4uaW5zZXRfcmlnaHRfY29sIC5yaWdodCAuaW5uZXIge1xuICBiYWNrZ3JvdW5kOiAjZjJmM2Y4O1xuICBwYWRkaW5nOiAzNnB4IDM2cHggMTBweDsgfVxuXG4uaW5zZXRfcmlnaHRfY29sIC5yaWdodCBoNCB7XG4gIGZvbnQtc2l6ZTogMS4xMWVtO1xuICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XG5cbi5pbnNldF9yaWdodF9jb2wgLnJpZ2h0IHVsIHtcbiAgbWFyZ2luOiAwIDAgMS41NmVtIDIwcHg7IH1cbiAgLmluc2V0X3JpZ2h0X2NvbCAucmlnaHQgdWwgbGkge1xuICAgIGNvbG9yOiAjMTQxOTIwOyB9XG5cbi5pbnNldF9yaWdodF9jb2wgLnJpZ2h0IGEge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4uaW5zZXRfcmlnaHRfY29sLmxpZ2h0LWdyYXkgLnJpZ2h0IC5pbm5lciB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLm5hcnJvd193eXMgLmlubmVyIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuaW5zZXRfcmlnaHRfY29sIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5pbnNldF9yaWdodF9jb2wgLmxlZnQge1xuICAgIG1hcmdpbjogMCAwIDQwcHg7IH1cbiAgICAuaW5zZXRfcmlnaHRfY29sIC5sZWZ0IC5pbm5lciB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAubmFycm93X3d5cyAuaW5uZXIge1xuICAgIHdpZHRoOiA5MCU7IH0gfVxuXG4uc2tpbm55X2N0YSB7XG4gIGJhY2tncm91bmQ6ICMwMDAwNDE7IH1cbiAgLnNraW5ueV9jdGEgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgcGFkZGluZy10b3A6IDMwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHg7IH1cbiAgLnNraW5ueV9jdGEgLnZlcnRfYWxpZ24ge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAuc2tpbm55X2N0YSAudmVydF9hbGlnbiAuaW5uZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGhlaWdodDogMTAwJTsgfVxuICAuc2tpbm55X2N0YSAuY29udCB7XG4gICAgcGFkZGluZy1yaWdodDogNjBweDsgfVxuICAgIC5za2lubnlfY3RhIC5jb250LnNvbG8ge1xuICAgICAgcGFkZGluZzogNjBweCAwIDMwcHg7IH1cbiAgICAuc2tpbm55X2N0YSAuY29udCBwLCAuc2tpbm55X2N0YSAuY29udCBibG9ja3F1b3RlLCAuc2tpbm55X2N0YSAuY29udCBjaXRlIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4yMmVtOyB9XG4gICAgLnNraW5ueV9jdGEgLmNvbnQgKiB7XG4gICAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAuc2tpbm55X2N0YSAuY3Qge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5za2lubnlfY3RhIC5jdCAuYnRuIHtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAuc2tpbm55X2N0YS5saWdodC1ncmF5IC5jb250ICosIC5za2lubnlfY3RhLmxpZ2h0LWJsdWUgLmNvbnQgKiB7XG4gICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgLnNraW5ueV9jdGEuZmxpcCAuY29udCB7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDYwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNraW5ueV9jdGEgLnZlcnRfYWxpZ24ge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5za2lubnlfY3RhIC5jb250IHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gIC5za2lubnlfY3RhLmZsaXAgLmNvbnQge1xuICAgIHBhZGRpbmctbGVmdDogMDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNraW5ueV9jdGEgLnZlcnRfYWxpZ24ge1xuICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLmZvcm1fZW1iZWQucHVycGxlLWRhcmsgaDIge1xuICBtYXJnaW46IDAgMCAwLjc1ZW07XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMDtcbiAgY29sb3I6ICNmZmZmZmY7IH1cbiAgLmZvcm1fZW1iZWQucHVycGxlLWRhcmsgaDI6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxuLmZvcm1fZW1iZWQuYWx0X2xheW91dCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDAwNDEgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICAuZm9ybV9lbWJlZC5hbHRfbGF5b3V0IGgyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIG1hcmdpbjogMCAwIDFlbTtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgZm9udC1zaXplOiAyLjIyZW07XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMC4xZW07XG4gICAgY29sb3I6ICNmZjZlNDI7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmZmZmOyB9XG4gICAgLmZvcm1fZW1iZWQuYWx0X2xheW91dCBoMjphZnRlciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5mb3JtX2VtYmVkLmFsdF9sYXlvdXQgcCwgLmZvcm1fZW1iZWQuYWx0X2xheW91dCBibG9ja3F1b3RlLCAuZm9ybV9lbWJlZC5hbHRfbGF5b3V0IGNpdGUge1xuICAgIGNvbG9yOiAjZmZmZmZmOyB9XG4gICAgLmZvcm1fZW1iZWQuYWx0X2xheW91dCBwLmRlc2MsIC5mb3JtX2VtYmVkLmFsdF9sYXlvdXQgYmxvY2txdW90ZS5kZXNjLCAuZm9ybV9lbWJlZC5hbHRfbGF5b3V0IGNpdGUuZGVzYyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDAgMCAzMHB4O1xuICAgICAgcGFkZGluZzogMCAwIDAgMzBweDtcbiAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgI2ZmNmU0MjtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBmb250LXNpemU6IDEuMjJlbTsgfVxuXG4uZm9ybV9lbWJlZCAubmFycm93X2Zvcm0ge1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuZm9ybV9lbWJlZC5hbHRfbGF5b3V0IHAuZGVzYywgLmZvcm1fZW1iZWQuYWx0X2xheW91dCBibG9ja3F1b3RlLmRlc2MsIC5mb3JtX2VtYmVkLmFsdF9sYXlvdXQgY2l0ZS5kZXNjIHtcbiAgICBmb250LXNpemU6IDFlbTsgfVxuICAuZm9ybV9lbWJlZC5hbHRfbGF5b3V0IHAgYnIsIC5mb3JtX2VtYmVkLmFsdF9sYXlvdXQgYmxvY2txdW90ZSBiciwgLmZvcm1fZW1iZWQuYWx0X2xheW91dCBjaXRlIGJyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5mb3JtX2VtYmVkIC5uYXJyb3dfZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7IH0gfVxuXG4uaWNvbl9jb250X2xpc3QgLmludHJvIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiAwIGF1dG8gODBweDsgfVxuXG4uaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3Mge1xuICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2NrcyAuYnVja2V0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIG1hcmdpbi1ib3R0b206IDEwMHB4OyB9XG4gICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzIC5idWNrZXQ6bGFzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzIC5pY29uIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICB3aWR0aDogMjglOyB9XG4gICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzIC5pY29uIGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMzBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2NrcyAuY29udCB7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgd2lkdGg6IDcyJTsgfVxuICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MgaDMge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgY29sb3I6ICMwMDAwNDE7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgZm9udC1zaXplOiAxLjY3ZW07XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cCAuaW5uZXIge1xuICAgICAgcGFkZGluZzogOTZweCA5NnB4IDgwcHg7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC5idWNrZXQge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDQwcHgpO1xuICAgICAgbWFyZ2luOiAwIDAgNDBweCA0MHB4O1xuICAgICAgYmFja2dyb3VuZDogI2YyZjNmODsgfVxuICAgICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cCAuYnVja2V0Om50aC1vZi10eXBlKDJuKzEpIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC52ZXJ0X2FsaWduIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBtYXJnaW46IDAgMCA2MHB4OyB9XG4gICAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC52ZXJ0X2FsaWduIC5pY29uIHtcbiAgICAgICAgd2lkdGg6IDE0MHB4O1xuICAgICAgICBoZWlnaHQ6IDE0MHB4OyB9XG4gICAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC52ZXJ0X2FsaWduIGgzIHtcbiAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIDE0MHB4KTtcbiAgICAgICAgbWFyZ2luOiAwIDAgMCAyMHB4O1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBjb2xvcjogIzAwMDA0MTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XG4gICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cCAuaW5uZXJfY29udGVudCBsaSB7XG4gICAgICBjb2xvcjogIzE0MTkyMDsgfVxuICAgIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAudmFyaWFudCAuaW5uZXIge1xuICAgICAgcGFkZGluZzogNTBweDsgfVxuICAgIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAudmFyaWFudCAuaWNvbiB7XG4gICAgICBmbG9hdDogbm9uZTtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luOiAwIGF1dG8gMzBweDtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgbWF4LXdpZHRoOiA5MCU7XG4gICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICBtYXgtaGVpZ2h0OiAxNDBweDsgfVxuICAgIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAudmFyaWFudCBoMyB7XG4gICAgICB3aWR0aDogODAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG8gMzBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAzcHg7XG4gICAgICBmb250LXNpemU6IDEuMjJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwLnZhcmlhbnQgLmlubmVyX2NvbnRlbnQge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwLnZhcmlhbnQgLmJ1Y2tldCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gNjBweCk7XG4gICAgICBtYXJnaW46IDAgMCA2MHB4IDYwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgICAgYm94LXNoYWRvdzogMCAwIDIwcHggcmdiYSgwLCAwLCAwLCAwLjE2KTsgfVxuICAgICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cC52YXJpYW50IC5idWNrZXQ6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaWNvbl9jb250X2xpc3QgLmludHJvIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW46IDAgYXV0byA0MHB4OyB9XG4gICAgLmljb25fY29udF9saXN0IC5pbnRybyBwIGJyLCAuaWNvbl9jb250X2xpc3QgLmludHJvIGJsb2NrcXVvdGUgYnIsIC5pY29uX2NvbnRfbGlzdCAuaW50cm8gY2l0ZSBiciB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2NrcyAuYnVja2V0IHtcbiAgICBtYXJnaW4tYm90dG9tOiA2MHB4OyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2NrcyAuaWNvbiB7XG4gICAgZmxvYXQ6IG5vbmU7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MgLmljb24gaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEzMHB4O1xuICAgICAgbWFyZ2luOiAwIDAgMzBweDsgfVxuICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MgLmNvbnQge1xuICAgIGZsb2F0OiBub25lO1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2NrcyBoMyB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBjb2xvcjogIzAwMDA0MTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBmb250LXNpemU6IDEuNjdlbTtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAxcHg7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDQwcHggNDBweCAyMHB4OyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAgLmJ1Y2tldCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiAwIDAgNDBweCAwOyB9XG4gICAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cCAuYnVja2V0Om50aC1vZi10eXBlKDJuKzEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAgLnZlcnRfYWxpZ24ge1xuICAgIG1hcmdpbjogMCAwIDQwcHg7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC52ZXJ0X2FsaWduIC5pY29uIHtcbiAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgIGhlaWdodDogMTAwcHg7IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC52ZXJ0X2FsaWduIGgzIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxMjBweCk7XG4gICAgICBtYXJnaW46IDAgMCAwIDIwcHg7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMXB4OyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAgLmlubmVyX2NvbnRlbnQgbGkge1xuICAgIGNvbG9yOiAjMTQxOTIwOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAudmFyaWFudCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDUwcHg7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cC52YXJpYW50IC5pY29uIHtcbiAgICBmbG9hdDogbm9uZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDAgYXV0byAzMHB4O1xuICAgIHdpZHRoOiBhdXRvO1xuICAgIG1heC13aWR0aDogOTAlO1xuICAgIGhlaWdodDogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiAxNDBweDsgfVxuICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwLnZhcmlhbnQgaDMge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWFyZ2luOiAwIGF1dG8gMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICMwMDAwMDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBsZXR0ZXItc3BhY2luZzogM3B4O1xuICAgIGZvbnQtc2l6ZTogMS4yMmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cC52YXJpYW50IC5pbm5lcl9jb250ZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cC52YXJpYW50IC5idWNrZXQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCAwIDQwcHggMDsgfVxuICAgIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAudmFyaWFudCAuYnVja2V0Om50aC1vZi10eXBlKDJuKzEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaWNvbl9jb250X2xpc3QgLmludHJvIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2NrcyAuYnVja2V0IHtcbiAgICBtYXJnaW4tYm90dG9tOiA4MHB4OyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAgLmJ1Y2tldCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICBtYXJnaW46IDAgYXV0byA0MHB4IGF1dG87IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC5idWNrZXQ6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cC52YXJpYW50IC5pbm5lciB7XG4gICAgcGFkZGluZzogMzBweDsgfVxuICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwLnZhcmlhbnQgLmJ1Y2tldCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICBtYXJnaW46IDAgYXV0byA2MHB4IGF1dG87IH1cbiAgICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwLnZhcmlhbnQgLmJ1Y2tldDpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bzsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogMTM2MHB4KSB7XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAgLmlubmVyIHtcbiAgICBwYWRkaW5nOiA2MHB4IDYwcHggNTBweDsgfVxuICAuaWNvbl9jb250X2xpc3QgLmljb25fY29udF9ibG9ja3MudHdvX3VwIC52ZXJ0X2FsaWduIC5pY29uIHtcbiAgICB3aWR0aDogODBweDtcbiAgICBoZWlnaHQ6IDgwcHg7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cCAudmVydF9hbGlnbiBoMyB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDEwMHB4KTtcbiAgICBmb250LXNpemU6IDEuNWVtOyB9XG4gIC5pY29uX2NvbnRfbGlzdCAuaWNvbl9jb250X2Jsb2Nrcy50d29fdXAudmFyaWFudCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDUwcHg7IH1cbiAgLmljb25fY29udF9saXN0IC5pY29uX2NvbnRfYmxvY2tzLnR3b191cC52YXJpYW50IC5pY29uIHtcbiAgICBtYXgtaGVpZ2h0OiAxMDBweDsgfSB9XG5cbi5pbWFnZV9yb3dzIC5pbnRybyB7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7IH1cblxuLmltYWdlX3Jvd3MgLnpvb21fcm93IGgzIHtcbiAgbWFyZ2luOiAwIDAgMmVtO1xuICBmb250LXNpemU6IDEuNjdlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMwMDAwNDE7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMDsgfVxuXG4uaW1hZ2Vfcm93cyAuem9vbV9pbWFnZXMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbi1ib3R0b206IDYwcHg7IH1cbiAgLmltYWdlX3Jvd3MgLnpvb21faW1hZ2VzIC56b29tX2NvbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogMzMuMzMzJTtcbiAgICBoZWlnaHQ6IDQ3MHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAuaW1hZ2Vfcm93cyAuem9vbV9pbWFnZXMgLnpvb21fY29udCAuaG92ZXJfcHJvbXB0IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgYm90dG9tOiAwO1xuICAgICAgbGVmdDogMDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgNjUsIDAuNik7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vaW1hZ2VzL21hZy1nbGFzcy1mYXQtd2hpdGUuc3ZnKTtcbiAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMjBweCBhdXRvO1xuICAgICAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzO1xuICAgICAgb3BhY2l0eTogMDsgfVxuICAgICAgLmltYWdlX3Jvd3MgLnpvb21faW1hZ2VzIC56b29tX2NvbnQgLmhvdmVyX3Byb21wdC5raWxsIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5pbWFnZV9yb3dzIC56b29tX2ltYWdlcyAuem9vbV9jb250IGltZyB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgaGVpZ2h0OiAxMDAlOyB9XG4gICAgLmltYWdlX3Jvd3MgLnpvb21faW1hZ2VzIC56b29tX2NvbnQuem9vbWFibGU6aG92ZXIgLmhvdmVyX3Byb21wdCB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5pbWFnZV9yb3dzIC56b29tX3JvdyBoMyB7XG4gICAgbWFyZ2luOiAwIDAgMWVtOyB9XG4gIC5pbWFnZV9yb3dzIC56b29tX2ltYWdlcyB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAuaW1hZ2Vfcm93cyAuem9vbV9pbWFnZXMgLnpvb21fY29udCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogYXV0bzsgfVxuICAgICAgLmltYWdlX3Jvd3MgLnpvb21faW1hZ2VzIC56b29tX2NvbnQgLmhvdmVyX3Byb21wdCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIC5pbWFnZV9yb3dzIC56b29tX2ltYWdlcyAuem9vbV9jb250IGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIGhlaWdodDogYXV0bzsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmltYWdlX3Jvd3MgLnpvb21faW1hZ2VzIC56b29tX2NvbnQge1xuICAgIGhlaWdodDogMzAwcHg7IH1cbiAgICAuaW1hZ2Vfcm93cyAuem9vbV9pbWFnZXMgLnpvb21fY29udCBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IGF1dG87IH0gfVxuXG4uaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5oYXBweV9jdXN0b21lcnMgLmhjX3Rlc3QgLmxvZ28ge1xuICAgIHBhZGRpbmc6IDAgNTBweCAwIDA7IH1cbiAgICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5sb2dvIC5pbm5lciB7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIGhlaWdodDogMTAwJTsgfVxuICAgIC5oYXBweV9jdXN0b21lcnMgLmhjX3Rlc3QgLmxvZ28gLmlubmVyX2lubmVyIHtcbiAgICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAubG9nbyBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5jb250IHtcbiAgICBwYWRkaW5nOiAwIDUwcHggMCAwOyB9XG4gICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAuY29udCAuaW5uZXIge1xuICAgICAgcGFkZGluZzogNzBweCA3MHB4IDMwcHggMTAwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjZWVmMWZhO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5xdW90ZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5oYXBweV9jdXN0b21lcnMgLmhjX3Rlc3QgLm1hcmsge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAtNDBweDtcbiAgICB0b3A6IC0yMHB4O1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBjb2xvcjogIzFGMUZERDtcbiAgICBmb250LXNpemU6IDMuNjFlbTtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAuaW5uZXJfY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogbGVmdDsgfVxuICAgIC5oYXBweV9jdXN0b21lcnMgLmhjX3Rlc3QgLmlubmVyX2NvbnRlbnQgcCwgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAuaW5uZXJfY29udGVudCBibG9ja3F1b3RlLCAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5pbm5lcl9jb250ZW50IGNpdGUge1xuICAgICAgbWFyZ2luOiAwOyB9XG4gIC5oYXBweV9jdXN0b21lcnMgLmhjX3Rlc3QgLmhlYWRzaG90IHtcbiAgICBmbGV4OiAwIDAgMTEycHg7XG4gICAgd2lkdGg6IDExMnB4O1xuICAgIGhlaWdodDogMTEycHg7XG4gICAgbWFyZ2luOiAwIDMwcHggMCAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDYwcHg7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cblxuLmhhcHB5X2N1c3RvbWVycy5saWdodC1ibHVlIC5oY190ZXh0IC5jb250IC5pbm5lciwgLmhhcHB5X2N1c3RvbWVycy5saWdodC1ncmF5IC5oY190ZXh0IC5jb250IC5pbm5lciB7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cblxuLmhhcHB5X2N1c3RvbWVycyAubG9nb3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDgwcHggMDtcbiAgcGFkZGluZzogMDsgfVxuICAuaGFwcHlfY3VzdG9tZXJzIC5sb2dvcyAuZ3JpZGJsb2NrIHtcbiAgICB3aWR0aDogMTYuNjY3JTtcbiAgICBwYWRkaW5nOiAwIDM1cHg7IH1cbiAgLmhhcHB5X2N1c3RvbWVycyAubG9nb3MgLmlubmVyIHtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLmhhcHB5X2N1c3RvbWVycyAubG9nb3MgLmlubmVyIC5sb2dvIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGhlaWdodDogNzBweDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAgIC5oYXBweV9jdXN0b21lcnMgLmxvZ29zIC5pbm5lciAubG9nbyBpbWcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWF4LWhlaWdodDogMTAwJTtcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAzMHB4OyB9XG4gICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAubG9nbyB7XG4gICAgICBtYXJnaW46IDAgMCA0MHB4O1xuICAgICAgcGFkZGluZzogMDsgfVxuICAgICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAubG9nbyAuaW5uZXIge1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAubG9nbyBpbWcge1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgbWF4LXdpZHRoOiAzMDBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5jb250IHtcbiAgICAgIHBhZGRpbmc6IDAgNDBweDsgfVxuICAgICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAuY29udCAuaW5uZXIge1xuICAgICAgICBwYWRkaW5nOiA1MHB4IDQwcHggMzBweCA1MHB4OyB9XG4gICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAuaGVhZHNob3Qge1xuICAgICAgZmxleDogMCAwIDYwcHg7XG4gICAgICB3aWR0aDogNjBweDtcbiAgICAgIGhlaWdodDogNjBweDtcbiAgICAgIG1hcmdpbjogMCAyMHB4IDAgMDsgfVxuICAuaGFwcHlfY3VzdG9tZXJzIC5sb2dvcyB7XG4gICAgbWFyZ2luOiA0MHB4IDA7IH1cbiAgICAuaGFwcHlfY3VzdG9tZXJzIC5sb2dvcyAuZ3JpZGJsb2NrIHtcbiAgICAgIGZsZXg6IDEgMCA1MCU7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIHBhZGRpbmc6IDAgMjBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAubG9nbyB7XG4gICAgcGFkZGluZzogMCAyMHB4IDAgMDsgfVxuICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5jb250IHtcbiAgICBwYWRkaW5nOiAwIDIwcHggMCAwOyB9XG4gICAgLmhhcHB5X2N1c3RvbWVycyAuaGNfdGVzdCAuY29udCAuaW5uZXIge1xuICAgICAgcGFkZGluZzogNDBweCA0MHB4IDIwcHggNzBweDsgfVxuICAuaGFwcHlfY3VzdG9tZXJzIC5oY190ZXN0IC5tYXJrIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTQwcHg7XG4gICAgdG9wOiAtMjBweDtcbiAgICB3aWR0aDogNDBweDtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gICAgY29sb3I6ICMxRjFGREQ7XG4gICAgZm9udC1zaXplOiAzLjYxZW07XG4gICAgbGluZS1oZWlnaHQ6IDQwcHg7XG4gICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG4gIC5oYXBweV9jdXN0b21lcnMgLmhjX3Rlc3QgLmhlYWRzaG90IHtcbiAgICBmbGV4OiAwIDAgNjBweDtcbiAgICB3aWR0aDogNjBweDtcbiAgICBoZWlnaHQ6IDYwcHg7IH1cbiAgLmhhcHB5X2N1c3RvbWVycyAubG9nb3MgLmdyaWRibG9jayB7XG4gICAgd2lkdGg6IDMzLjMzMzMlO1xuICAgIG1hcmdpbjogMCAwIDMwcHg7XG4gICAgcGFkZGluZzogMCAyMHB4OyB9IH1cblxuLm1ldHJpY3NfY29udCB7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogMTAwJSBhdXRvOyB9XG4gIC5tZXRyaWNzX2NvbnQgLnZlcnRfYWxpZ24ge1xuICAgIG1hcmdpbi1ib3R0b206IDgwcHg7IH1cbiAgICAubWV0cmljc19jb250IC52ZXJ0X2FsaWduIC5ncmlkIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgLm1ldHJpY3NfY29udCAudmVydF9hbGlnbiAuaW5uZXIge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAubWV0cmljc19jb250IC52ZXJ0X2FsaWduLmxhc3Qge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfVxuICAubWV0cmljc19jb250IC5tZXRyaWNzIC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwIDYwcHg7IH1cbiAgLm1ldHJpY3NfY29udCAuY29udCB7XG4gICAgb3JkZXI6IC0xOyB9XG4gICAgLm1ldHJpY3NfY29udCAuY29udCAuaW5uZXIge1xuICAgICAgcGFkZGluZzogMCA2MHB4OyB9XG4gICAgLm1ldHJpY3NfY29udCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBwYWRkaW5nOiA2MHB4O1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgICAgLm1ldHJpY3NfY29udCAuY29udCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgcmlnaHQ6IC00MHB4O1xuICAgICAgICB0b3A6IDEwMHB4O1xuICAgICAgICB3aWR0aDogMDtcbiAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICBib3JkZXItd2lkdGg6IDI0cHggMCAyNHB4IDQwcHg7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZmZmZjtcbiAgICAgICAgY29udGVudDogJyc7IH1cbiAgICAubWV0cmljc19jb250IC5jb250LmZsaXAge1xuICAgICAgb3JkZXI6IDE7IH1cbiAgICAgIC5tZXRyaWNzX2NvbnQgLmNvbnQuZmxpcCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgICBsZWZ0OiAtNDBweDtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiAyNHB4IDQwcHggMjRweCAwO1xuICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICNmZmZmZmYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7IH1cbiAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gNDBweCk7XG4gICAgbWFyZ2luOiAzMHB4IDIwcHggMzBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAubWV0cmljc19jb250IC5tZXRyaWNzX2dyaWQgbGkgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDYwJTtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIC5tZXRyaWMge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW46IDAuMjVlbSAwO1xuICAgICAgZm9udC1zaXplOiAzLjMzZW07XG4gICAgICBsaW5lLWhlaWdodDogMS4zZW07XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgY29sb3I6ICMwMDAwNDE7IH1cbiAgICAubWV0cmljc19jb250IC5tZXRyaWNzX2dyaWQgbGkgLm1ldHJpY19sYWJlbCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGZvbnQtc2l6ZTogMS4yMmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAubWV0cmljc19jb250IC52ZXJ0X2FsaWduIC5ncmlkIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAubWV0cmljc19jb250IC5tZXRyaWNzIC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5tZXRyaWNzX2NvbnQgLmNvbnQgLmlubmVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5tZXRyaWNzX2NvbnQgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDMwcHg7IH1cbiAgICAubWV0cmljc19jb250IC5jb250IC5pbm5lcl9jb250ZW50OmFmdGVyIHtcbiAgICAgIHJpZ2h0OiBhdXRvO1xuICAgICAgbGVmdDogMTAwcHg7XG4gICAgICB0b3A6IC00MHB4O1xuICAgICAgYm9yZGVyLXdpZHRoOiAwIDI0cHggNDBweCAyNHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmZmZmIHRyYW5zcGFyZW50O1xuICAgICAgY29udGVudDogJyc7IH1cbiAgLm1ldHJpY3NfY29udCAuY29udC5mbGlwIC5pbm5lcl9jb250ZW50OmFmdGVyIHtcbiAgICByaWdodDogYXV0bztcbiAgICBsZWZ0OiAxMDBweDtcbiAgICB0b3A6IC00MHB4O1xuICAgIGJvcmRlci13aWR0aDogMCAyNHB4IDQwcHggMjRweDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmZmZmYgdHJhbnNwYXJlbnQ7XG4gICAgY29udGVudDogJyc7IH1cbiAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIHtcbiAgICBtYXJnaW4tYm90dG9tOiA4MHB4OyB9XG4gICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDQwcHgpO1xuICAgICAgbWFyZ2luOiAzMHB4IDIwcHggMzBweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogNjAlO1xuICAgICAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAgICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIC5tZXRyaWMge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiAwIDAgMC4yNWVtO1xuICAgICAgICBmb250LXNpemU6IDMuMzNlbTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuM2VtO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBjb2xvcjogIzAwMDA0MTsgfVxuICAgICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIC5tZXRyaWNfbGFiZWwge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IDEuMjJlbTtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLm1ldHJpY3NfY29udCAubWV0cmljcyAuaW5uZXJfY29udGVudCB7XG4gICAgZmxleDogMSAwIDEwMCU7XG4gICAgcGFkZGluZzogMDsgfVxuICAubWV0cmljc19jb250IC5jb250IC5pbm5lciB7XG4gICAgcGFkZGluZzogMCA2MHB4IDAgMDsgfVxuICAubWV0cmljc19jb250IC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiA0MHB4OyB9XG4gIC5tZXRyaWNzX2NvbnQgLmNvbnQuZmxpcCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDAgMCAwIDYwcHg7IH1cbiAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIHtcbiAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyB9XG4gICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDMwcHggMCAzMHB4OyB9XG4gICAgICAubWV0cmljc19jb250IC5tZXRyaWNzX2dyaWQgbGkgaW1nIHtcbiAgICAgICAgd2lkdGg6IDYwJTtcbiAgICAgICAgbWF4LXdpZHRoOiAyMDBweDtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgICAgIC5tZXRyaWNzX2NvbnQgLm1ldHJpY3NfZ3JpZCBsaSAubWV0cmljIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBmb250LXNpemU6IDNlbTsgfVxuICAgICAgLm1ldHJpY3NfY29udCAubWV0cmljc19ncmlkIGxpIC5tZXRyaWNfbGFiZWwge1xuICAgICAgICBmb250LXNpemU6IDFlbTsgfSB9XG5cbi55Yl9pc19mb3IgaDIubGluZWQge1xuICBtYXJnaW46IDAgMCAyLjVlbTsgfVxuXG4ueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuYnVja2V0IHtcbiAgICBmbGV4OiAwIDAgY2FsYygzMy4zMzMzJSAtIDIycHgpO1xuICAgIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMjJweCk7XG4gICAgbWFyZ2luOiAwIDAgMCAzM3B4O1xuICAgIGFsaWduLXNlbGY6IHN0cmV0Y2g7IH1cbiAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuYnVja2V0OmZpcnN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgLnliX2lzX2ZvciAuY29udGVudGJ1Y2tldHMgLmltZyB7XG4gICAgaGVpZ2h0OiAyNTBweDtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIHRvcDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gIC55Yl9pc19mb3IgLmNvbnRlbnRidWNrZXRzIC5jb250IHtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDI1MHB4KTsgfVxuICAgIC55Yl9pc19mb3IgLmNvbnRlbnRidWNrZXRzIC5jb250IC5pbm5lciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZWVmMWZhO1xuICAgICAgYm9yZGVyOiAxcHggZGFzaGVkICMwMDAwNDE7XG4gICAgICBib3JkZXItdG9wOiBub25lO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgcGFkZGluZzogNzBweCA1MHB4IDMwcHggODBweDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgLnliX2lzX2ZvciAuY29udGVudGJ1Y2tldHMgLmNvbnQgaDQge1xuICAgICAgd2lkdGg6IGNhbGMoMTAwJSArIDMwcHgpO1xuICAgICAgbWFyZ2luLWxlZnQ6IC0zMHB4O1xuICAgICAgcGFkZGluZzogMCAwIDAgNTBweDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMnB4OyB9XG4gICAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuY29udCBoNDpiZWZvcmUge1xuICAgICAgICAvKnRvcDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpOyovXG4gICAgICAgIHRvcDogLTJweDsgfVxuICAgIC55Yl9pc19mb3IgLmNvbnRlbnRidWNrZXRzIC5jb250IC53eXNpd3lnIGxpIHtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuY29udCAud3lzaXd5ZyBsaTpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAtMjBweDtcbiAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgaGVpZ2h0OiA2cHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuYnVja2V0IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAwIDAgNDBweDsgfVxuICAgIC55Yl9pc19mb3IgLmNvbnRlbnRidWNrZXRzIC5jb250IC5pbm5lciB7XG4gICAgICBwYWRkaW5nOiA0MHB4IDMwcHggMjBweCA1MHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuYnVja2V0IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDgwMHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG8gMzBweDsgfVxuICAgICAgLnliX2lzX2ZvciAuY29udGVudGJ1Y2tldHMgLmJ1Y2tldDpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cbiAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuaW1nIHtcbiAgICAgIGhlaWdodDogMzAwcHg7IH1cbiAgICAueWJfaXNfZm9yIC5jb250ZW50YnVja2V0cyAuaW5uZXJfY29udGVudCB7XG4gICAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsgfSB9XG5cbi5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmc6IDAgNjBweDsgfVxuICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmJ1Y2tldCB7XG4gICAgd2lkdGg6IGNhbGMoMzMuMzMzMyUgLSA0MHB4KTtcbiAgICBtYXJnaW46IDAgMCAwIDYwcHg7IH1cbiAgICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmJ1Y2tldDpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAuaGVhZCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDIwcHggNTBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6ICNlZWYxZmE7IH1cbiAgICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmhlYWQgLmljb24ge1xuICAgICAgZmxleDogMCAwIDcwcHg7IH1cbiAgICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAuaGVhZCAuaWNvbiBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmhlYWQgaDQge1xuICAgICAgZmxleDogMSAwIGNhbGMoMTAwJSAtIDkwcHgpO1xuICAgICAgbWFyZ2luOiAwIDAgMCAyMHB4O1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7IH1cbiAgLmxpbmtfZ3JvdXBzIC5saXN0c193cmFwIC5saW5rcyB7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXI6IDFweCBkYXNoZWQgIzAwMDA0MTtcbiAgICBib3JkZXItdG9wOiBub25lOyB9XG4gICAgLmxpbmtfZ3JvdXBzIC5saXN0c193cmFwIC5saW5rcyBsaSB7XG4gICAgICBib3JkZXItdG9wOiAxcHggZGFzaGVkICMwMDAwNDE7IH1cbiAgICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAubGlua3MgbGk6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgIGJvcmRlcjogbm9uZTsgfVxuICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAubGlua3MgYSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHBhZGRpbmc6IDI2cHggMzBweCAyNnB4IDUwcHg7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICBsaW5lLWhlaWdodDogMzBweDtcbiAgICAgIGNvbG9yOiAjMTQxOTIwOyB9XG4gICAgICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmxpbmtzIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzE0MTkyMDsgfVxuICAgICAgICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmxpbmtzIGE6aG92ZXIgLmFycm93IHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogMTZweDsgfVxuICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAubGlua3Mgc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLmxpbmtfZ3JvdXBzIC5saXN0c193cmFwIC5saW5rcyAuYXJyb3cge1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBtYXJnaW46IDEwcHggMCAwIDhweDtcbiAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICBib3JkZXItd2lkdGg6IDRweCAwIDRweCA3cHg7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZjZlNDI7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAubGlua3MgLmxpbmtfaWNvbiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cbiAgICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAubGlua3MgLmxpbmtfaWNvbiBpbWcge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAuYnVja2V0IHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAwIDAgNDBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmxpbmtfZ3JvdXBzIC5saXN0c193cmFwIHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gICAgLmxpbmtfZ3JvdXBzIC5saXN0c193cmFwIC5idWNrZXQge1xuICAgICAgd2lkdGg6IGNhbGMoMzMuMzMzMyUgLSAyMHB4KTtcbiAgICAgIG1hcmdpbjogMCAwIDAgMzBweDsgfVxuICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAuaGVhZCB7XG4gICAgICBwYWRkaW5nOiAyMHB4IDEwcHg7IH1cbiAgICAgIC5saW5rX2dyb3VwcyAubGlzdHNfd3JhcCAuaGVhZCAuaWNvbiB7XG4gICAgICAgIGZsZXg6IDAgMCAzMHB4OyB9XG4gICAgICAubGlua19ncm91cHMgLmxpc3RzX3dyYXAgLmhlYWQgaDQge1xuICAgICAgICBmbGV4OiAxIDAgY2FsYygxMDAlIC0gNDBweCk7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4OyB9XG4gICAgLmxpbmtfZ3JvdXBzIC5saXN0c193cmFwIC5saW5rcyBhIHtcbiAgICAgIHBhZGRpbmc6IDE2cHggMTBweDtcbiAgICAgIGZvbnQtc2l6ZTogMC44ZW07IH0gfVxuXG4uYWNjb3JkaW9uX3NpbXBsZSAudmVydF9hbGlnbiAuZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyB9XG5cbi5hY2NvcmRpb25fc2ltcGxlIC52ZXJ0X2FsaWduIC5pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLmFjY29yZGlvbl9zaW1wbGUgLmFjYyAuaW5uZXJfY29udGVudCB7XG4gIGZsZXgtZ3JvdzogMTtcbiAgcGFkZGluZzogMCA2MHB4OyB9XG5cbi5hY2NvcmRpb25fc2ltcGxlIC5jb250IC5pbm5lciB7XG4gIHBhZGRpbmc6IDAgNjBweDsgfVxuXG4uYWNjb3JkaW9uX3NpbXBsZSAuY29udCAuaW5uZXJfY29udGVudCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogNjBweDtcbiAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAuYWNjb3JkaW9uX3NpbXBsZSAuY29udCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAtNDBweDtcbiAgICB0b3A6IDEwMHB4O1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci13aWR0aDogMjRweCAwIDI0cHggNDBweDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZmZmZmY7XG4gICAgY29udGVudDogJyc7IH1cblxuLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG4gIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gPiBsaSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXItYm90dG9tOiAxcHggZGFzaGVkICMwMDAwNDE7IH1cbiAgICAuYWNjb3JkaW9uX3NpbXBsZSAuYWNjb3JkaW9uID4gbGk6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBjb2xvcjogIzAwMDA0MTsgfVxuICAgIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19oZWFkaW5nID4gYSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDM2cHggMTBweDtcbiAgICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAgIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19oZWFkaW5nID4gYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gICAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgICAgaGVpZ2h0OiA0NnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDQ2cHg7IH1cbiAgICAuYWNjb3JkaW9uX3NpbXBsZSAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZyAuYWNjX2ljb24ge1xuICAgICAgd2lkdGg6IDQ2cHg7XG4gICAgICBtYXJnaW46IDAgMTVweCAwIDA7IH1cbiAgICAgIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19oZWFkaW5nIC5hY2NfaWNvbiBpbWcge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgLnRvZ2dsZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMTBweDtcbiAgICAgIHRvcDogMzZweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAyMXB4O1xuICAgICAgaGVpZ2h0OiA0NnB4O1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vLi4vaW1hZ2VzL2FjY29yZGlvbi10b2dnbGUuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIGF1dG87XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19oZWFkaW5nLmFjdGl2ZSA+IGEge1xuICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAuYWNjb3JkaW9uX3NpbXBsZSAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZy5hY3RpdmUgLnRvZ2dsZSB7XG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyB9XG4gIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19jb250ZW50IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgLmlubmVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcGFkZGluZzogMCAwIDMwcHggNzJweDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAgIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19jb250ZW50IC5pbm5lciB1bCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAgICAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgLmlubmVyIHVsIGxpIHtcbiAgICAgICAgICBjb2xvcjogIzAwMDAwMDsgfVxuICAgICAgICAgIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19jb250ZW50IC5pbm5lciB1bCBsaTpiZWZvcmUge1xuICAgICAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgICAgIGhlaWdodDogNnB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4OyB9XG4gICAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgcCwgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgYmxvY2txdW90ZSwgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgY2l0ZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYWNjb3JkaW9uX3NpbXBsZSAudmVydF9hbGlnbiAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmFjY29yZGlvbl9zaW1wbGUgLmFjYyAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogMDsgfVxuICAuYWNjb3JkaW9uX3NpbXBsZSAuY29udCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNjBweDsgfVxuICAgIC5hY2NvcmRpb25fc2ltcGxlIC5jb250IC5pbm5lciB7XG4gICAgICBwYWRkaW5nOiAwOyB9XG4gICAgLmFjY29yZGlvbl9zaW1wbGUgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgICAgcGFkZGluZzogMzBweDsgfVxuICAgICAgLmFjY29yZGlvbl9zaW1wbGUgLmNvbnQgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgICAgICByaWdodDogYXV0bztcbiAgICAgICAgbGVmdDogMTAwcHg7XG4gICAgICAgIHRvcDogYXV0bztcbiAgICAgICAgYm90dG9tOiAtNDBweDtcbiAgICAgICAgYm9yZGVyLXdpZHRoOiA0MHB4IDI0cHggMCAyNHB4O1xuICAgICAgICBib3JkZXItY29sb3I6ICNmZmZmZmYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7IH1cbiAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgPiBhIHtcbiAgICBwYWRkaW5nOiAyMHB4IDEwcHg7IH1cbiAgLmFjY29yZGlvbl9zaW1wbGUgLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgLnRvZ2dsZSB7XG4gICAgdG9wOiAyMHB4OyB9XG4gIC5hY2NvcmRpb25fc2ltcGxlIC5hY2NvcmRpb24gLmFjY19jb250ZW50IC5pbm5lciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogMCAwIDAgNzJweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuYWNjb3JkaW9uX3NpbXBsZSAudmVydF9hbGlnbiAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmFjY29yZGlvbl9zaW1wbGUgLmFjYyAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogMDsgfVxuICAuYWNjb3JkaW9uX3NpbXBsZSAuY29udCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLmFjY29yZGlvbl9zaW1wbGUgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDQwcHg7IH1cbiAgICAuYWNjb3JkaW9uX3NpbXBsZSAuY29udCAuaW5uZXJfY29udGVudDphZnRlciB7XG4gICAgICByaWdodDogYXV0bztcbiAgICAgIGxlZnQ6IDEwMHB4O1xuICAgICAgdG9wOiBhdXRvO1xuICAgICAgYm90dG9tOiAtNDBweDtcbiAgICAgIGJvcmRlci13aWR0aDogNDBweCAyNHB4IDAgMjRweDtcbiAgICAgIGJvcmRlci1jb2xvcjogI2ZmZmZmZiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDsgfVxuICAuYWNjb3JkaW9uX3NpbXBsZSAuYWNjb3JkaW9uIHtcbiAgICBtYXJnaW46IDYwcHggMCAwICFpbXBvcnRhbnQ7IH0gfVxuXG4uYWNjb3JkaW9uX2NvbXBsZXggLmludHJvIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiAwIGF1dG8gODBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5hY2NvcmRpb25fY29tcGxleCAudmVydF9hbGlnbiAuZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmFjY29yZGlvbl9jb21wbGV4IC52ZXJ0X2FsaWduIC5pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4uYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfcmlnaHQgLmlubmVyX2NvbnRlbnQge1xuICBmbGV4LWdyb3c6IDE7XG4gIHBhZGRpbmc6IDAgNjBweDsgfVxuXG4uYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfcmlnaHQgdWwge1xuICBtYXJnaW4tdG9wOiAwOyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAuY29udF9yaWdodCB1bCBsaSB7XG4gICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfcmlnaHQgdWwgbGk6YmVmb3JlIHtcbiAgICAgIHdpZHRoOiA2cHg7XG4gICAgICBoZWlnaHQ6IDZweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDNweDsgfVxuXG4uYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfbGVmdCB7XG4gIHBhZGRpbmc6IDAgMCAwIDYwcHggIWltcG9ydGFudDsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfbGVmdCAuaW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGNsaXAtcGF0aDogcG9seWdvbig5MyUgMCwgOTMlIDEwMHB4LCAxMDAlIDEyMnB4LCA5MyUgMTQ0cHgsIDkzJSAxMDAlLCAwIDEwMCUsIDAgMCk7XG4gICAgYmFja2dyb3VuZDogI2ZmNmU0MjsgfVxuICAgIC5hY2NvcmRpb25fY29tcGxleCAuY29udF9sZWZ0IC5pbm5lcjpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMXB4O1xuICAgICAgdG9wOiAxcHg7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gMnB4KTtcbiAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gMnB4KTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICBjbGlwLXBhdGg6IHBvbHlnb24oOTMlIDAsIDkzJSAxMDBweCwgY2FsYygxMDAlIC0gMXB4KSAxMjFweCwgOTMlIDE0MnB4LCA5MyUgMTAwJSwgMCAxMDAlLCAwIDApO1xuICAgICAgY29udGVudDogJyc7IH1cbiAgLmFjY29yZGlvbl9jb21wbGV4IC5jb250X2xlZnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAxMDBweCAxMDBweCA3MHB4OyB9XG5cbi5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uX3dyYXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogNjBweCAwIDA7XG4gIHBhZGRpbmctdG9wOiAxMDBweDsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbl93cmFwOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0b3A6IDQwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgIHdpZHRoOiA0MCU7XG4gICAgaGVpZ2h0OiAxMHB4O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBkYXNoZWQgIzAwMDA0MTtcbiAgICBjb250ZW50OiAnJzsgfVxuXG4uYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nOiAwO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uID4gbGkge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IGRhc2hlZCAjMDAwMDQxOyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gPiBsaTpiZWZvcmUge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBjb2xvcjogIzAwMDA0MTsgfVxuICAgIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZyA+IGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDYwcHggMTAlIDYwcHggMTAwcHg7XG4gICAgICBjb2xvcjogIzAwMDAwMDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgPiBhOmhvdmVyIHtcbiAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAgIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZyA+IGE6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiA0MHB4O1xuICAgICAgICB0b3A6IDYwcHg7XG4gICAgICAgIHdpZHRoOiAzNnB4O1xuICAgICAgICBoZWlnaHQ6IDM2cHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi8uLi9pbWFnZXMvbGlzdC10eXBlLWNoZWNrbWFyay5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBjb250ZW50OiAnJzsgfVxuICAgICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19oZWFkaW5nID4gYSAuaW5uZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgc3BhbiB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19oZWFkaW5nIC5oIHtcbiAgICAgIGZsZXg6IDAgMCAzMCU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ1ZW07XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAzcHg7IH1cbiAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgLnNoIHtcbiAgICAgIGZsZXg6IDEgMCA3MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIGZvbnQtc2l6ZTogMC44MmVtO1xuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19oZWFkaW5nIC50b2dnbGUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICB0b3A6IDUwJTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHdpZHRoOiAyMXB4O1xuICAgICAgaGVpZ2h0OiA0NnB4O1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vLi4vaW1hZ2VzL2FjY29yZGlvbi10b2dnbGUuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIGF1dG87XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXI7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZy5hY3RpdmUgPiBhIHtcbiAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19oZWFkaW5nLmFjdGl2ZSAudG9nZ2xlIHtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSByb3RhdGUoMTgwZGVnKTsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgLmlubmVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcGFkZGluZzogMCAwIDMwcHggY2FsYygzMCUgKyA2MHB4KTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAgIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfY29udGVudCAuaW5uZXIgdWwge1xuICAgICAgICBtYXJnaW4tdG9wOiAwOyB9XG4gICAgICAgIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfY29udGVudCAuaW5uZXIgdWwgbGkge1xuICAgICAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAgICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19jb250ZW50IC5pbm5lciB1bCBsaTpiZWZvcmUge1xuICAgICAgICAgICAgd2lkdGg6IDZweDtcbiAgICAgICAgICAgIGhlaWdodDogNnB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogM3B4OyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19jb250ZW50IHAsIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfY29udGVudCBibG9ja3F1b3RlLCAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgY2l0ZSB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYWNjb3JkaW9uX2NvbXBsZXggLmludHJvIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLnZlcnRfYWxpZ24gLmdyaWQge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAudmVydF9hbGlnbiAuaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgLmFjY29yZGlvbl9jb21wbGV4IC5jb250X3JpZ2h0IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAuY29udF9sZWZ0IHtcbiAgICBtYXJnaW46IDAgMCA0MHB4O1xuICAgIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAgIC5hY2NvcmRpb25fY29tcGxleCAuY29udF9sZWZ0IC5pbm5lciB7XG4gICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTAwJSAwLCAxMDAlIGNhbGMoMTAwJSAtIDQwcHgpLCAxNDRweCBjYWxjKDEwMCUgLSA0MHB4KSwgMTIycHggMTAwJSwgMTAwcHggY2FsYygxMDAlIC0gNDBweCksIDAgY2FsYygxMDAlIC0gNDBweCksIDAgMCk7IH1cbiAgICAgIC5hY2NvcmRpb25fY29tcGxleCAuY29udF9sZWZ0IC5pbm5lcjpiZWZvcmUge1xuICAgICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTAwJSAwLCAxMDAlIGNhbGMoMTAwJSAtIDQwcHgpLCAxNDJweCBjYWxjKDEwMCUgLSA0MHB4KSwgMTIxcHggY2FsYygxMDAlIC0gMXB4KSwgMTAwcHggY2FsYygxMDAlIC0gNDBweCksIDAgY2FsYygxMDAlIC0gNDBweCksIDAgMCk7IH1cbiAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfbGVmdCAuaW5uZXJfY29udGVudCB7XG4gICAgICBwYWRkaW5nOiA2MHB4OyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uX3dyYXAge1xuICAgIHRvcDogMDtcbiAgICBtYXJnaW46IDA7IH1cbiAgICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbl93cmFwOmJlZm9yZSB7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgPiBhIHtcbiAgICBwYWRkaW5nOiAyMHB4IDUwcHggMjBweCA2MHB4OyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19oZWFkaW5nID4gYTpiZWZvcmUge1xuICAgICAgbGVmdDogMTBweDtcbiAgICAgIHRvcDogMjBweDsgfVxuICAgIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZyA+IGEgLmlubmVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAuYWNjb3JkaW9uIC5hY2NfaGVhZGluZyBzcGFuIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgLnNoIHtcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2NvbnRlbnQgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwIDAgMCA2MHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuYWNjb3JkaW9uX2NvbXBsZXggLmludHJvIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gIC5hY2NvcmRpb25fY29tcGxleCAuY29udF9yaWdodCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogMCAwIDAgNjBweDsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmNvbnRfbGVmdCB7XG4gICAgcGFkZGluZzogMCAwIDAgMCAhaW1wb3J0YW50OyB9XG4gICAgLmFjY29yZGlvbl9jb21wbGV4IC5jb250X2xlZnQgLmlubmVyX2NvbnRlbnQge1xuICAgICAgcGFkZGluZzogNzBweCA3MHB4IDQwcHg7IH1cbiAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb25fd3JhcDpiZWZvcmUge1xuICAgIHdpZHRoOiA2MCU7IH1cbiAgLmFjY29yZGlvbl9jb21wbGV4IC5hY2NvcmRpb24gLmFjY19oZWFkaW5nID4gYTpiZWZvcmUge1xuICAgIHRvcDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuICAuYWNjb3JkaW9uX2NvbXBsZXggLmFjY29yZGlvbiAuYWNjX2hlYWRpbmcgLnNoIHtcbiAgICBmbGV4OiAxIDAgY2FsYyg3MCUgLSA2MHB4KTsgfSB9XG5cbi5jb250cmliX2pvdXJuZXkgLmNvbnRfd3JhcCB7XG4gIHBhZGRpbmc6IDAgNjBweDsgfVxuICAuY29udHJpYl9qb3VybmV5IC5jb250X3dyYXAgPiAuYnRuIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG5cbi5jb250cmliX2pvdXJuZXkgLmludHJvIHtcbiAgd2lkdGg6IDcwJTtcbiAgbWFyZ2luOiAwIGF1dG8gODBweDsgfVxuXG4uY29udHJpYl9qb3VybmV5IC5jb250ZW50YnVja2V0cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgbWFyZ2luLWJvdHRvbTogNjBweDsgfVxuICAuY29udHJpYl9qb3VybmV5IC5jb250ZW50YnVja2V0cyAuYnVja2V0IHtcbiAgICB3aWR0aDogY2FsYygzMy4zMzMzJSAtIDQwcHgpO1xuICAgIG1hcmdpbjogMCAwIDAgNjBweDtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGZpbHRlcjogZHJvcC1zaGFkb3coMCAwIDAuNHJlbSByZ2JhKDAsIDAsIDAsIDAuMykpOyB9XG4gICAgLmNvbnRyaWJfam91cm5leSAuY29udGVudGJ1Y2tldHMgLmJ1Y2tldDpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLmNvbnRyaWJfam91cm5leSAuY29udGVudGJ1Y2tldHMgLmJ1Y2tldCAubm90Y2hlZCB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCUgMCUsIDQyJSAwLCA1MCUgMjRweCwgNTglIDAsIDEwMCUgMCwgMTAwJSAxMDAlLCAwIDEwMCUpO1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAuY29udHJpYl9qb3VybmV5IC5jb250ZW50YnVja2V0cyAuaW5uZXIge1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgYm9yZGVyLXRvcDogbm9uZTtcbiAgICBwYWRkaW5nOiA2MHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5jb250cmliX2pvdXJuZXkgLmNvbnRlbnRidWNrZXRzIC5pbm5lciAud3lzaXd5ZyB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuY29udHJpYl9qb3VybmV5IC5jb250ZW50YnVja2V0cyAuaW5uZXIgaW1nIHtcbiAgICAgIG1heC13aWR0aDogNTAlOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5jb250cmliX2pvdXJuZXkgLmNvbnRfd3JhcCB7XG4gICAgcGFkZGluZzogMDsgfVxuICAuY29udHJpYl9qb3VybmV5IC5pbnRybyB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLmNvbnRyaWJfam91cm5leSAuY29udGVudGJ1Y2tldHMge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgLmNvbnRyaWJfam91cm5leSAuY29udGVudGJ1Y2tldHMgLmJ1Y2tldCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbjogMCAwIDQwcHg7IH1cbiAgICAuY29udHJpYl9qb3VybmV5IC5jb250ZW50YnVja2V0cyAuaW5uZXIge1xuICAgICAgcGFkZGluZzogMzBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmNvbnRyaWJfam91cm5leSAuY29udF93cmFwIHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5jb250cmliX2pvdXJuZXkgLmludHJvIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gIC5jb250cmliX2pvdXJuZXkgLmNvbnRlbnRidWNrZXRzIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5jb250cmliX2pvdXJuZXkgLmNvbnRlbnRidWNrZXRzIC5idWNrZXQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG8gNjBweDsgfVxuICAgICAgLmNvbnRyaWJfam91cm5leSAuY29udGVudGJ1Y2tldHMgLmJ1Y2tldDpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cbiAgICAuY29udHJpYl9qb3VybmV5IC5jb250ZW50YnVja2V0cyAuaW5uZXIge1xuICAgICAgcGFkZGluZzogNDBweDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIElOTElORSBDVEFzIC0gTElTVElORyBQQUdFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5pbmxpbmVfY3RhIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLmlubGluZV9jdGEudGVzdCB7XG4gICAgcGFkZGluZzogNjBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZjJmM2Y4OyB9XG4gICAgLmlubGluZV9jdGEudGVzdCAubWV0YSAuaGVhZHNob3Qge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgaGVpZ2h0OiAxMTRweDtcbiAgICAgIHdpZHRoOiAxMTRweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwNDE7XG4gICAgICBtYXJnaW46IDAgYXV0byA0MHB4OyB9XG4gICAgICAuaW5saW5lX2N0YS50ZXN0IC5tZXRhIC5oZWFkc2hvdCBpbWcge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG4gICAgLmlubGluZV9jdGEudGVzdCAubWV0YSBwLCAuaW5saW5lX2N0YS50ZXN0IC5tZXRhIGJsb2NrcXVvdGUsIC5pbmxpbmVfY3RhLnRlc3QgLm1ldGEgY2l0ZSB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgICAuaW5saW5lX2N0YS50ZXN0IC5xdW90ZSAuaW5uZXIge1xuICAgICAgcGFkZGluZzogMCA0MHB4OyB9XG4gICAgLmlubGluZV9jdGEudGVzdCAucXVvdGUgaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIG1heC13aWR0aDogMzAwcHg7XG4gICAgICBtYXJnaW46IDAgMCA0MHB4OyB9XG4gICAgLmlubGluZV9jdGEudGVzdCAucXVvdGUgcCwgLmlubGluZV9jdGEudGVzdCAucXVvdGUgYmxvY2txdW90ZSwgLmlubGluZV9jdGEudGVzdCAucXVvdGUgY2l0ZSB7XG4gICAgICBtYXJnaW46IDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmlubGluZV9jdGEudGVzdCB7XG4gICAgcGFkZGluZzogMzBweDsgfVxuICAgIC5pbmxpbmVfY3RhLnRlc3QgLm1ldGEgLmhlYWRzaG90IHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cbiAgICAuaW5saW5lX2N0YS50ZXN0IC5xdW90ZSB7XG4gICAgICBtYXJnaW46IDAgMCA0MHB4OyB9XG4gICAgICAuaW5saW5lX2N0YS50ZXN0IC5xdW90ZSAuaW5uZXIge1xuICAgICAgICBwYWRkaW5nOiAwOyB9XG4gICAgICAuaW5saW5lX2N0YS50ZXN0IC5xdW90ZSBpbWcge1xuICAgICAgICBtYXJnaW46IDAgYXV0byA0MHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuaW5saW5lX2N0YS50ZXN0IHtcbiAgICBwYWRkaW5nOiA0MHB4OyB9XG4gICAgLmlubGluZV9jdGEudGVzdCAucXVvdGUgLmlubmVyIHtcbiAgICAgIHBhZGRpbmc6IDAgMCAwIDQwcHg7IH1cbiAgICAuaW5saW5lX2N0YS50ZXN0IC5xdW90ZSBpbWcge1xuICAgICAgd2lkdGg6IDcwJTsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIEFMTCBBTE0sIE9USEVSIEZJTFRFUlMgQ09MVU1OIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNhbG0tZmlsdGVycy1zc2ZpbHRlcixcbiNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIsXG4jYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyLFxuI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciB7XG4gIHBhZGRpbmctcmlnaHQ6IDQwcHg7IH1cbiAgI2FsbS1maWx0ZXJzLXNzZmlsdGVyIC5hbG0tZmlsdGVyLFxuICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyIC5hbG0tZmlsdGVyLFxuICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyIC5hbG0tZmlsdGVyLFxuICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIC5hbG0tZmlsdGVyIHtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG4gICAgI2FsbS1maWx0ZXJzLXNzZmlsdGVyIC5hbG0tZmlsdGVyIHVsLFxuICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwsXG4gICAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlciAuYWxtLWZpbHRlciB1bCxcbiAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIC5hbG0tZmlsdGVyIHVsIHtcbiAgICAgIG1hcmdpbjogMCAwIDMwcHg7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjNzA3MDcwOyB9XG4gICAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSxcbiAgICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSxcbiAgICAgICNhbG0tZmlsdGVycy15Ym5ld3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSxcbiAgICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTsgfVxuICAgICAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpmaXJzdC1vZi10eXBlLFxuICAgICAgICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGk6Zmlyc3Qtb2YtdHlwZSxcbiAgICAgICAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlciAuYWxtLWZpbHRlciB1bCA+IGxpOmZpcnN0LW9mLXR5cGUsXG4gICAgICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG4gICAgICAgICAgI2FsbS1maWx0ZXJzLXNzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGk6Zmlyc3Qtb2YtdHlwZSAuYWxtLWZpbHRlci0tbGluay5pbml0LFxuICAgICAgICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpmaXJzdC1vZi10eXBlIC5hbG0tZmlsdGVyLS1saW5rLmluaXQsXG4gICAgICAgICAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlciAuYWxtLWZpbHRlciB1bCA+IGxpOmZpcnN0LW9mLXR5cGUgLmFsbS1maWx0ZXItLWxpbmsuaW5pdCxcbiAgICAgICAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGk6Zmlyc3Qtb2YtdHlwZSAuYWxtLWZpbHRlci0tbGluay5pbml0IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjZlNDI7XG4gICAgICAgICAgICAvKiBUaGUgRmFsbGJhY2sgKi9cbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxMTAsIDY2LCAwLjE1KTsgfVxuICAgICAgICAgICNhbG0tZmlsdGVycy1zc2ZpbHRlciAuYWxtLWZpbHRlciB1bCA+IGxpOmZpcnN0LW9mLXR5cGUgLmFsbS1maWx0ZXItLWxpbmsub2ZmLFxuICAgICAgICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpmaXJzdC1vZi10eXBlIC5hbG0tZmlsdGVyLS1saW5rLm9mZixcbiAgICAgICAgICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGk6Zmlyc3Qtb2YtdHlwZSAuYWxtLWZpbHRlci0tbGluay5vZmYsXG4gICAgICAgICAgI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciAuYWxtLWZpbHRlciB1bCA+IGxpOmZpcnN0LW9mLXR5cGUgLmFsbS1maWx0ZXItLWxpbmsub2ZmIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjZlNDI7XG4gICAgICAgICAgICAvKiBUaGUgRmFsbGJhY2sgKi9cbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxMTAsIDY2LCAwKTsgfVxuICAgICAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpsYXN0LW9mLXR5cGUsXG4gICAgICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpsYXN0LW9mLXR5cGUsXG4gICAgICAgICNhbG0tZmlsdGVycy15Ym5ld3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpsYXN0LW9mLXR5cGUsXG4gICAgICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaTpsYXN0LW9mLXR5cGUge1xuICAgICAgICAgIG1hcmdpbjogMDsgfVxuICAgICAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSAuYWxtLWZpbHRlci0tbGluayxcbiAgICAgICAgI2FsbS1maWx0ZXJzLWV2ZW50c2ZpbHRlciAuYWxtLWZpbHRlciB1bCA+IGxpIC5hbG0tZmlsdGVyLS1saW5rLFxuICAgICAgICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGkgLmFsbS1maWx0ZXItLWxpbmssXG4gICAgICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSAuYWxtLWZpbHRlci0tbGluayB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcGFkZGluZzogMTBweCAxMHB4IDEwcHggMTVweDtcbiAgICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgICBjb2xvcjogIzAwMDAwMDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS4zZW07XG4gICAgICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNmU0MjtcbiAgICAgICAgICAvKiBUaGUgRmFsbGJhY2sgKi9cbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMTEwLCA2NiwgMCk7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cbiAgICAgICAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSAuYWxtLWZpbHRlci0tbGluazpob3ZlciwgI2FsbS1maWx0ZXJzLXNzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGkgLmFsbS1maWx0ZXItLWxpbmsuYWN0aXZlLFxuICAgICAgICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSAuYWxtLWZpbHRlci0tbGluazpob3ZlcixcbiAgICAgICAgICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGkgLmFsbS1maWx0ZXItLWxpbmsuYWN0aXZlLFxuICAgICAgICAgICNhbG0tZmlsdGVycy15Ym5ld3NmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSAuYWxtLWZpbHRlci0tbGluazpob3ZlcixcbiAgICAgICAgICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGkgLmFsbS1maWx0ZXItLWxpbmsuYWN0aXZlLFxuICAgICAgICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXIgdWwgPiBsaSAuYWxtLWZpbHRlci0tbGluazpob3ZlcixcbiAgICAgICAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIC5hbG0tZmlsdGVyIHVsID4gbGkgLmFsbS1maWx0ZXItLWxpbmsuYWN0aXZlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjZlNDI7XG4gICAgICAgICAgICAvKiBUaGUgRmFsbGJhY2sgKi9cbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAxMTAsIDY2LCAwLjE1KTsgfVxuICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzLFxuICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyIC5hbG0tZmlsdGVyLS10aXRsZSBoMyxcbiAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDMsXG4gICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAwIDAgMWVtO1xuICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgIGZvbnQtc2l6ZTogMS4yMmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7IH1cbiAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzOmFmdGVyLFxuICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzOmFmdGVyLFxuICAgICNhbG0tZmlsdGVycy15Ym5ld3NmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzOmFmdGVyLFxuICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzOmFmdGVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAyMHB4O1xuICAgICAgdG9wOiBjYWxjKDUwJSArIDJweCk7XG4gICAgICB3aWR0aDogMDtcbiAgICAgIGhlaWdodDogMDtcbiAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICBib3JkZXItd2lkdGg6IDZweCAwIDZweCAxMHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmY2ZTQyO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKDBkZWcpO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cbiAgICAjYWxtLWZpbHRlcnMtc3NmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzLm9wZW46YWZ0ZXIsXG4gICAgI2FsbS1maWx0ZXJzLWV2ZW50c2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDMub3BlbjphZnRlcixcbiAgICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyIC5hbG0tZmlsdGVyLS10aXRsZSBoMy5vcGVuOmFmdGVyLFxuICAgICNhbG0tZmlsdGVycy1yZXNvdXJjZXNmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzLm9wZW46YWZ0ZXIge1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSg5MGRlZyk7IH1cbiAgI2FsbS1maWx0ZXJzLXNzZmlsdGVyIC5hbG0tZmlsdGVycy1lZGl0LFxuICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyIC5hbG0tZmlsdGVycy1lZGl0LFxuICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyIC5hbG0tZmlsdGVycy1lZGl0LFxuICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIC5hbG0tZmlsdGVycy1lZGl0IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbiNhbG0tZmlsdGVycy1yZXNvdXJjZXNzZWFyY2hmaWx0ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDQycHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDA7XG4gIGJvcmRlci1yYWRpdXM6IDI0cHg7IH1cbiAgI2FsbS1maWx0ZXJzLXJlc291cmNlc3NlYXJjaGZpbHRlciAuYWxtLWZpbHRlciB7XG4gICAgd2lkdGg6IDI2MHB4OyB9XG4gICNhbG0tZmlsdGVycy1yZXNvdXJjZXNzZWFyY2hmaWx0ZXIgLmFsbS1maWx0ZXJzLS1jb250cm9scyB7XG4gICAgd2lkdGg6IDYwcHg7IH1cbiAgI2FsbS1maWx0ZXJzLXJlc291cmNlc3NlYXJjaGZpbHRlciAuYWxtLWZpbHRlci0tdGV4dGZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDQycHg7XG4gICAgbGluZS1oZWlnaHQ6IDQycHg7XG4gICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgcGFkZGluZzogMCAyMHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgICBiYWNrZ3JvdW5kOiBub25lOyB9XG4gICAgI2FsbS1maWx0ZXJzLXJlc291cmNlc3NlYXJjaGZpbHRlciAuYWxtLWZpbHRlci0tdGV4dGZpZWxkOmZvY3VzLCAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIC5hbG0tZmlsdGVyLS10ZXh0ZmllbGQ6dmFsaWQge1xuICAgICAgb3V0bGluZTogbm9uZTtcbiAgICAgIGJvcmRlcjogbm9uZTsgfVxuICAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIC5hbG0tZmlsdGVycy0tYnV0dG9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA0MnB4O1xuICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIC5hbG0tZmlsdGVycy0tYnV0dG9uOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZjZlNDI7IH1cbiAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIC5hbG0tZmlsdGVycy0tYnV0dG9uOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIC5hbG0tZmlsdGVycy0tYnV0dG9uOmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogMDtcbiAgICAgIGJvdHRvbTogMDtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKC4uLy4uL2ltYWdlcy9zZWFyY2gtbWFnLWdsYXNzLnN2Zykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDIwcHggYXV0bzsgfVxuICAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIC5hbG0tZmlsdGVycy1lZGl0IHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi5hbG0tYnRuLXdyYXAge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAjZXZlbnRzLWxpc3QgLmFsbS1idG4td3JhcCxcbiAgI3libmV3cy1saXN0IC5hbG0tYnRuLXdyYXAsXG4gIC5hbG0tYnRuLXdyYXAgI3Jlc291cmNlcy1saXN0IHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHZpc2liaWxpdHk6IHZpc2libGU7IH1cbiAgLmFsbS1idG4td3JhcCAuYnRuIHtcbiAgICBtYXJnaW46IDA7IH1cbiAgICAjeWJuZXdzLWxpc3QgLmFsbS1idG4td3JhcCAuYnRuLFxuICAgICNyZXNvdXJjZXMtbGlzdCAuYWxtLWJ0bi13cmFwIC5idG4ge1xuICAgICAgYmFja2dyb3VuZDogI2ZmNmU0MiAhaW1wb3J0YW50O1xuICAgICAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDsgfVxuICAgICAgI3libmV3cy1saXN0IC5hbG0tYnRuLXdyYXAgLmJ0bjpob3ZlcixcbiAgICAgICNyZXNvdXJjZXMtbGlzdCAuYWxtLWJ0bi13cmFwIC5idG46aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMmI1OWMzICFpbXBvcnRhbnQ7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgI2FsbS1maWx0ZXJzLXNzZmlsdGVyLFxuICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyLFxuICAjYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyLFxuICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICNhbG0tZmlsdGVycy1yZXNvdXJjZXNzZWFyY2hmaWx0ZXIgLmFsbS1maWx0ZXIge1xuICAgIGZsZXg6IDEgMCAyNjBweDtcbiAgICB3aWR0aDogMjYwcHg7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICNhbG0tZmlsdGVycy1zc2ZpbHRlcixcbiAgI2FsbS1maWx0ZXJzLWV2ZW50c2ZpbHRlcixcbiAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlcixcbiAgI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciB7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDsgfVxuICAgICNhbG0tZmlsdGVycy1zc2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDMsXG4gICAgI2FsbS1maWx0ZXJzLWV2ZW50c2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDMsXG4gICAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDMsXG4gICAgI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDMge1xuICAgICAgZm9udC1zaXplOiAxZW07IH1cbiAgICAgICNhbG0tZmlsdGVycy1zc2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDM6YWZ0ZXIsXG4gICAgICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyIC5hbG0tZmlsdGVyLS10aXRsZSBoMzphZnRlcixcbiAgICAgICNhbG0tZmlsdGVycy15Ym5ld3NmaWx0ZXIgLmFsbS1maWx0ZXItLXRpdGxlIGgzOmFmdGVyLFxuICAgICAgI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciAuYWxtLWZpbHRlci0tdGl0bGUgaDM6YWZ0ZXIge1xuICAgICAgICByaWdodDogMDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNVQ0NFU1MgU1RPUklFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNzdWNjZXNzX3N0b3JpZXMge1xuICB3aWR0aDogY2FsYygxMDAlIC0gODBweCk7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiA2MHB4IDA7IH1cbiAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLmFsbS1yZXZlYWwuYWxtLWZpbHRlcnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gICAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLmFsbS1yZXZlYWwuYWxtLWZpbHRlcnMgLmFqYXgtbG9hZC1tb3JlLXdyYXAge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLml0ZW0ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogY2FsYygzMy4zMzMzJSAtIDI3cHgpO1xuICAgIG1hcmdpbjogMCAwIDQwcHggNDBweDtcbiAgICB6LWluZGV4OiAxMDtcbiAgICBiYWNrZ3JvdW5kOiAjZjJmM2Y4OyB9XG4gICAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLml0ZW06bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtID4gYSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuaXRlbSA+IGE6aG92ZXIgLnRvcCBpbWcge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApIHNjYWxlKDEuMSk7IH1cbiAgICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtID4gYTpob3ZlciAucmVhZF9tb3JlIHtcbiAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuaXRlbSAudG9wIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDEyO1xuICAgICAgYm94LXNoYWRvdzogMCAwIDE1cHggcmdiYSgyMCwgMjUsIDMyLCAwLjE1KTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cbiAgICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtIC50b3AgLmlubmVyIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOiA0MHB4O1xuICAgICAgICBoZWlnaHQ6IDIzMHB4O1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gICAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuaXRlbSAudG9wIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7IH1cbiAgICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtIC50b3AgLnZlcnRpY2FsIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBib3R0b206IDVweDtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6IDVweDtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGZvbnQtc2l6ZTogMC43OGVtO1xuICAgICAgICBjb2xvcjogIzcwNzA3MDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMjVlbTtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLml0ZW0gLmJ0bSB7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgei1pbmRleDogMTE7IH1cbiAgICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtIC5idG0gLmlubmVyIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOiAzMHB4IDQwcHggODBweCAyMHB4OyB9XG4gICAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuaXRlbSAuYnRtIHAsICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtIC5idG0gYmxvY2txdW90ZSwgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLml0ZW0gLmJ0bSBjaXRlIHtcbiAgICAgICAgbWFyZ2luOiAwOyB9XG4gICAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLml0ZW0gLnJtX3dyYXAge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogMjBweDtcbiAgICAgIGJvdHRvbTogMjBweDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAjc3VjY2Vzc19zdG9yaWVzIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7IH1cbiAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAgICAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLmFsbS1yZXZlYWwuYWxtLWZpbHRlcnMgLmFqYXgtbG9hZC1tb3JlLXdyYXAge1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvIDQwcHggYXV0bzsgfVxuICAgICAgI3N1Y2Nlc3Nfc3RvcmllcyAjc3VjY2Vzcy1zdG9yaWVzLWxpc3QgLml0ZW06bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9XG4gICAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuaXRlbSAudG9wIC5pbm5lciB7XG4gICAgICAgIGhlaWdodDogMjYwcHg7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAyMHB4KTsgfVxuICAgICNzdWNjZXNzX3N0b3JpZXMgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IC5pdGVtOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDQwcHg7IH1cbiAgICAjc3VjY2Vzc19zdG9yaWVzICNzdWNjZXNzLXN0b3JpZXMtbGlzdCAuaXRlbTpudGgtb2YtdHlwZSgybiArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogWUIgRVZFTlRTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuI3liX2V2ZW50cyB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA4MHB4KTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDYwcHggMDsgfVxuICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyAuYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIHtcbiAgICBwYWRkaW5nOiA0OHB4IDI0cHg7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMTEyLCAxMTIsIDExMiwgMC4zNSk7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0gLmltZyB7XG4gICAgICBmbG9hdDogbGVmdDtcbiAgICAgIHdpZHRoOiAzMCU7IH1cbiAgICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0gLmltZyBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0gLmltZyBpbWcge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIC5jb250IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgd2lkdGg6IDcwJTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBwYWRkaW5nOiAwIDAgMCA1MHB4OyB9XG4gICAgICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIC5jb250LmZ1bGwge1xuICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIGg0IHtcbiAgICAgIG1hcmdpbjogMCAwIDAuMjVlbTtcbiAgICAgIGNvbG9yOiAjZmY2ZTQyO1xuICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICBsZXR0ZXItc3BhY2luZzogMDsgfVxuICAgICAgI3liX2V2ZW50cyAjZXZlbnRzLWxpc3QgbGkuaXRlbSBoNCBhIHtcbiAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAgICAgI3liX2V2ZW50cyAjZXZlbnRzLWxpc3QgbGkuaXRlbSBoNCBhOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzJiNTljMzsgfVxuICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0gcC5tZXRhLCAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIGJsb2NrcXVvdGUubWV0YSwgI3liX2V2ZW50cyAjZXZlbnRzLWxpc3QgbGkuaXRlbSBjaXRlLm1ldGEge1xuICAgICAgbWFyZ2luOiAwIDAgMzZweDsgfVxuICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0gcCAuZGF0ZSwgI3liX2V2ZW50cyAjZXZlbnRzLWxpc3QgbGkuaXRlbSBibG9ja3F1b3RlIC5kYXRlLCAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIGNpdGUgLmRhdGUge1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4ubXVfZ3JvdXBzX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46IDgwcHggMCAwO1xuICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyB9XG4gIC5tdV9ncm91cHNfbGlzdCA+IGxpIHtcbiAgICB3aWR0aDogMzMuMzMlO1xuICAgIG1hcmdpbjogMCAwIDUwcHg7XG4gICAgcGFkZGluZzogMCA1MHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAgIC5tdV9ncm91cHNfbGlzdCA+IGxpID4gYSB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgICAgLm11X2dyb3Vwc19saXN0ID4gbGkgPiBhOmhvdmVyIGltZyB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSkgcm90YXRlKDAuMDJkZWcpOyB9XG4gICAgICAubXVfZ3JvdXBzX2xpc3QgPiBsaSA+IGE6aG92ZXIgaDQge1xuICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgIC5tdV9ncm91cHNfbGlzdCA+IGxpIC5pbWcge1xuICAgICAgbWFyZ2luOiAwIDAgMTBweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAubXVfZ3JvdXBzX2xpc3QgPiBsaSBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGNlbnRlcjsgfVxuICAgIC5tdV9ncm91cHNfbGlzdCA+IGxpIGg0IHtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICN5Yl9ldmVudHMge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTsgfVxuICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0ge1xuICAgICAgbWF4LXdpZHRoOiA0ODBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gICAgICAjeWJfZXZlbnRzICNldmVudHMtbGlzdCBsaS5pdGVtIC5pbWcge1xuICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1hcmdpbjogMCAwIDQwcHg7IH1cbiAgICAgICN5Yl9ldmVudHMgI2V2ZW50cy1saXN0IGxpLml0ZW0gLmNvbnQge1xuICAgICAgICBmbG9hdDogbm9uZTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIHBhZGRpbmc6IDA7IH1cbiAgLm11X2dyb3Vwc19saXN0IHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5tdV9ncm91cHNfbGlzdCA+IGxpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWFyZ2luOiAwIDAgNDBweDtcbiAgICAgIHBhZGRpbmc6IDA7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5tdV9ncm91cHNfbGlzdCA+IGxpIHtcbiAgICBwYWRkaW5nOiAwIDMwcHg7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBZQiBORVdTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jeWJfbmV3cyB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA4MHB4KTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDYwcHggMDsgfVxuICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLmFsbS1yZXZlYWwuYWxtLWZpbHRlcnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XG4gICAgI3liX25ld3MgI3libmV3cy1saXN0IC5hbG0tcmV2ZWFsLmFsbS1maWx0ZXJzIC5hamF4LWxvYWQtbW9yZS13cmFwIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuaXRlbSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMjdweCk7XG4gICAgbWFyZ2luOiAwIDAgNDBweCA0MHB4O1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGJhY2tncm91bmQ6ICNmMmYzZjg7IH1cbiAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW06bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuaXRlbSA+IGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBjb2xvcjogIzAwMDAwMDsgfVxuICAgICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtID4gYTpob3ZlciAudG9wIGltZyB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCkgc2NhbGUoMS4xKTsgfVxuICAgICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtID4gYTpob3ZlciAudG9wLnByIC5pbm5lciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCkgc2NhbGUoMS4xKTsgfVxuICAgICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtID4gYTpob3ZlciAucmVhZF9tb3JlIHtcbiAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLnRvcCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAxMjtcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAxNXB4IHJnYmEoMjAsIDI1LCAzMiwgMC4xNSk7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtIC50b3AucHIgLmlubmVyIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzOyB9XG4gICAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLnRvcCAuaW5uZXIge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgICAgIGhlaWdodDogMjMwcHg7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAgICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuaXRlbSAudG9wIGltZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7IH1cbiAgICAgICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuaXRlbSAudG9wIC52ZXJ0aWNhbCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgYm90dG9tOiA1cHg7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiA1cHg7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmb250LXNpemU6IDAuNzhlbTtcbiAgICAgICAgY29sb3I6ICM3MDcwNzA7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1ZW07XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuaXRlbSAuYnRtIHtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICB6LWluZGV4OiAxMTsgfVxuICAgICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtIC5idG0gLmlubmVyIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBwYWRkaW5nOiAzMHB4IDQwcHggODBweCAyMHB4OyB9XG4gICAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLmJ0bSBwLCAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLmJ0bSBibG9ja3F1b3RlLCAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLmJ0bSBjaXRlIHtcbiAgICAgICAgbWFyZ2luOiAwOyB9XG4gICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtIC5ybV93cmFwIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDIwcHg7XG4gICAgICBib3R0b206IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgI3liX25ld3Mge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTsgfVxuICAgICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAgICAgI3liX25ld3MgI3libmV3cy1saXN0IC5hbG0tcmV2ZWFsLmFsbS1maWx0ZXJzIC5hamF4LWxvYWQtbW9yZS13cmFwIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgICAgbWFyZ2luOiAwIGF1dG8gNDBweCBhdXRvOyB9XG4gICAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW06bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvOyB9XG4gICAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLnRvcCAuaW5uZXIge1xuICAgICAgICBoZWlnaHQ6IDI2MHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSB7XG4gICAgd2lkdGg6IGNhbGMoNTAlIC0gMjBweCk7IH1cbiAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbTpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0MHB4OyB9XG4gICAgI3Jlc291cmNlcyAjcmVzb3VyY2VzLWxpc3QgLml0ZW06bnRoLW9mLXR5cGUoMm4gKyAxKSB7XG4gICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtIC50b3AgLmlubmVyIHtcbiAgICAgIGhlaWdodDogMTgwcHg7IH1cbiAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAyMHB4KTsgfVxuICAgICN5Yl9uZXdzICN5Ym5ld3MtbGlzdCAuaXRlbTpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiA0MHB4OyB9XG4gICAgI3liX25ld3MgI3libmV3cy1saXN0IC5pdGVtOm50aC1vZi10eXBlKDJuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAjeWJfbmV3cyAjeWJuZXdzLWxpc3QgLml0ZW0gLnRvcCAuaW5uZXIge1xuICAgICAgaGVpZ2h0OiAxODBweDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFJFU09VUkNFUyAoQ09OVEVOVCBMSUJSQVJZKSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNyZXNvdXJjZXNfc2VhcmNoIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDgwcHgpO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMzZweCAwOyB9XG4gICNyZXNvdXJjZXNfc2VhcmNoIC5yaWdodCB7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgICAjcmVzb3VyY2VzX3NlYXJjaCAucmlnaHQgLmlubmVyX2NvbnRlbnQge1xuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuICAjcmVzb3VyY2VzX3NlYXJjaCAuaW5uZXJfY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAjcmVzb3VyY2VzX3NlYXJjaCBoMyB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgIGZvbnQtc2l6ZTogMS42N2VtO1xuICAgIGxpbmUtaGVpZ2h0OiA0NHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7IH1cblxuI3Jlc291cmNlcyB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSA4MHB4KTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDYwcHggMDsgfVxuICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyAuYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMjdweCk7XG4gICAgbWFyZ2luOiAwIDAgNzBweCA0MHB4O1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cbiAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbTpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgI3Jlc291cmNlcyAjcmVzb3VyY2VzLWxpc3QgLml0ZW0gPiBhIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29sb3I6ICMwMDAwMDA7IH1cbiAgICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtID4gYTpob3ZlciAudG9wIC5pbm5lciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCkgc2NhbGUoMS4xKTsgfVxuICAgICAgI3Jlc291cmNlcyAjcmVzb3VyY2VzLWxpc3QgLml0ZW0gPiBhOmhvdmVyIC5yZWFkX21vcmUge1xuICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtIC50eXBlX2xhYmVsIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IC0zNHB4O1xuICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgaGVpZ2h0OiAzNHB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDM0cHg7XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbiAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTBweDtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cbiAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSAudG9wIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHotaW5kZXg6IDEyO1xuICAgICAgYm94LXNoYWRvdzogMCAwIDE1cHggcmdiYSgyMCwgMjUsIDMyLCAwLjE1KTtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSAudG9wIC5pbm5lciB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBoZWlnaHQ6IDIzMHB4O1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zczsgfVxuICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtIC5idG0ge1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIHotaW5kZXg6IDExOyB9XG4gICAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSAuYnRtIC5pbm5lciB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgcGFkZGluZzogMzBweCA0MHB4IDgwcHggMjBweDsgfVxuICAgICAgI3Jlc291cmNlcyAjcmVzb3VyY2VzLWxpc3QgLml0ZW0gLmJ0bSBwLCAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSAuYnRtIGJsb2NrcXVvdGUsICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtIC5idG0gY2l0ZSB7XG4gICAgICAgIG1hcmdpbjogMDsgfVxuICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtIC5ybV93cmFwIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDIwcHg7XG4gICAgICBib3R0b206IDIwcHg7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgI3Jlc291cmNlc19zZWFyY2gge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBwYWRkaW5nOiAyMHB4IDA7IH1cbiAgICAjcmVzb3VyY2VzX3NlYXJjaCAuaW5uZXJfY29udGVudCB7XG4gICAgICBkaXNwbGF5OiBibG9jazsgfVxuICAjcmVzb3VyY2VzIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XG4gICAgcGFkZGluZzogMDsgfVxuICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IHtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7IH1cbiAgICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvIDcwcHggYXV0bzsgfVxuICAgICAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbTpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgICAgICBtYXJnaW4tbGVmdDogYXV0bzsgfVxuICAgICAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSAudG9wIC5pbm5lciB7XG4gICAgICAgICAgaGVpZ2h0OiAyNjBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgI3Jlc291cmNlcyAjcmVzb3VyY2VzLWxpc3QgLml0ZW0ge1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDIwcHgpOyB9XG4gICAgI3Jlc291cmNlcyAjcmVzb3VyY2VzLWxpc3QgLml0ZW06bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICBtYXJnaW4tbGVmdDogNDBweDsgfVxuICAgICNyZXNvdXJjZXMgI3Jlc291cmNlcy1saXN0IC5pdGVtOm50aC1vZi10eXBlKDJuICsgMSkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgICAjcmVzb3VyY2VzICNyZXNvdXJjZXMtbGlzdCAuaXRlbSAudG9wIC5pbm5lciB7XG4gICAgICBoZWlnaHQ6IDE4MHB4OyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogQkxPRyBMSVNUSU5HIC8gREVUQUlMICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmFyY2hpdmUgLml0ZW0sXG4uc2VhcmNoIC5pdGVtIHtcbiAgcGFkZGluZzogMjhweCAwIDI4cHggNjBweDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGU5ZjM7IH1cblxuLmFyY2hpdmUgLnRodW1iLFxuLnNlYXJjaCAudGh1bWIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luOiAwIDAgMTBweDsgfVxuICAuYXJjaGl2ZSAudGh1bWI6aG92ZXIgLmltZyxcbiAgLnNlYXJjaCAudGh1bWI6aG92ZXIgLmltZyB7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KSByb3RhdGUoMC4wMmRlZyk7IH1cblxuLmFyY2hpdmUgLmltZyxcbi5zZWFyY2ggLmltZyB7XG4gIGhlaWdodDogMjAwcHg7XG4gIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICBiYWNrZ3JvdW5kOiAjMmI1OWMzO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuXG4uYXJjaGl2ZSAubWV0YV9jYXRzLFxuLnNlYXJjaCAubWV0YV9jYXRzIHtcbiAgbWFyZ2luOiAwO1xuICBsaW5lLWhlaWdodDogMS4zZW07IH1cblxuLmFyY2hpdmUgLmxpc3RfY29udCxcbi5zZWFyY2ggLmxpc3RfY29udCB7XG4gIHBhZGRpbmctbGVmdDogMzZweDsgfVxuICAuYXJjaGl2ZSAubGlzdF9jb250IGgzLFxuICAuc2VhcmNoIC5saXN0X2NvbnQgaDMge1xuICAgIG1hcmdpbjogMCAwIDFlbTtcbiAgICBmb250LXNpemU6IDEuMzNlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBsZXR0ZXItc3BhY2luZzogMDsgfVxuICAgIC5hcmNoaXZlIC5saXN0X2NvbnQgaDMgYSxcbiAgICAuc2VhcmNoIC5saXN0X2NvbnQgaDMgYSB7XG4gICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgLmFyY2hpdmUgLmxpc3RfY29udCBoMyBhOmhvdmVyLFxuICAgICAgLnNlYXJjaCAubGlzdF9jb250IGgzIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzAwMDAwMDsgfVxuICAuYXJjaGl2ZSAubGlzdF9jb250IHAsIC5hcmNoaXZlIC5saXN0X2NvbnQgYmxvY2txdW90ZSwgLmFyY2hpdmUgLmxpc3RfY29udCBjaXRlLFxuICAuc2VhcmNoIC5saXN0X2NvbnQgcCxcbiAgLnNlYXJjaCAubGlzdF9jb250IGJsb2NrcXVvdGUsXG4gIC5zZWFyY2ggLmxpc3RfY29udCBjaXRlIHtcbiAgICBtYXJnaW46IDAgMCAxZW07IH1cblxuLmFyY2hpdmUgLmJ5bGluZSxcbi5zZWFyY2ggLmJ5bGluZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDAgMWVtOyB9XG4gIC5hcmNoaXZlIC5ieWxpbmUgLmhlYWRzaG90LFxuICAuc2VhcmNoIC5ieWxpbmUgLmhlYWRzaG90IHtcbiAgICB3aWR0aDogNDZweDtcbiAgICBoZWlnaHQ6IDQ2cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDA0MTtcbiAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7IH1cbiAgLmFyY2hpdmUgLmJ5bGluZSBwLCAuYXJjaGl2ZSAuYnlsaW5lIGJsb2NrcXVvdGUsIC5hcmNoaXZlIC5ieWxpbmUgY2l0ZSxcbiAgLnNlYXJjaCAuYnlsaW5lIHAsXG4gIC5zZWFyY2ggLmJ5bGluZSBibG9ja3F1b3RlLFxuICAuc2VhcmNoIC5ieWxpbmUgY2l0ZSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjNlbTsgfVxuICAgIC5hcmNoaXZlIC5ieWxpbmUgcCBzcGFuLCAuYXJjaGl2ZSAuYnlsaW5lIGJsb2NrcXVvdGUgc3BhbiwgLmFyY2hpdmUgLmJ5bGluZSBjaXRlIHNwYW4sXG4gICAgLnNlYXJjaCAuYnlsaW5lIHAgc3BhbixcbiAgICAuc2VhcmNoIC5ieWxpbmUgYmxvY2txdW90ZSBzcGFuLFxuICAgIC5zZWFyY2ggLmJ5bGluZSBjaXRlIHNwYW4ge1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICAgIC5hcmNoaXZlIC5ieWxpbmUgcCBhLCAuYXJjaGl2ZSAuYnlsaW5lIGJsb2NrcXVvdGUgYSwgLmFyY2hpdmUgLmJ5bGluZSBjaXRlIGEsXG4gICAgLnNlYXJjaCAuYnlsaW5lIHAgYSxcbiAgICAuc2VhcmNoIC5ieWxpbmUgYmxvY2txdW90ZSBhLFxuICAgIC5zZWFyY2ggLmJ5bGluZSBjaXRlIGEge1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgIC5hcmNoaXZlIC5ieWxpbmUgcCBhOmhvdmVyLCAuYXJjaGl2ZSAuYnlsaW5lIGJsb2NrcXVvdGUgYTpob3ZlciwgLmFyY2hpdmUgLmJ5bGluZSBjaXRlIGE6aG92ZXIsXG4gICAgICAuc2VhcmNoIC5ieWxpbmUgcCBhOmhvdmVyLFxuICAgICAgLnNlYXJjaCAuYnlsaW5lIGJsb2NrcXVvdGUgYTpob3ZlcixcbiAgICAgIC5zZWFyY2ggLmJ5bGluZSBjaXRlIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuXG4vKiBTT0NJQUwgU0hBUklORyBCQVIgKi9cbiN5Yl9zb2NpYWxfYmFyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIG1hcmdpbjogMCAwIDMwcHg7XG4gIHBhZGRpbmc6IDMwcHggMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlOGU5ZjM7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDEwMDA7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzOyB9XG4gIC5hcmNoaXZlICN5Yl9zb2NpYWxfYmFyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJvcmRlcjogbm9uZTsgfVxuICAjeWJfc29jaWFsX2JhciBhIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDE2cHg7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICAgIG1hcmdpbjogMCAxMHB4IDAgMDtcbiAgICBiYWNrZ3JvdW5kOiAjNzA3MDcwO1xuICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG4gICAgI3liX3NvY2lhbF9iYXIgYTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmY2ZTQyOyB9XG4gICAgICAjeWJfc29jaWFsX2JhciBhOmhvdmVyIGltZyB7XG4gICAgICAgIG9wYWNpdHk6IDE7IH1cbiAgI3liX3NvY2lhbF9iYXIgLmFkZHRvYW55X2xpc3QgYSxcbiAgI3liX3NvY2lhbF9iYXIgLndpZGdldCAuYWRkdG9hbnlfbGlzdCBhIHtcbiAgICBwYWRkaW5nOiAwOyB9XG5cbi5zaW5nbGUtcG9zdCAucnA0d3AtcmVsYXRlZC1wb3N0cyB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLnNpbmdsZS1wb3N0ICNyZWxhdGVkIGg0IHtcbiAgbWFyZ2luOiAxZW0gMDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGxldHRlci1zcGFjaW5nOiAwOyB9XG5cbi5zaW5nbGUtcG9zdCAjcmVsYXRlZCAucnA0d3AtcmVsYXRlZC1wb3N0cyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5zaW5nbGUtcG9zdCAjcmVsYXRlZCAucnA0d3AtcG9zdHMtbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsgfVxuICAuc2luZ2xlLXBvc3QgI3JlbGF0ZWQgLnJwNHdwLXBvc3RzLWxpc3QgbGkge1xuICAgIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMTRweCk7XG4gICAgbWFyZ2luOiAwIDAgMCAyMHB4OyB9XG4gICAgLnNpbmdsZS1wb3N0ICNyZWxhdGVkIC5ycDR3cC1wb3N0cy1saXN0IGxpOmZpcnN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbi5zaW5nbGUtcG9zdCAjcmVsYXRlZCAudGh1bWIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWFyZ2luOiAwIDAgMTBweDsgfVxuICAuc2luZ2xlLXBvc3QgI3JlbGF0ZWQgLnRodW1iOmhvdmVyIC5pbWcge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSkgcm90YXRlKDAuMDJkZWcpOyB9XG5cbi5zaW5nbGUtcG9zdCAjcmVsYXRlZCAuaW1nIHtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgbWluLWhlaWdodDogMjAwcHg7XG4gIGJhY2tncm91bmQ6ICMyYjU5YzM7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciBjZW50ZXI7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG5cbi5zaW5nbGUtcG9zdCAjcmVsYXRlZCBoNSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuYXJjaGl2ZSAuaXRlbSxcbiAgLnNlYXJjaCAuaXRlbSB7XG4gICAgbWF4LXdpZHRoOiA0ODBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAyOHB4OyB9XG4gIC5hcmNoaXZlIC5pbWcsXG4gIC5zZWFyY2ggLmltZyB7XG4gICAgaGVpZ2h0OiAyNjBweDtcbiAgICBtaW4taGVpZ2h0OiAyNjBweDsgfVxuICAuYXJjaGl2ZSAubWV0YV9jYXRzIGEsXG4gIC5zZWFyY2ggLm1ldGFfY2F0cyBhIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luOiAwIDAgMzBweDsgfVxuICAuYXJjaGl2ZSAubGlzdF9jb250LFxuICAuc2VhcmNoIC5saXN0X2NvbnQge1xuICAgIHBhZGRpbmctbGVmdDogMDsgfVxuICAjeWJfc29jaWFsX2JhciB7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5zaW5nbGUtcG9zdCAjcmVsYXRlZCAucnA0d3AtcG9zdHMtbGlzdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luLWJvdHRvbTogODBweCAhaW1wb3J0YW50OyB9XG4gICAgLnNpbmdsZS1wb3N0ICNyZWxhdGVkIC5ycDR3cC1wb3N0cy1saXN0IGxpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA0ODBweDtcbiAgICAgIG1hcmdpbjogMCBhdXRvIDQwcHg7IH1cbiAgICAgIC5zaW5nbGUtcG9zdCAjcmVsYXRlZCAucnA0d3AtcG9zdHMtbGlzdCBsaTpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG8gNDBweDsgfVxuICAuc2luZ2xlLXBvc3QgI3JlbGF0ZWQgLmltZyB7XG4gICAgaGVpZ2h0OiAyNjBweDtcbiAgICBtaW4taGVpZ2h0OiAyNjBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLmFyY2hpdmUgLml0ZW0sXG4gIC5zZWFyY2ggLml0ZW0ge1xuICAgIHBhZGRpbmc6IDI4cHggMDsgfVxuICAuYXJjaGl2ZSAuaW1nLFxuICAuc2VhcmNoIC5pbWcge1xuICAgIGhlaWdodDogMTIwcHg7XG4gICAgbWluLWhlaWdodDogMTIwcHg7IH1cbiAgLmFyY2hpdmUgLmxpc3RfY29udCxcbiAgLnNlYXJjaCAubGlzdF9jb250IHtcbiAgICBwYWRkaW5nLWxlZnQ6IDI2cHg7IH1cbiAgLnNpbmdsZS1wb3N0ICNyZWxhdGVkIC5pbWcge1xuICAgIGhlaWdodDogMTIwcHg7XG4gICAgbWluLWhlaWdodDogMTIwcHg7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBDT05UQUNUIFBBR0UgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jY29udGFjdF9wYW5lbHMgI2NvbnRhY3RfdGFicyAudGFic193cmFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbiNjb250YWN0X3BhbmVscyAjY29udGFjdF90YWJzIC50YWIge1xuICBmbGV4OiAwIDAgMzAlO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzcwNzA3MDsgfVxuXG4jY29udGFjdF9wYW5lbHMgI2NvbnRhY3RfdGFicyBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY29sb3I6ICMwMDAwNDE7XG4gIGZvbnQtc2l6ZTogMS41NmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMi40ZW07XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgb3V0bGluZTogbm9uZTtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cbiAgI2NvbnRhY3RfcGFuZWxzICNjb250YWN0X3RhYnMgYTphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAtNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNHB4O1xuICAgIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gICAgY29udGVudDogJyc7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cbiAgI2NvbnRhY3RfcGFuZWxzICNjb250YWN0X3RhYnMgYS5hY3RpdmU6YWZ0ZXIge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNHB4KTsgfVxuICAjY29udGFjdF9wYW5lbHMgI2NvbnRhY3RfdGFicyBhOmhvdmVyIHtcbiAgICBjb2xvcjogI2ZmNmU0MjsgfVxuXG4jY29udGFjdF9wYW5lbHMgLmNvbnRhY3RfY29udCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIG9wYWNpdHk6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOyB9XG4gICNjb250YWN0X3BhbmVscyAuY29udGFjdF9jb250LmFjdGl2ZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgb3BhY2l0eTogMTtcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XG4gICNjb250YWN0X3BhbmVscyAuY29udGFjdF9jb250I1NhbGVzQyAuZm9ybV9lbWJlZCBoMiB7XG4gICAgZm9udC1zaXplOiAyLjMzZW07XG4gICAgY29sb3I6ICMwMDAwNDE7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbWFyZ2luOiAwIDAgNDBweDtcbiAgICBsZXR0ZXItc3BhY2luZzogMDsgfVxuXG4jY29udGFjdF9wYW5lbHMgLnNhbGVzX2xvY3Mge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAjY29udGFjdF9wYW5lbHMgLnNhbGVzX2xvY3MgLmJ1Y2tldCB7XG4gICAgZmxleDogMCAwIDMzLjMzMyU7XG4gICAgYWxpZ24tc2VsZjogc3RyZXRjaDsgfVxuICAjY29udGFjdF9wYW5lbHMgLnNhbGVzX2xvY3MgaDQge1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4OyB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNVQ0NFU1MgU1RPUlkgQkxPQ0tTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zc19hYWcgLnZlcnRfYWxpZ24gLmdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuXG4uc3NfYWFnIC5kYXRhIHtcbiAgcGFkZGluZzogMCAwIDAgNDBweDtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjNzA3MDcwOyB9XG4gIC5zc19hYWcgLmRhdGEgLnJlc3VsdHMgdWwge1xuICAgIG1hcmdpbjogNTBweCAwIDAgMDtcbiAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyB9XG4gIC5zc19hYWcgLmRhdGEgLnJlc3VsdHMgLmxnX3RleHQge1xuICAgIG1hcmdpbjogMDtcbiAgICBjb2xvcjogI2ZmNmU0MjtcbiAgICBmb250LXNpemU6IDIuMjJlbTtcbiAgICBsaW5lLWhlaWdodDogMS4yZW07IH1cbiAgLnNzX2FhZyAuZGF0YSAucmVzdWx0cyAuZGVzYyB7XG4gICAgbWFyZ2luOiAwIDAgMS43NWVtOyB9XG4gIC5zc19hYWcgLmRhdGEgLnJlc3VsdHMuZm91ciAubGdfdGV4dCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNGVtO1xuICAgIGZvbnQtc2l6ZTogMS42N2VtOyB9XG4gIC5zc19hYWcgLmRhdGEgLnJlc3VsdHMuZm91ciAuZGVzYyB7XG4gICAgbWFyZ2luOiAwIDAgMS4yNWVtOyB9XG4gIC5zc19hYWcgLmRhdGEgLm5vdGVzIC5sYWJlbCB7XG4gICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgLnNzX2FhZyAuZGF0YSAubm90ZXMgdWwge1xuICAgIG1hcmdpbi10b3A6IDUwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsgfVxuICAgIC5zc19hYWcgLmRhdGEgLm5vdGVzIHVsIGxpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIG1hcmdpbjogMCAwIDYwcHg7XG4gICAgICBmb250LXNpemU6IDEuMjJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjNlbTtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgICAuc3NfYWFnIC5kYXRhIC5ub3RlcyB1bCBsaTphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgbGVmdDogMDtcbiAgICAgICAgdG9wOiBjYWxjKDEwMCUgKyAzMHB4KTtcbiAgICAgICAgd2lkdGg6IDM1cHg7XG4gICAgICAgIGhlaWdodDogMnB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxO1xuICAgICAgICBjb250ZW50OiAnJzsgfVxuXG4uc3NfYWFnIC5pY29uX2J1Y2tldHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0OyB9XG4gIC5zc19hYWcgLmljb25fYnVja2V0cyAuYnVja2V0IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIHdpZHRoOiAzMy4zMyU7XG4gICAgcGFkZGluZzogMCA4MHB4IDAgMDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gIC5zc19hYWcgLmljb25fYnVja2V0cyAuaWNvbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDkycHg7XG4gICAgbWFyZ2luOiAwIDAgMzBweDsgfVxuICAgIC5zc19hYWcgLmljb25fYnVja2V0cyAuaWNvbiBpbWcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuc3NfYWFnIGgyLmxpbmVkX2xlZnQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgIC5zc19hYWcgaDIubGluZWRfbGVmdDphZnRlciB7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7IH1cbiAgLnNzX2FhZyAudmVydF9hbGlnbiAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNzX2FhZyAuZGF0YSB7XG4gICAgcGFkZGluZzogNDBweCAwIDAgMDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM3MDcwNzA7IH1cbiAgICAuc3NfYWFnIC5kYXRhIGg0IHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLnNzX2FhZyAuZGF0YSBoNC5saW5lZF9sZWZ0IHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAgIC5zc19hYWcgLmRhdGEgaDQubGluZWRfbGVmdDphZnRlciB7XG4gICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICAgIC5zc19hYWcgLmRhdGEgLnJlc3VsdHMgdWwge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgLnNzX2FhZyAuZGF0YSAubm90ZXMgdWwge1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgICAuc3NfYWFnIC5kYXRhIC5ub3RlcyB1bCBsaTphZnRlciB7XG4gICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG4gIC5zc19hYWcgLmljb25fYnVja2V0cyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIDAgNDBweDsgfVxuICAgIC5zc19hYWcgLmljb25fYnVja2V0cyAuYnVja2V0IHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBtYXJnaW46IDAgYXV0bztcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAuc3NfYWFnIC5pY29uX2J1Y2tldHMgLmljb24ge1xuICAgICAgbWFyZ2luOiAwIGF1dG8gMzBweDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNzX2FhZyAuZGF0YSAucmVzdWx0cyAubGdfdGV4dCB7XG4gICAgZm9udC1zaXplOiAyZW07IH1cbiAgLnNzX2FhZyAuaWNvbl9idWNrZXRzIC5idWNrZXQge1xuICAgIHBhZGRpbmc6IDAgMzBweCAwIDA7IH0gfVxuXG4uc3NfYml6X3RlY2hfcmVzdWx0cyAubGlzdF9jb2wgaDIubGluZWQge1xuICBtYXJnaW46IDAgMCAzZW07IH1cblxuLnNzX2Jpel90ZWNoX3Jlc3VsdHMgLmxpc3RfY29sIGgyLmxpbmVkX2xlZnQge1xuICBtYXJnaW46IDAgMCAyLjVlbTsgfVxuXG4uc3NfYml6X3RlY2hfcmVzdWx0cyAubGlzdF9jb2wgLmlubmVyX2NvbnRlbnQge1xuICBwYWRkaW5nOiAwIDUwcHggMCAwOyB9XG5cbi5zc19iaXpfdGVjaF9yZXN1bHRzIC5yZXN1bHRzIHtcbiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsgfVxuICAuc3NfYml6X3RlY2hfcmVzdWx0cyAucmVzdWx0cy5zcGxpdCB7XG4gICAgY29sdW1uLWNvdW50OiAyO1xuICAgIGNvbHVtbi1nYXA6IDYwcHg7IH1cbiAgICAuc3NfYml6X3RlY2hfcmVzdWx0cyAucmVzdWx0cy5zcGxpdCA+IGxpIHtcbiAgICAgIGJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgLnNzX2Jpel90ZWNoX3Jlc3VsdHMgLnJlc3VsdHMgPiBsaSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMCAwIDYwcHg7XG4gICAgcGFkZGluZzogMCAwIDAgNjBweDsgfVxuICAgIC5zc19iaXpfdGVjaF9yZXN1bHRzIC5yZXN1bHRzID4gbGk6YmVmb3JlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IDA7XG4gICAgICB3aWR0aDogMzZweDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi8uLi9pbWFnZXMvbGlzdC10eXBlLWNoZWNrbWFyay5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgIGNvbnRlbnQ6ICcnOyB9XG4gICAgLnNzX2Jpel90ZWNoX3Jlc3VsdHMgLnJlc3VsdHMgPiBsaTpsYXN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luOiAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5zc19iaXpfdGVjaF9yZXN1bHRzIC5saXN0X2NvbCB7XG4gICAgbWFyZ2luOiAwIDAgNjBweDsgfVxuICAgIC5zc19iaXpfdGVjaF9yZXN1bHRzIC5saXN0X2NvbCBoMi5saW5lZF9sZWZ0IHtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLnNzX2Jpel90ZWNoX3Jlc3VsdHMgLmxpc3RfY29sIGgyLmxpbmVkX2xlZnQ6YWZ0ZXIge1xuICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICAgIC5zc19iaXpfdGVjaF9yZXN1bHRzIC5saXN0X2NvbCAuaW5uZXJfY29udGVudCB7XG4gICAgICBwYWRkaW5nOiAwIDQwcHg7IH1cbiAgLnNzX2Jpel90ZWNoX3Jlc3VsdHMgLnJlc3VsdHMuc3BsaXQge1xuICAgIGNvbHVtbi1jb3VudDogYXV0bztcbiAgICBjb2x1bW4tZ2FwOiBub3JtYWw7IH0gfVxuXG4uc3NfY2hhbGxlbmdlcyAudmVydF9hbGlnbiAuaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuLnNzX2NoYWxsZW5nZXMgLmdyaWQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLnNzX2NoYWxsZW5nZXMgLmljb24gLmlubmVyX2NvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMDsgfVxuXG4uc3NfY2hhbGxlbmdlcyAuaWNvbiBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMjAwcHg7XG4gIG1hcmdpbjogMDsgfVxuXG4uc3NfY2hhbGxlbmdlcyAuY29udCB7XG4gIG9yZGVyOiAtMTsgfVxuICAuc3NfY2hhbGxlbmdlcyAuY29udCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDAgMTAwcHggMCA2MHB4OyB9XG4gIC5zc19jaGFsbGVuZ2VzIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogODBweDtcbiAgICBiYWNrZ3JvdW5kOiAjZWVmMWZhOyB9XG4gICAgLnNzX2NoYWxsZW5nZXMgLmNvbnQgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IC00MHB4O1xuICAgICAgdG9wOiBjYWxjKDUwJSAtIDI0cHgpO1xuICAgICAgd2lkdGg6IDA7XG4gICAgICBoZWlnaHQ6IDA7XG4gICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgYm9yZGVyLXdpZHRoOiAyNHB4IDAgMjRweCA0MHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZWVmMWZhO1xuICAgICAgY29udGVudDogJyc7IH1cbiAgICAuc3NfY2hhbGxlbmdlcyAuY29udCAuaW5uZXJfY29udGVudCB1bCB7XG4gICAgICBtYXJnaW4tbGVmdDogMCAhaW1wb3J0YW50OyB9XG4gICAgICAuc3NfY2hhbGxlbmdlcyAuY29udCAuaW5uZXJfY29udGVudCB1bCBsaSB7XG4gICAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgICBtYXJnaW46IDAgMCAxLjVlbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuc3NfY2hhbGxlbmdlcyAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNzX2NoYWxsZW5nZXMgLmljb24ge1xuICAgIG1hcmdpbjogMCAwIDgwcHg7IH1cbiAgICAuc3NfY2hhbGxlbmdlcyAuaWNvbiBpbWcge1xuICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgLnNzX2NoYWxsZW5nZXMgLmNvbnQgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5zc19jaGFsbGVuZ2VzIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiA0MHB4OyB9XG4gICAgLnNzX2NoYWxsZW5nZXMgLmNvbnQgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IGNhbGMoNTAlIC0gMjRweCk7XG4gICAgICB0b3A6IC00MHB4O1xuICAgICAgYm9yZGVyLXdpZHRoOiAwIDI0cHggNDBweCAyNHB4O1xuICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZWVmMWZhIHRyYW5zcGFyZW50OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuc3NfY2hhbGxlbmdlcyAuY29udCAuaW5uZXIge1xuICAgIHBhZGRpbmc6IDAgMTAwcHggMCAwOyB9XG4gIC5zc19jaGFsbGVuZ2VzIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiA0MHB4OyB9IH1cblxuLnNzX2NvbnRfcm93cyB7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLnNzX2NvbnRfcm93cyAudmVydF9hbGlnbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogODBweDsgfVxuICAgIC5zc19jb250X3Jvd3MgLnZlcnRfYWxpZ24ubGFzdCB7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgICAuc3NfY29udF9yb3dzIC52ZXJ0X2FsaWduIC5pbm5lciB7XG4gICAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgLnNzX2NvbnRfcm93cyAudmVydF9hbGlnbiAuaW5uZXJfY29udGVudCB7XG4gICAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG4gICAgLnNzX2NvbnRfcm93cyAudmVydF9hbGlnbjpsYXN0LW9mLXR5cGUge1xuICAgICAgbWFyZ2luLXRvcDogMDsgfVxuICAuc3NfY29udF9yb3dzIC5ncmlkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5zc19jb250X3Jvd3MgLmltZyB7XG4gICAgb3JkZXI6IC0xOyB9XG4gICAgLnNzX2NvbnRfcm93cyAuaW1nLnB1c2gtcmlnaHQge1xuICAgICAgb3JkZXI6IDE7IH1cbiAgICAuc3NfY29udF9yb3dzIC5pbWcgLnZpZF9jb250IHtcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICMwMDAwMDA7IH1cbiAgICAuc3NfY29udF9yb3dzIC5pbWcgLmltZ19jb250IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWluLWhlaWdodDogMzAwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDsgfVxuICAuc3NfY29udF9yb3dzIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwIDAgMCA4MHB4OyB9XG4gICAgLnNzX2NvbnRfcm93cyAuY29udCAuaW5uZXJfY29udGVudC5mbGlwIHtcbiAgICAgIHBhZGRpbmc6IDAgODBweCAwIDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNzX2NvbnRfcm93cyAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNzX2NvbnRfcm93cyAudmVydF9hbGlnbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAuc3NfY29udF9yb3dzIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gICAgLnNzX2NvbnRfcm93cyAuY29udCAuaW5uZXJfY29udGVudC5mbGlwIHtcbiAgICAgIHBhZGRpbmc6IDA7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5zc19jb250X3Jvd3MgLmltZyAuaW1nX2NvbnQge1xuICAgIG1pbi1oZWlnaHQ6IDIwMHB4OyB9XG4gIC5zc19jb250X3Jvd3MgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDAgMCAwIDUwcHg7IH1cbiAgICAuc3NfY29udF9yb3dzIC5jb250IC5pbm5lcl9jb250ZW50LmZsaXAge1xuICAgICAgcGFkZGluZzogMCA1MHB4IDAgMDsgfSB9XG5cbi5zc19kYl9yZXFzIC52ZXJ0X2FsaWduIC5pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTsgfVxuXG4uc3NfZGJfcmVxcyAuZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uc3NfZGJfcmVxcyAuaWNvbiAuaW5uZXJfY29udGVudCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwOyB9XG5cbi5zc19kYl9yZXFzIC5pY29uIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAyMDBweDtcbiAgbWFyZ2luOiAwOyB9XG5cbi5zc19kYl9yZXFzIC5jb250IC5pbm5lciB7XG4gIHBhZGRpbmc6IDAgNjBweCAwIDEwMHB4OyB9XG5cbi5zc19kYl9yZXFzIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiA4MHB4IDEwMHB4O1xuICBiYWNrZ3JvdW5kOiAjZWVmMWZhOyB9XG4gIC5zc19kYl9yZXFzIC5jb250IC5pbm5lcl9jb250ZW50OmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogLTQwcHg7XG4gICAgdG9wOiBjYWxjKDUwJSAtIDI0cHgpO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci13aWR0aDogMjRweCA0MHB4IDI0cHggMDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICNlZWYxZmEgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gICAgY29udGVudDogJyc7IH1cbiAgLnNzX2RiX3JlcXMgLmNvbnQgLmlubmVyX2NvbnRlbnQgdWwge1xuICAgIG1hcmdpbi1sZWZ0OiAwOyB9XG4gICAgLnNzX2RiX3JlcXMgLmNvbnQgLmlubmVyX2NvbnRlbnQgdWwgbGkge1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICBtYXJnaW46IDAgMCAwLjI1ZW07IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNzX2RiX3JlcXMgLmdyaWQge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5zc19kYl9yZXFzIC5pY29uIHtcbiAgICBtYXJnaW46IDAgMCA4MHB4OyB9XG4gICAgLnNzX2RiX3JlcXMgLmljb24gaW1nIHtcbiAgICAgIG1hcmdpbjogMCBhdXRvOyB9XG4gIC5zc19kYl9yZXFzIC5jb250IC5pbm5lciB7XG4gICAgcGFkZGluZzogMDsgfVxuICAuc3NfZGJfcmVxcyAuY29udCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogNDBweCA2MHB4OyB9XG4gICAgLnNzX2RiX3JlcXMgLmNvbnQgLmlubmVyX2NvbnRlbnQ6YWZ0ZXIge1xuICAgICAgbGVmdDogY2FsYyg1MCUgLSAyNHB4KTtcbiAgICAgIHRvcDogLTQwcHg7XG4gICAgICBib3JkZXItd2lkdGg6IDAgMjRweCA0MHB4IDI0cHg7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNlZWYxZmEgdHJhbnNwYXJlbnQ7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5zc19kYl9yZXFzIC5ncmlkIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5zc19kYl9yZXFzIC5jb250IC5pbm5lciB7XG4gICAgcGFkZGluZzogMCAwIDAgMTAwcHg7IH1cbiAgLnNzX2RiX3JlcXMgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICAgIHBhZGRpbmc6IDQwcHggNjBweDsgfSB9XG5cbi5zc19pbWdfY29udCBoMyB7XG4gIG1hcmdpbjogMCAwIDFlbTtcbiAgZm9udC1zaXplOiAyLjMzZW07XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsZXR0ZXItc3BhY2luZzogMHB4O1xuICBjb2xvcjogIzAwMDA0MTsgfVxuICAuc3NfaW1nX2NvbnQgaDMgYSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgY29sb3I6ICMyYjU5YzM7IH1cbiAgICAuc3NfaW1nX2NvbnQgaDMgYTpob3ZlciB7XG4gICAgICBjb2xvcjogI2ZmNmU0MjtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG4uc3NfaW1nX2NvbnQgLnZlcnRfYWxpZ24gLmlubmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi5zc19pbWdfY29udCAuZ3JpZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuXG4uc3NfaW1nX2NvbnQgLmNvbnQgLmlubmVyX2NvbnRlbnQge1xuICBwYWRkaW5nOiAwIDYwcHg7IH1cblxuLnNzX2ltZ19jb250IC5pbWcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnNzX2ltZ19jb250IC5pbWcgLmlubmVyX2NvbnRlbnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB6LWluZGV4OiAxNTsgfVxuICAuc3NfaW1nX2NvbnQgLmltZyBpbWcge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5zc19pbWdfY29udCAuZ3JpZCB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNzX2ltZ19jb250IC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5zc19pbWdfY29udCAuaW1nIHtcbiAgICBtYXJnaW46IDAgMCA0MHB4OyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuc3NfaW1nX2NvbnQgaDMge1xuICAgIGZvbnQtc2l6ZTogMmVtOyB9XG4gIC5zc19pbWdfY29udCAuY29udCAuaW5uZXJfY29udGVudCB7XG4gICAgcGFkZGluZzogMCAwIDAgNDBweDsgfSB9XG5cbi5zc190ZWNoX3Jlc3VsdHMgLm1ldHJpY19idWNrZXRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiB0b3A7IH1cbiAgLnNzX3RlY2hfcmVzdWx0cyAubWV0cmljX2J1Y2tldHMgLmJ1Y2tldCB7XG4gICAgd2lkdGg6IDI1JTtcbiAgICBwYWRkaW5nOiAwIDEwcHg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgLnNzX3RlY2hfcmVzdWx0cyAubWV0cmljX2J1Y2tldHMgLmxnX3RleHQge1xuICAgIG1hcmdpbjogMCAwIDAuNWVtO1xuICAgIGZvbnQtc2l6ZTogMy4zM2VtO1xuICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGZvbnQtdmFyaWFudDogc21hbGwtY2FwczsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuc3NfdGVjaF9yZXN1bHRzIC5tZXRyaWNfYnVja2V0cyB7XG4gICAgZmxleC13cmFwOiB3cmFwOyB9XG4gICAgLnNzX3RlY2hfcmVzdWx0cyAubWV0cmljX2J1Y2tldHMgLmJ1Y2tldCB7XG4gICAgICBmbGV4OiAwIDAgNTAlO1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICBhbGlnbi1zZWxmOiBzdHJldGNoOyB9IH1cblxuLnNzX3Rlc3Qge1xuICBwYWRkaW5nOiAxMDBweCAwOyB9XG4gIC5wYWdlIC5zc190ZXN0IHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTYwcHg7IH1cbiAgLnNzX3Rlc3QgLnRlc3RfYmcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAxMDBweCA0NHB4IDE2MHB4O1xuICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6ICNlZWYxZmE7IH1cbiAgICAuc3NfdGVzdCAudGVzdF9iZzpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiAwO1xuICAgICAgd2lkdGg6IDEwOHB4O1xuICAgICAgaGVpZ2h0OiAxMDhweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA2MHB4O1xuICAgICAgYm9yZGVyOiAxcHggZGFzaGVkICMwMDAwNDE7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICBmb250LXNpemU6IDYuNjdlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNTRweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGNvbnRlbnQ6ICfigJwnOyB9XG4gICAgLnNzX3Rlc3QgLnRlc3RfYmcgLnF1b3RlIHtcbiAgICAgIHBhZGRpbmc6IDAgNTZweDsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLnF1b3RlLnNpbmdsZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLnF1b3RlIHAsIC5zc190ZXN0IC50ZXN0X2JnIC5xdW90ZSBibG9ja3F1b3RlLCAuc3NfdGVzdCAudGVzdF9iZyAucXVvdGUgY2l0ZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC1zaXplOiAxLjMzZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljOyB9XG4gICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGVzX2NvbnQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gODhweCk7IH1cbiAgICAuc3NfdGVzdCAudGVzdF9iZyAuY2l0ZSB7XG4gICAgICBwYWRkaW5nOiAwIDU2cHg7IH1cbiAgICAgIC5zc190ZXN0IC50ZXN0X2JnIC5jaXRlIC5pbm5lciB7XG4gICAgICAgIHBhZGRpbmc6IDMwcHggNzBweDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmhlYWRzaG90IHtcbiAgICAgICAgZmxleDogMCAwIDExMnB4O1xuICAgICAgICB3aWR0aDogMTEycHg7XG4gICAgICAgIGhlaWdodDogMTEycHg7XG4gICAgICAgIG1hcmdpbjogMCAzMHB4IDAgMDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNjBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgI2ZmNmU0MjtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgcCwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgYmxvY2txdW90ZSwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgY2l0ZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuICAgICAgICAuc3NfdGVzdCAudGVzdF9iZyAuY2l0ZSBwIHNwYW4sIC5zc190ZXN0IC50ZXN0X2JnIC5jaXRlIGJsb2NrcXVvdGUgc3BhbiwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgY2l0ZSBzcGFuIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICBmb250LXdlaWdodDogNDAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5zc190ZXN0IHtcbiAgICBwYWRkaW5nOiA0MHB4IDAgMTAwcHg7IH1cbiAgICAucGFnZSAuc3NfdGVzdCB7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHg7IH1cbiAgICAuc3NfdGVzdCAudGVzdF9iZyB7XG4gICAgICBwYWRkaW5nOiA3MHB4IDIwcHggMTYwcHg7IH1cbiAgICAgIC5zc190ZXN0IC50ZXN0X2JnIC5xdW90ZSB7XG4gICAgICAgIHBhZGRpbmc6IDAgMjBweDsgfVxuICAgICAgICAuc3NfdGVzdCAudGVzdF9iZyAucXVvdGU6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGVzX2NvbnQge1xuICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmlubmVyIHtcbiAgICAgICAgbWF4LXdpZHRoOiAyNjBweDtcbiAgICAgICAgbWFyZ2luOiAxMHB4IGF1dG87XG4gICAgICAgIHBhZGRpbmc6IDIwcHggMjBweDsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmhlYWRzaG90IHtcbiAgICAgICAgZmxleDogMCAwIDYwcHg7XG4gICAgICAgIHdpZHRoOiA2MHB4O1xuICAgICAgICBoZWlnaHQ6IDYwcHg7XG4gICAgICAgIG1hcmdpbjogMCAyMHB4IDAgMDsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgcCwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgYmxvY2txdW90ZSwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgY2l0ZSB7XG4gICAgICAgIGZsZXg6IDAgMCBjYWxjKDEwMCUgLSA4NHB4KTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNzX3Rlc3QgLnRlc3RfYmcge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAxMDBweCA0NHB4IDE2MHB4O1xuICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6ICNlZWYxZmE7IH1cbiAgICAuc3NfdGVzdCAudGVzdF9iZzpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiAwO1xuICAgICAgd2lkdGg6IDEwOHB4O1xuICAgICAgaGVpZ2h0OiAxMDhweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA2MHB4O1xuICAgICAgYm9yZGVyOiAxcHggZGFzaGVkICMwMDAwNDE7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICBmb250LXNpemU6IDYuNjdlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNTRweDtcbiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGNvbnRlbnQ6ICfigJwnOyB9XG4gICAgLnNzX3Rlc3QgLnRlc3RfYmcgLnF1b3RlIHtcbiAgICAgIHBhZGRpbmc6IDAgMjBweDsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLnF1b3RlLnNpbmdsZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLnF1b3RlIHAsIC5zc190ZXN0IC50ZXN0X2JnIC5xdW90ZSBibG9ja3F1b3RlLCAuc3NfdGVzdCAudGVzdF9iZyAucXVvdGUgY2l0ZSB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC1zaXplOiAxLjMzZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjVlbTtcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljOyB9XG4gICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGVzX2NvbnQge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gODhweCk7IH1cbiAgICAuc3NfdGVzdCAudGVzdF9iZyAuY2l0ZSB7XG4gICAgICBwYWRkaW5nOiAwIDIwcHg7IH1cbiAgICAgIC5zc190ZXN0IC50ZXN0X2JnIC5jaXRlIC5pbm5lciB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgLmhlYWRzaG90IHtcbiAgICAgICAgZmxleDogMCAwIDgwcHg7XG4gICAgICAgIHdpZHRoOiA4MHB4O1xuICAgICAgICBoZWlnaHQ6IDgwcHg7XG4gICAgICAgIG1hcmdpbjogMCAyMHB4IDAgMDsgfVxuICAgICAgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgcCwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgYmxvY2txdW90ZSwgLnNzX3Rlc3QgLnRlc3RfYmcgLmNpdGUgY2l0ZSB7XG4gICAgICAgIGZsZXg6IDEgMCBjYWxjKDEwMCUgLSAxMDBweCk7IH0gfVxuXG4uc3NfeWJfc29sdXRpb24gaDIubGluZWQge1xuICBtYXJnaW4tYm90dG9tOiAyZW07IH1cblxuLnNzX3liX3NvbHV0aW9uIC5pY29uX2J1Y2tldHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH1cbiAgLnNzX3liX3NvbHV0aW9uIC5pY29uX2J1Y2tldHMgLmJ1Y2tldCB7XG4gICAgZmxleDogMSAwIDI1JTtcbiAgICBhbGlnbi1zZWxmOiBzdHJldGNoO1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuc3NfeWJfc29sdXRpb24gLmljb25fYnVja2V0cyAuaWNvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTEycHg7XG4gICAgaGVpZ2h0OiAxMTJweDtcbiAgICBtYXJnaW46IDAgYXV0byAyMHB4OyB9XG4gICAgLnNzX3liX3NvbHV0aW9uIC5pY29uX2J1Y2tldHMgLmljb24gaW1nIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgd2lkdGg6IDEwMCU7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNzX3liX3NvbHV0aW9uIC5pY29uX2J1Y2tldHMge1xuICAgIGZsZXgtd3JhcDogd3JhcDsgfVxuICAgIC5zc195Yl9zb2x1dGlvbiAuaWNvbl9idWNrZXRzIC5idWNrZXQge1xuICAgICAgZmxleDogMCAwIDUwJTtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgYWxpZ24tc2VsZjogc3RyZXRjaDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFRZUE9HUkFQSFkgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiogOjotbW96LXNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNmZjZlNDI7IH1cblxuKiA6OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICNmZjZlNDI7IH1cblxuaHIge1xuICBoZWlnaHQ6IDFweDtcbiAgYmFja2dyb3VuZDogIzJiNTljMztcbiAgYm9yZGVyOiBub25lO1xuICBtYXJnaW46IDI0cHggMDsgfVxuXG5hIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgY29sb3I6ICMyYjU5YzM7IH1cbiAgYTpob3ZlciB7XG4gICAgY29sb3I6ICNmZjZlNDI7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMCAwIDAuNWVtIDA7XG4gIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMS4yNWVtO1xuICBjb2xvcjogIzJiNTljMzsgfVxuICBoMS5sYXJnZV9tYXJnaW4sIGgyLmxhcmdlX21hcmdpbiwgaDMubGFyZ2VfbWFyZ2luLCBoNC5sYXJnZV9tYXJnaW4sIGg1LmxhcmdlX21hcmdpbiwgaDYubGFyZ2VfbWFyZ2luIHtcbiAgICBtYXJnaW46IDAgMCAxZW0gMDsgfVxuXG5oMSB7XG4gIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDMuODllbTtcbiAgLyogNzBweCAqL1xuICBsaW5lLWhlaWdodDogMS4wNWVtOyB9XG4gIGgxLm1pZGxvbmcge1xuICAgIGZvbnQtc2l6ZTogMi43OGVtO1xuICAgIC8qIDUwcHggKi8gfVxuICBoMS5sb25nIHtcbiAgICBmb250LXNpemU6IDIuMjJlbTtcbiAgICAvKiA0MHB4ICovIH1cbiAgI2hlcm9fc3MgaDEge1xuICAgIGZvbnQtc2l6ZTogMS43OGVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjM3NWVtOyB9XG5cbmgyIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIC8qIDM2cHggKi9cbiAgbGluZS1oZWlnaHQ6IDEuMjVlbTtcbiAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjZmY2ZTQyO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogNHB4OyB9XG4gIGgyLmxhcmdlX3B1cnBsZSB7XG4gICAgZm9udC1zaXplOiAyLjMzZW07XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgY29sb3I6ICMwMDAwNDE7IH1cbiAgaDIubGluZWQsIGgyLmxpbmVkX2xlZnQge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tYm90dG9tOiAxLjVlbTsgfVxuICAgIGgyLmxpbmVkOmFmdGVyLCBoMi5saW5lZF9sZWZ0OmFmdGVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDUwJTtcbiAgICAgIHRvcDogY2FsYygxMDAlICsgMjBweCk7XG4gICAgICB3aWR0aDogNzVweDtcbiAgICAgIGhlaWdodDogMnB4O1xuICAgICAgYmFja2dyb3VuZDogIzAwMDA0MTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpOyB9XG4gICAgaDIubGluZWQuYWx0LCBoMi5saW5lZF9sZWZ0LmFsdCB7XG4gICAgICBtYXJnaW46IDAgMCAwLjc1ZW07XG4gICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwO1xuICAgICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgICAgIGgyLmxpbmVkLmFsdDphZnRlciwgaDIubGluZWRfbGVmdC5hbHQ6YWZ0ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG4gIGgyLmxpbmVkX2xlZnQ6YWZ0ZXIge1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNmb3JtOiBub25lOyB9XG4gIGgyLnRpdGxlX2Nhc2Uge1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDAgIWltcG9ydGFudDsgfVxuXG5oMyB7XG4gIGNvbG9yOiAjZmY2ZTQyO1xuICBmb250LXNpemU6IDEuNWVtO1xuICAvKiAyN3B4ICovXG4gIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS4yNWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogM3B4OyB9XG4gIGgzLmxpbmVkLCBoMy5saW5lZF9sZWZ0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41ZW07IH1cbiAgICBoMy5saW5lZDphZnRlciwgaDMubGluZWRfbGVmdDphZnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IGNhbGMoMTAwJSArIDIwcHgpO1xuICAgICAgd2lkdGg6IDc1cHg7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICBoMy5saW5lZF9sZWZ0OmFmdGVyIHtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICBoMy50aXRsZV9jYXNlIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xuICAgIGxldHRlci1zcGFjaW5nOiAwICFpbXBvcnRhbnQ7IH1cblxuaDQge1xuICBtYXJnaW46IDAgMCAwLjVlbTtcbiAgY29sb3I6ICMwMDAwMDA7XG4gIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuMjJlbTtcbiAgLyogMjJweCAqL1xuICBsaW5lLWhlaWdodDogMS40NWVtO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBsZXR0ZXItc3BhY2luZzogM3B4OyB9XG4gIGg0LmxpbmVkLCBoNC5saW5lZF9sZWZ0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41ZW07IH1cbiAgICBoNC5saW5lZDphZnRlciwgaDQubGluZWRfbGVmdDphZnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB0b3A6IGNhbGMoMTAwJSArIDEycHgpO1xuICAgICAgd2lkdGg6IDc1cHg7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsgfVxuICBoNC5saW5lZF9sZWZ0OmFmdGVyIHtcbiAgICBsZWZ0OiAwO1xuICAgIHRyYW5zZm9ybTogbm9uZTsgfVxuICBoNC5jaGVja21hcmsge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAwIDAgMCA2MHB4OyB9XG4gICAgaDQuY2hlY2ttYXJrOmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiAtNXB4O1xuICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICBoZWlnaHQ6IDM2cHg7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoLi4vLi4vaW1hZ2VzL2xpc3QtdHlwZS1jaGVja21hcmsuc3ZnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBjb250ZW50OiAnJzsgfVxuICBoNC50aXRsZV9jYXNlIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50O1xuICAgIGxldHRlci1zcGFjaW5nOiAwICFpbXBvcnRhbnQ7IH1cblxuaDUge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAxOHB4ICovXG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuaDYge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAxOHB4ICovIH1cblxuc3VwLCBzdWIge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiAtMC41NWVtO1xuICBsaW5lLWhlaWdodDogMDtcbiAgZm9udC1zaXplOiA2MCU7IH1cblxuc3ViIHtcbiAgdG9wOiAwLjU1ZW07IH1cblxuLnd5c2l3eWcgcCwgLnd5c2l3eWcgYmxvY2txdW90ZSwgLnd5c2l3eWcgY2l0ZSB7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG4gIC53eXNpd3lnIHAgLmJ0biwgLnd5c2l3eWcgYmxvY2txdW90ZSAuYnRuLCAud3lzaXd5ZyBjaXRlIC5idG4ge1xuICAgIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsgfVxuXG4ud3lzaXd5ZyB1bCxcbi53eXNpd3lnIG9sIHtcbiAgbWFyZ2luOiAxZW0gMCAxLjU2ZW0gMjBweDtcbiAgbGlzdC1zdHlsZTogZGVjaW1hbDsgfVxuXG4ud3lzaXd5ZyB1bCB7XG4gIHBhZGRpbmc6IDA7XG4gIGxpc3Qtc3R5bGU6IGRpc2M7IH1cblxuLnd5c2l3eWcgdWwgbGksXG4ud3lzaXd5ZyBvbCBsaSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbiAgbWFyZ2luLWJvdHRvbTogMC4yNWVtO1xuICBmb250LXNpemU6IDFlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDVlbTtcbiAgY29sb3I6ICM3MDcwNzA7IH1cblxuLnd5c2l3eWcgb2wgbGkge1xuICBsaXN0LXN0eWxlOiBkZWNpbWFsOyB9XG5cbi53eXNpd3lnIHVsIGxpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG4gIC53eXNpd3lnIHVsIGxpOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IC0yMHB4O1xuICAgIHRvcDogMC41ZW07XG4gICAgd2lkdGg6IDhweDtcbiAgICBoZWlnaHQ6IDhweDtcbiAgICBjb250ZW50OiAnJztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgYmFja2dyb3VuZDogIzJiNTljMzsgfVxuXG4ud3lzaXd5ZyBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGNvbG9yOiAjMmI1OWMzOyB9XG4gIC53eXNpd3lnIGE6aG92ZXIge1xuICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gIC53eXNpd3lnIGEuYnRuOmhvdmVyIHtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuXG4ud3lzaXd5ZyAuYnRuIGE6aG92ZXIge1xuICBjb2xvcjogI2ZmZmZmZjsgfVxuXG4ud3lzaXd5ZyBwOmxhc3Qtb2YtdHlwZSBzcGFuLmludHJvLCAud3lzaXd5ZyBibG9ja3F1b3RlOmxhc3Qtb2YtdHlwZSBzcGFuLmludHJvLCAud3lzaXd5ZyBjaXRlOmxhc3Qtb2YtdHlwZSBzcGFuLmludHJvIHtcbiAgbWFyZ2luOiAwOyB9XG5cbi53eXNpd3lnLnBsYXN0IHA6bGFzdC1vZi10eXBlLCAud3lzaXd5Zy5wbGFzdCBibG9ja3F1b3RlOmxhc3Qtb2YtdHlwZSwgLnd5c2l3eWcucGxhc3QgY2l0ZTpsYXN0LW9mLXR5cGUge1xuICBtYXJnaW46IDA7IH1cblxuLnd5c2l3eWcucGxhc3QgcDpmaXJzdC1vZi10eXBlLCAud3lzaXd5Zy5wbGFzdCBibG9ja3F1b3RlOmZpcnN0LW9mLXR5cGUsIC53eXNpd3lnLnBsYXN0IGNpdGU6Zmlyc3Qtb2YtdHlwZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNTZlbTsgfVxuXG4ud3lzaXd5Zy5wbGFzdCBwOm9ubHktb2YtdHlwZSwgLnd5c2l3eWcucGxhc3QgYmxvY2txdW90ZTpvbmx5LW9mLXR5cGUsIC53eXNpd3lnLnBsYXN0IGNpdGU6b25seS1vZi10eXBlIHtcbiAgbWFyZ2luOiAwOyB9XG5cbi5zaW5nbGUtcG9zdCAjY29udGVudCB1bCxcbi5zaW5nbGUtcG9zdCAjY29udGVudCBvbCB7XG4gIG1hcmdpbjogMWVtIDAgMS41NmVtIDIwcHg7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7IH1cblxuLnNpbmdsZS1wb3N0ICNjb250ZW50IHVsIHtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogZGlzYzsgfVxuXG4uc2luZ2xlLXBvc3QgI2NvbnRlbnQgdWwgbGksXG4uc2luZ2xlLXBvc3QgI2NvbnRlbnQgb2wgbGkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG4gIG1hcmdpbi1ib3R0b206IDAuMjVlbTtcbiAgZm9udC1zaXplOiAxZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQ1ZW07XG4gIGNvbG9yOiAjMDAwMDAwOyB9XG5cbi5zaW5nbGUtcG9zdCAjY29udGVudCBvbCBsaSB7XG4gIGxpc3Qtc3R5bGU6IGRlY2ltYWw7IH1cblxuLnNpbmdsZS1wb3N0ICNjb250ZW50IHVsIGxpIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5zaW5nbGUtcG9zdCAjY29udGVudCB1bCBsaTpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cblxucCwgYmxvY2txdW90ZSwgY2l0ZSxcbnAuY2l0ZSB7XG4gIG1hcmdpbi1ib3R0b206IDEuNTZlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTZlbTsgfVxuICBwIHN0cm9uZywgYmxvY2txdW90ZSBzdHJvbmcsIGNpdGUgc3Ryb25nLFxuICBwLmNpdGUgc3Ryb25nLCBwIGIsIGJsb2NrcXVvdGUgYiwgY2l0ZSBiLFxuICBwLmNpdGUgYiB7XG4gICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7IH1cbiAgcC5mb290bm90ZSwgYmxvY2txdW90ZS5mb290bm90ZSwgY2l0ZS5mb290bm90ZSB7XG4gICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuc3Ryb25nLCBiIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG5pLCBlbSB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5ibG9ja3F1b3RlIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmb250LXNpemU6IDEuNGVtO1xuICBsaW5lLWhlaWdodDogMS41ZW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luOiAwIDAgMmVtO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiAjMDAwMDAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIGJsb2NrcXVvdGUgcCwgYmxvY2txdW90ZSBibG9ja3F1b3RlLCBibG9ja3F1b3RlIGNpdGUsIGJsb2NrcXVvdGVcbiAgcC5jaXRlIHtcbiAgICBtYXJnaW46IDA7IH1cbiAgLnd5c2l3eWcgYmxvY2txdW90ZSB7XG4gICAgbWFyZ2luOiAwIDAgMmVtIDA7XG4gICAgcGFkZGluZzogMDsgfVxuXG5jaXRlLFxuYmxvY2txdW90ZS5jaXRlLFxuY2l0ZS5jaXRlLFxucC5jaXRlIHtcbiAgZm9udC1zaXplOiAxLjRlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNWVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDEuNTZlbTtcbiAgY29sb3I6ICMwMDAwMDA7IH1cbiAgLnd5c2l3eWcgY2l0ZSxcbiAgLnd5c2l3eWcgYmxvY2txdW90ZS5jaXRlLFxuICAud3lzaXd5ZyBjaXRlLmNpdGUsXG4gIC53eXNpd3lnXG4gIHAuY2l0ZSB7XG4gICAgbWFyZ2luOiAwOyB9XG4gIGNpdGUgc3BhbiwgYmxvY2txdW90ZS5jaXRlIHNwYW4sIGNpdGUuY2l0ZSBzcGFuLFxuICBwLmNpdGUgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5pbWcge1xuICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOyB9XG4gIC53eXNpd3lnIGltZyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogYXV0bzsgfVxuXG4uc2NyZWVuLXJlYWRlci10ZXh0IHtcbiAgY2xpcDogcmVjdCgxcHgsIDFweCwgMXB4LCAxcHgpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMTBweDtcbiAgbGVmdDogMTBweDtcbiAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC44OWVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBjb2xvcjogIzJiNTljMztcbiAgei1pbmRleDogMTAwMDA7XG4gIG9wYWNpdHk6IDA7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC4yczsgfVxuXG4uc2l0ZS1uYXZpZ2F0aW9uIC5zY3JlZW4tcmVhZGVyLXRleHQge1xuICBsZWZ0OiBhdXRvO1xuICByaWdodDogMTBweDsgfVxuXG4uc2NyZWVuLXJlYWRlci10ZXh0OmZvY3VzIHtcbiAgY2xpcDogYXV0bztcbiAgb3BhY2l0eTogMTsgfVxuXG4vKioqKiBTUEVDSUFMIE5FU1RFRCBOVU1CRVJFRCBMSVNUUywgQSBMQSBTVVBQT1JUIFNFUlZJQ0VTIEFHUkVFTUVOVCAqKioqKioqKioqKioqKioqKiovXG4ud3lzaXd5ZyAudGFiX2luZGVudF93cmFwIHtcbiAgcGFkZGluZy1sZWZ0OiAzNnB4OyB9XG5cbi53eXNpd3lnIC5zcGVjaWFsX29sIGxpIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLnd5c2l3eWcgLnNwZWNpYWxfb2wgPiBsaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY291bnRlci1pbmNyZW1lbnQ6IGl0ZW07IH1cbiAgLnd5c2l3eWcgLnNwZWNpYWxfb2wgPiBsaTpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwMCU7XG4gICAgY29udGVudDogY291bnRlcnMoaXRlbSwgXCIuXCIpIFwiLiBcIjsgfVxuICAud3lzaXd5ZyAuc3BlY2lhbF9vbCA+IGxpOmZpcnN0LWNoaWxkIHtcbiAgICBjb3VudGVyLXJlc2V0OiBpdGVtOyB9XG5cbm9sIGxpIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyogaGlkZSBvcmlnaW5hbCBsaXN0IGNvdW50ZXIgKi9cbm9sID4gbGk6Zmlyc3QtY2hpbGQge1xuICBjb3VudGVyLXJlc2V0OiBpdGVtOyB9XG5cbi8qIHJlc2V0IGNvdW50ZXIgKi9cbm9sID4gbGkge1xuICBjb3VudGVyLWluY3JlbWVudDogaXRlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbi8qIGluY3JlbWVudCBjb3VudGVyICovXG5vbCA+IGxpOmJlZm9yZSB7XG4gIGNvbnRlbnQ6IGNvdW50ZXJzKGl0ZW0sIFwiLlwiKSBcIi4gXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luLXJpZ2h0OiAxMDAlO1xuICByaWdodDogMTBweDsgfVxuXG4vKiBwcmludCBjb3VudGVyICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICBoMiBiciwgaDMgYnIsIGg0IGJyLCBoNSBiciwgaDYgYnIge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogMi40NGVtO1xuICAgIC8qIDQ0cHggKi8gfVxuICAgIGgxLm1pZGxvbmcge1xuICAgICAgZm9udC1zaXplOiAxLjc1ZW07IH1cbiAgICBoMS5sb25nIHtcbiAgICAgIGZvbnQtc2l6ZTogMS40ZW07IH1cbiAgaDIge1xuICAgIGZvbnQtc2l6ZTogMi4yMmVtO1xuICAgIC8qIDQwcHggKi8gfVxuICBoMyB7XG4gICAgZm9udC1zaXplOiAxLjU2ZW07XG4gICAgLyogMjhweCAqLyB9XG4gIGg0IHtcbiAgICBmb250LXNpemU6IDEuMjJlbTtcbiAgICAvKiAyMnB4ICovIH1cbiAgLnd5c2l3eWcgcCwgLnd5c2l3eWcgYmxvY2txdW90ZSwgLnd5c2l3eWcgY2l0ZSB7XG4gICAgZm9udC1zaXplOiAwLjg5ZW07IH1cbiAgLnd5c2l3eWcgdWwsXG4gIC53eXNpd3lnIG9sIHtcbiAgICBmb250LXNpemU6IDAuODllbTsgfVxuICBjaXRlLFxuICBibG9ja3F1b3RlLmNpdGUsXG4gIGNpdGUuY2l0ZSxcbiAgcC5jaXRlIHtcbiAgICBmb250LXNpemU6IDFlbTsgfVxuICBwLCBibG9ja3F1b3RlLCBjaXRlLFxuICBwLmNpdGUge1xuICAgIGZvbnQtc2l6ZTogMC44OWVtOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogM2VtO1xuICAgIC8qIDU0cHggKi8gfVxuICAgIGgxLm1pZGxvbmcge1xuICAgICAgZm9udC1zaXplOiAyLjI1ZW07IH1cbiAgICBoMS5sb25nIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43NWVtOyB9XG4gICAgI2hlcm9fc3MgaDEge1xuICAgICAgZm9udC1zaXplOiAxLjVlbTsgfVxuICBoMiB7XG4gICAgZm9udC1zaXplOiAyLjQ0ZW07XG4gICAgLyogNDRweCAqLyB9XG4gIGgzIHtcbiAgICBmb250LXNpemU6IDEuNzhlbTtcbiAgICAvKiAzMnB4ICovIH1cbiAgLnd5c2l3eWcgcCwgLnd5c2l3eWcgYmxvY2txdW90ZSwgLnd5c2l3eWcgY2l0ZSB7XG4gICAgZm9udC1zaXplOiAwLjg5ZW07IH1cbiAgLnd5c2l3eWcgdWwsXG4gIC53eXNpd3lnIG9sIHtcbiAgICBmb250LXNpemU6IDAuODllbTsgfVxuICBjaXRlLFxuICBibG9ja3F1b3RlLmNpdGUsXG4gIGNpdGUuY2l0ZSxcbiAgcC5jaXRlIHtcbiAgICBmb250LXNpemU6IDFlbTsgfVxuICBwLCBibG9ja3F1b3RlLCBjaXRlLFxuICBwLmNpdGUge1xuICAgIGZvbnQtc2l6ZTogMC44OWVtOyB9IH1cblxuQG1lZGlhIHByaW50IHtcbiAgQHBhZ2Uge1xuICAgIG1hcmdpbjogLjVpbjsgfVxuICAqIHtcbiAgICAtd2Via2l0LXByaW50LWNvbG9yLWFkanVzdDogZXhhY3Q7XG4gICAgcHJpbnQtY29sb3ItYWRqdXN0OiBleGFjdDtcbiAgICBvdXRsaW5lOiBub25lOyB9XG4gIGh0bWwsIGJvZHkge1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZiAhaW1wb3J0YW50O1xuICAgIHdpZHRoOiA3LjVpbiAhaW1wb3J0YW50O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgYmxvY2txdW90ZSwgdGFibGUsIHByZSwgaW1nLCAuYmctaW1nIHtcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cbiAgdWwsIG9sLCBkbCB7XG4gICAgcGFnZS1icmVhay1iZWZvcmU6IGF2b2lkOyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU0lURVdJREUgQlVUVE9OUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuYS5idG4sXG4uYnRuIGEsXG5hIHNwYW4uYnRuLFxuaW5wdXRbdHlwZT0naW1hZ2UnXSxcbmlucHV0W3R5cGU9J3N1Ym1pdCddLFxuaW5wdXRbdHlwZT0nYnV0dG9uJ10sXG5idXR0b24uYnRuLFxuYnV0dG9uLmdwbmYtYWRkLWVudHJ5LFxuLndwLWJsb2NrLWJ1dHRvbl9fbGluayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDAgMCAxLjY3ZW0gMDtcbiAgcGFkZGluZzogMTBweCAyMHB4O1xuICB3aWR0aDogYXV0bztcbiAgYmFja2dyb3VuZDogI2ZmNmU0MiAhaW1wb3J0YW50O1xuICBmb250LWZhbWlseTogXCJTb3VyY2UgU2FucyBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjI1ZW07XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IDEuNGVtICFpbXBvcnRhbnQ7XG4gIGNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gIGJvcmRlcjogMnB4IHNvbGlkICNmZjZlNDI7XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuICBhLmJ0bi5vZmZzZXQsXG4gIC5idG4gYS5vZmZzZXQsXG4gIGEgc3Bhbi5idG4ub2Zmc2V0LFxuICBpbnB1dFt0eXBlPSdpbWFnZSddLm9mZnNldCxcbiAgaW5wdXRbdHlwZT0nc3VibWl0J10ub2Zmc2V0LFxuICBpbnB1dFt0eXBlPSdidXR0b24nXS5vZmZzZXQsXG4gIGJ1dHRvbi5idG4ub2Zmc2V0LFxuICBidXR0b24uZ3BuZi1hZGQtZW50cnkub2Zmc2V0LFxuICAud3AtYmxvY2stYnV0dG9uX19saW5rLm9mZnNldCB7XG4gICAgbWFyZ2luLWxlZnQ6IDIwcHg7IH1cbiAgYS5idG4ub3V0bGluZSxcbiAgLmJ0biBhLm91dGxpbmUsXG4gIGEgc3Bhbi5idG4ub3V0bGluZSxcbiAgaW5wdXRbdHlwZT0naW1hZ2UnXS5vdXRsaW5lLFxuICBpbnB1dFt0eXBlPSdzdWJtaXQnXS5vdXRsaW5lLFxuICBpbnB1dFt0eXBlPSdidXR0b24nXS5vdXRsaW5lLFxuICBidXR0b24uYnRuLm91dGxpbmUsXG4gIGJ1dHRvbi5ncG5mLWFkZC1lbnRyeS5vdXRsaW5lLFxuICAud3AtYmxvY2stYnV0dG9uX19saW5rLm91dGxpbmUge1xuICAgIGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDtcbiAgICBjb2xvcjogI2ZmNmU0MiAhaW1wb3J0YW50OyB9XG4gIGEuYnRuLnNtYWxsLFxuICAuYnRuIGEuc21hbGwsXG4gIGEgc3Bhbi5idG4uc21hbGwsXG4gIGlucHV0W3R5cGU9J2ltYWdlJ10uc21hbGwsXG4gIGlucHV0W3R5cGU9J3N1Ym1pdCddLnNtYWxsLFxuICBpbnB1dFt0eXBlPSdidXR0b24nXS5zbWFsbCxcbiAgYnV0dG9uLmJ0bi5zbWFsbCxcbiAgYnV0dG9uLmdwbmYtYWRkLWVudHJ5LnNtYWxsLFxuICAud3AtYmxvY2stYnV0dG9uX19saW5rLnNtYWxsIHtcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICBmb250LXNpemU6IDAuOWVtOyB9XG4gICAgYS5idG4uc21hbGwuc3EsXG4gICAgLmJ0biBhLnNtYWxsLnNxLFxuICAgIGEgc3Bhbi5idG4uc21hbGwuc3EsXG4gICAgaW5wdXRbdHlwZT0naW1hZ2UnXS5zbWFsbC5zcSxcbiAgICBpbnB1dFt0eXBlPSdzdWJtaXQnXS5zbWFsbC5zcSxcbiAgICBpbnB1dFt0eXBlPSdidXR0b24nXS5zbWFsbC5zcSxcbiAgICBidXR0b24uYnRuLnNtYWxsLnNxLFxuICAgIGJ1dHRvbi5ncG5mLWFkZC1lbnRyeS5zbWFsbC5zcSxcbiAgICAud3AtYmxvY2stYnV0dG9uX19saW5rLnNtYWxsLnNxIHtcbiAgICAgIHBhZGRpbmc6IDEwcHggNDBweCAxMHB4IDE1cHg7IH1cbiAgICAgIGEuYnRuLnNtYWxsLnNxOmFmdGVyLFxuICAgICAgLmJ0biBhLnNtYWxsLnNxOmFmdGVyLFxuICAgICAgYSBzcGFuLmJ0bi5zbWFsbC5zcTphZnRlcixcbiAgICAgIGlucHV0W3R5cGU9J2ltYWdlJ10uc21hbGwuc3E6YWZ0ZXIsXG4gICAgICBpbnB1dFt0eXBlPSdzdWJtaXQnXS5zbWFsbC5zcTphZnRlcixcbiAgICAgIGlucHV0W3R5cGU9J2J1dHRvbiddLnNtYWxsLnNxOmFmdGVyLFxuICAgICAgYnV0dG9uLmJ0bi5zbWFsbC5zcTphZnRlcixcbiAgICAgIGJ1dHRvbi5ncG5mLWFkZC1lbnRyeS5zbWFsbC5zcTphZnRlcixcbiAgICAgIC53cC1ibG9jay1idXR0b25fX2xpbmsuc21hbGwuc3E6YWZ0ZXIge1xuICAgICAgICByaWdodDogMTVweDtcbiAgICAgICAgdG9wOiBjYWxjKDUwJSArIDFweCk7IH1cbiAgYS5idG4uc3EsXG4gIC5idG4gYS5zcSxcbiAgYSBzcGFuLmJ0bi5zcSxcbiAgaW5wdXRbdHlwZT0naW1hZ2UnXS5zcSxcbiAgaW5wdXRbdHlwZT0nc3VibWl0J10uc3EsXG4gIGlucHV0W3R5cGU9J2J1dHRvbiddLnNxLFxuICBidXR0b24uYnRuLnNxLFxuICBidXR0b24uZ3BuZi1hZGQtZW50cnkuc3EsXG4gIC53cC1ibG9jay1idXR0b25fX2xpbmsuc3Ege1xuICAgIHBhZGRpbmctcmlnaHQ6IDQwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDtcbiAgICBjb2xvcjogIzAwMDA0MSAhaW1wb3J0YW50O1xuICAgIC8qLmFycm93IHtcbiAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MTBweDtcbiAgICAgICAgICAgIHdpZHRoOiAwOyBcbiAgICAgICAgICAgIGhlaWdodDogMDsgXG4gICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA2cHggMCA2cHggMTBweDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJG9yYW5nZTtcbiAgICAgICAgfSovIH1cbiAgICBhLmJ0bi5zcTphZnRlcixcbiAgICAuYnRuIGEuc3E6YWZ0ZXIsXG4gICAgYSBzcGFuLmJ0bi5zcTphZnRlcixcbiAgICBpbnB1dFt0eXBlPSdpbWFnZSddLnNxOmFmdGVyLFxuICAgIGlucHV0W3R5cGU9J3N1Ym1pdCddLnNxOmFmdGVyLFxuICAgIGlucHV0W3R5cGU9J2J1dHRvbiddLnNxOmFmdGVyLFxuICAgIGJ1dHRvbi5idG4uc3E6YWZ0ZXIsXG4gICAgYnV0dG9uLmdwbmYtYWRkLWVudHJ5LnNxOmFmdGVyLFxuICAgIC53cC1ibG9jay1idXR0b25fX2xpbmsuc3E6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICB0b3A6IGNhbGMoNTAlICsgMnB4KTtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgIGJvcmRlci13aWR0aDogNnB4IDAgNnB4IDEwcHg7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZjZlNDI7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsgfVxuICAgIGEuYnRuLnNxOmhvdmVyLFxuICAgIC5idG4gYS5zcTpob3ZlcixcbiAgICBhIHNwYW4uYnRuLnNxOmhvdmVyLFxuICAgIGlucHV0W3R5cGU9J2ltYWdlJ10uc3E6aG92ZXIsXG4gICAgaW5wdXRbdHlwZT0nc3VibWl0J10uc3E6aG92ZXIsXG4gICAgaW5wdXRbdHlwZT0nYnV0dG9uJ10uc3E6aG92ZXIsXG4gICAgYnV0dG9uLmJ0bi5zcTpob3ZlcixcbiAgICBidXR0b24uZ3BuZi1hZGQtZW50cnkuc3E6aG92ZXIsXG4gICAgLndwLWJsb2NrLWJ1dHRvbl9fbGluay5zcTpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxICFpbXBvcnRhbnQ7XG4gICAgICBjb2xvcjogI2ZmNmU0MiAhaW1wb3J0YW50O1xuICAgICAgYm9yZGVyLWNvbG9yOiAjMDAwMDQxICFpbXBvcnRhbnQ7IH1cbiAgYS5idG46aG92ZXIsXG4gIC5idG4gYTpob3ZlcixcbiAgYSBzcGFuLmJ0bjpob3ZlcixcbiAgaW5wdXRbdHlwZT0naW1hZ2UnXTpob3ZlcixcbiAgaW5wdXRbdHlwZT0nc3VibWl0J106aG92ZXIsXG4gIGlucHV0W3R5cGU9J2J1dHRvbiddOmhvdmVyLFxuICBidXR0b24uYnRuOmhvdmVyLFxuICBidXR0b24uZ3BuZi1hZGQtZW50cnk6aG92ZXIsXG4gIC53cC1ibG9jay1idXR0b25fX2xpbms6aG92ZXIge1xuICAgIGNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWNvbG9yOiAjMmI1OWMzICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogIzJiNTljMyAhaW1wb3J0YW50O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZSAhaW1wb3J0YW50OyB9XG5cbmlucHV0W3R5cGU9J3N1Ym1pdCddOmZvY3VzLFxuaW5wdXRbdHlwZT0nYnV0dG9uJ106Zm9jdXMge1xuICBvdXRsaW5lOiBub25lOyB9XG5cbmEuYnRuLmRpc2FibGVkLFxuLmJ0biBhLmRpc2FibGVkLFxuaW5wdXRbdHlwZT0naW1hZ2UnXTpkaXNhYmxlZCxcbmlucHV0W3R5cGU9J3N1Ym1pdCddOmRpc2FibGVkLFxuaW5wdXRbdHlwZT0nYnV0dG9uJ106ZGlzYWJsZWQsXG5idXR0b24uYnRuOmRpc2FibGVkLFxuYnV0dG9uLmdwbmYtYWRkLWVudHJ5OmRpc2FibGVkLFxuLndwLWJsb2NrLWJ1dHRvbl9fbGluay5kaXNhYmxlZCB7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDtcbiAgYmFja2dyb3VuZDogI2VlZjFmYSAhaW1wb3J0YW50O1xuICBib3JkZXItY29sb3I6ICNlZWYxZmEgIWltcG9ydGFudDsgfVxuICBhLmJ0bi5kaXNhYmxlZDpob3ZlcixcbiAgLmJ0biBhLmRpc2FibGVkOmhvdmVyLFxuICBpbnB1dFt0eXBlPSdpbWFnZSddOmRpc2FibGVkOmhvdmVyLFxuICBpbnB1dFt0eXBlPSdzdWJtaXQnXTpkaXNhYmxlZDpob3ZlcixcbiAgaW5wdXRbdHlwZT0nYnV0dG9uJ106ZGlzYWJsZWQ6aG92ZXIsXG4gIGJ1dHRvbi5idG46ZGlzYWJsZWQ6aG92ZXIsXG4gIGJ1dHRvbi5ncG5mLWFkZC1lbnRyeTpkaXNhYmxlZDpob3ZlcixcbiAgLndwLWJsb2NrLWJ1dHRvbl9fbGluay5kaXNhYmxlZDpob3ZlciB7XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgIGNvbG9yOiAjZmZmZmZmICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogI2VlZjFmYSAhaW1wb3J0YW50O1xuICAgIGJvcmRlci1jb2xvcjogI2VlZjFmYSAhaW1wb3J0YW50OyB9XG5cbi5wbGF5X2J0biB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDUwJTtcbiAgdG9wOiA1MCU7XG4gIG1hcmdpbjogLTQ4cHggMCAwIC00OHB4O1xuICB3aWR0aDogOTZweDtcbiAgaGVpZ2h0OiA5NnB4O1xuICBib3JkZXItcmFkaXVzOiA0OHB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIG9wYWNpdHk6IDE7XG4gIHZpc2liaWxpdHk6IHZpc2libGU7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICB6LWluZGV4OiAyMDtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5wbGF5X2J0bjphZnRlciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDIzcHg7XG4gICAgdG9wOiAyOXB4O1xuICAgIG1hcmdpbjogMDtcbiAgICB3aWR0aDogNDZweDtcbiAgICBoZWlnaHQ6IDM4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDM4cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yOiAjZmY2ZTQyO1xuICAgIGZvbnQtZmFtaWx5OiAnZGFzaGljb25zJztcbiAgICBjb250ZW50OiAnXFxmNTIyJztcbiAgICBmb250LXNpemU6IDU4cHg7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cbiAgLnBsYXlfYnRuOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG4gICAgLnBsYXlfYnRuOmhvdmVyOmFmdGVyIHtcbiAgICAgIGNvbG9yOiAjMmI1OWMzOyB9XG4gIC5wbGF5X2J0bi5vZmYge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdmlzaWJpbGl0eTogaGlkZGVuOyB9XG5cbiNoZWFkZXJfY3RhLFxuI2hlYWRlcl9jdGFfbW9iaWxlIHtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW46IDE4cHggMCAwIDQ4cHg7XG4gIHBhZGRpbmc6IDNweCAxNXB4O1xuICBsaW5lLWhlaWdodDogMzNweCAhaW1wb3J0YW50OyB9XG5cbiNoZWFkZXJfY3RhX21vYmlsZSB7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW46IDE4cHggMCAwIDA7IH1cblxuLnJlYWRfbW9yZSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nLXJpZ2h0OiA0MHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGZvbnQtc2l6ZTogMS42N2VtO1xuICBsaW5lLWhlaWdodDogMS4zMzNlbTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMwMDAwNDE7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG4gIC5yZWFkX21vcmU6YWZ0ZXIge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMjBweDtcbiAgICB0b3A6IGNhbGMoNTAlICsgMnB4KTtcbiAgICB3aWR0aDogMDtcbiAgICBoZWlnaHQ6IDA7XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBib3JkZXItd2lkdGg6IDZweCAwIDZweCAxMHB4O1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmNmU0MjtcbiAgICBjb250ZW50OiAnJztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cblxuLndwLWJsb2NrLWJ1dHRvbnMge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMzYwcHg7XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87IH1cbiAgLndwLWJsb2NrLWJ1dHRvbnMgLndwLWJsb2NrLWJ1dHRvbiB7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cbiAgICAud3AtYmxvY2stYnV0dG9ucyAud3AtYmxvY2stYnV0dG9uOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAwOyB9XG5cbi53cC1ibG9jay1idXR0b25fX2xpbmsge1xuICBib3JkZXItcmFkaXVzOiAwOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MHB4KSB7XG4gICNoZWFkZXJfY3RhIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICNoZWFkZXJfY3RhX21vYmlsZSB7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTFweCkgYW5kIChtYXgtd2lkdGg6IDEzNjBweCkge1xuICAjaGVhZGVyX2N0YSB7XG4gICAgbWFyZ2luLWxlZnQ6IDE4cHg7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBTRUFSQ0ggKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jc2VhcmNoX2NvbnRhaW5lcixcbiNzZWFyY2hfY29udGFpbmVyX21vYmlsZSB7XG4gIGZsb2F0OiByaWdodDtcbiAgd2lkdGg6IDIyMHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIG1hcmdpbjogMThweCAwIDAgMDtcbiAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjsgfVxuICAjc2VhcmNoX2NvbnRhaW5lciBmb3JtLnNlYXJjaC1mb3JtLFxuICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUgZm9ybS5zZWFyY2gtZm9ybSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlOyB9XG4gICNzZWFyY2hfY29udGFpbmVyIGxhYmVsLFxuICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUgbGFiZWwge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgI3NlYXJjaF9jb250YWluZXIgbGFiZWwgaW5wdXQuc2VhcmNoLWZpZWxkLFxuICAgICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSBsYWJlbCBpbnB1dC5zZWFyY2gtZmllbGQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBwYWRkaW5nOiAwIDE1cHg7XG4gICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgZm9udC1zaXplOiAwLjhlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuICAgICAgI3NlYXJjaF9jb250YWluZXIgbGFiZWwgaW5wdXQuc2VhcmNoLWZpZWxkOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuICAgICAgI3NlYXJjaF9jb250YWluZXJfbW9iaWxlIGxhYmVsIGlucHV0LnNlYXJjaC1maWVsZDo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuICAgICAgI3NlYXJjaF9jb250YWluZXIgbGFiZWwgaW5wdXQuc2VhcmNoLWZpZWxkOjotbXMtY2xlYXIsXG4gICAgICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUgbGFiZWwgaW5wdXQuc2VhcmNoLWZpZWxkOjotbXMtY2xlYXIge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICNzZWFyY2hfY29udGFpbmVyIGJ1dHRvblt0eXBlPSdzdWJtaXQnXTpmb2N1cyxcbiAgI3NlYXJjaF9jb250YWluZXIgaW5wdXQ6Zm9jdXMsXG4gICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSBidXR0b25bdHlwZT0nc3VibWl0J106Zm9jdXMsXG4gICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSBpbnB1dDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTsgfVxuICAjc2VhcmNoX2NvbnRhaW5lciAuc2VhcmNoLXN1Ym1pdCxcbiAgI3NlYXJjaF9jb250YWluZXJfbW9iaWxlIC5zZWFyY2gtc3VibWl0IHtcbiAgICBmbG9hdDogcmlnaHQ7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiA0MHB4O1xuICAgIGhlaWdodDogNDBweDtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjBweDtcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMjBweDtcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICB0ZXh0LWluZGVudDogLTk5OTlweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICNzZWFyY2hfY29udGFpbmVyIC5zZWFyY2gtc3VibWl0OmZvY3VzLFxuICAgICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSAuc2VhcmNoLXN1Ym1pdDpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lOyB9XG4gICAgI3NlYXJjaF9jb250YWluZXIgLnNlYXJjaC1zdWJtaXQgc3ZnLFxuICAgICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSAuc2VhcmNoLXN1Ym1pdCBzdmcge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAxMHB4O1xuICAgICAgdG9wOiA3cHg7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzOyB9XG4gICAgICAjc2VhcmNoX2NvbnRhaW5lciAuc2VhcmNoLXN1Ym1pdCBzdmcgI3NlYXJjaC1tYWctZ2xhc3MsXG4gICAgICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUgLnNlYXJjaC1zdWJtaXQgc3ZnICNzZWFyY2gtbWFnLWdsYXNzIHtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgIGZpbGw6ICNmZmZmZmY7IH1cbiAgICAjc2VhcmNoX2NvbnRhaW5lciAuc2VhcmNoLXN1Ym1pdDpob3ZlciBzdmcgI3NlYXJjaC1tYWctZ2xhc3MsXG4gICAgI3NlYXJjaF9jb250YWluZXJfbW9iaWxlIC5zZWFyY2gtc3VibWl0OmhvdmVyIHN2ZyAjc2VhcmNoLW1hZy1nbGFzcyB7XG4gICAgICBmaWxsOiAjZmY2ZTQyOyB9XG4gICNzZWFyY2hfY29udGFpbmVyIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcixcbiAgI3NlYXJjaF9jb250YWluZXJfbW9iaWxlIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgI3NlYXJjaF9jb250YWluZXIgOi1tb3otcGxhY2Vob2xkZXIsXG4gICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSA6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgI3NlYXJjaF9jb250YWluZXIgOjotbW96LXBsYWNlaG9sZGVyLFxuICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUgOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAjc2VhcmNoX2NvbnRhaW5lciA6LW1zLWlucHV0LXBsYWNlaG9sZGVyLFxuICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUgOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cblxuI3NlYXJjaF9jb250YWluZXJfbW9iaWxlIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgZmxvYXQ6IGxlZnQ7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MHB4KSB7XG4gICNzZWFyY2hfY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICNzZWFyY2hfY29udGFpbmVyX21vYmlsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTFweCkgYW5kIChtYXgtd2lkdGg6IDEyNjBweCkge1xuICAjc2VhcmNoX2NvbnRhaW5lciB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDE0MHB4KTsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNJVEVXSURFIFRBQkxFIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogMWVtIDA7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM3MDcwNzA7XG4gIGJvcmRlci10b3A6IG5vbmU7XG4gIHRhYmxlLWxheW91dDogYXV0bzsgfVxuICB0YWJsZSB0ZCxcbiAgdGFibGUgdGgge1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzcwNzA3MDtcbiAgICBwYWRkaW5nOiAxZW07XG4gICAgYmFja2dyb3VuZDogI2VlZjFmYTsgfVxuICB0YWJsZSB0aCB7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjsgfVxuICB0YWJsZSB0ciB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICM3MDcwNzA7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjNzA3MDcwOyB9XG4gICAgdGFibGUgdHI6bnRoLWNoaWxkKGV2ZW4pIHRkIHtcbiAgICAgIGJhY2tncm91bmQ6ICNlZWYxZmE7IH1cbiAgdGFibGUgdGQ6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgd2lkdGg6IDQwJSAhaW1wb3J0YW50OyB9XG4gIC5uYXJyb3dfdGFibGUgdGFibGUgdGQ6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgd2lkdGg6IDU1JSAhaW1wb3J0YW50OyB9XG5cbi53eXNpd3lnIHRhYmxlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VlZjFmYTtcbiAgYm9yZGVyLXRvcDogbm9uZTtcbiAgdGFibGUtbGF5b3V0OiBhdXRvOyB9XG4gIC53eXNpd3lnIHRhYmxlIHRkLFxuICAud3lzaXd5ZyB0YWJsZSB0aCB7XG4gICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjZWVmMWZhO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG4gICAgLnd5c2l3eWcgdGFibGUgdGQ6Zmlyc3Qtb2YtdHlwZSxcbiAgICAud3lzaXd5ZyB0YWJsZSB0aDpmaXJzdC1vZi10eXBlIHtcbiAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7IH1cbiAgLnd5c2l3eWcgdGFibGUgdHIge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVmMWZhO1xuICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2VlZjFmYTsgfVxuICAgIC53eXNpd3lnIHRhYmxlIHRyOm50aC1jaGlsZChldmVuKSB0ZCB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG4gICAgLnd5c2l3eWcgdGFibGUgdHI6Zmlyc3Qtb2YtdHlwZSB0ZCB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZWVmMWZhO1xuICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLndwdGItc2hvcnRjb2RlLWNvbnRhaW5lci53cHRiLXBoLWVsZW1lbnQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDsgfVxuICAud3B0Yi1zaG9ydGNvZGUtY29udGFpbmVyLndwdGItcGgtZWxlbWVudCB3cHRiX3Nob3J0Y29kZV9jb250YWluZXJfZWxlbWVudCA+IGRpdiB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlOyB9XG5cbi5jb250ZW50X3NlY3Rpb24ueWJ0YWJsZSAud3B0Yi10YWJsZS1jb250YWluZXIge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5jb250ZW50X3NlY3Rpb24ueWJ0YWJsZSAud3B0Yi1pbWFnZS13cmFwcGVyIGltZyB7XG4gIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bzsgfVxuXG4uY29udGVudF9zZWN0aW9uLnlidGFibGUgLnRhYmxlX2Zvb3Rub3RlIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiA3MCU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uaW5mb190aXAge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAxMHB4O1xuICB0b3A6IDUwJTtcbiAgd2lkdGg6IDIycHg7XG4gIGhlaWdodDogMjJweDtcbiAgYm9yZGVyLXJhZGl1czogMTFweDtcbiAgbWFyZ2luLXRvcDogLTEwcHg7XG4gIGJhY2tncm91bmQ6ICNmZmZmZmYgdXJsKC4uLy4uL2ltYWdlcy9pbmZvLXRpcC1pY29uLnN2Zykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHotaW5kZXg6IDEwOyB9XG4gIC5pbmZvX3RpcDpob3ZlciAudGlwIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuaW5mb190aXAgLnRpcCB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogY2FsYygxMDAlICsgNXB4KTtcbiAgICB0b3A6IC0zMHB4O1xuICAgIHdpZHRoOiA0MDBweDtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzcwNzA3MDtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmO1xuICAgIHotaW5kZXg6IDEwMDAwOyB9XG4gICAgLmluZm9fdGlwIC50aXAgLmlubmVyIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgcGFkZGluZzogMThweCAyNHB4O1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICBsaW5lLWhlaWdodDogMS40NWVtO1xuICAgICAgZm9udC1zaXplOiAwLjllbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAuY29udGVudF9zZWN0aW9uLnlidGFibGUgLnRhYmxlX2Zvb3Rub3RlIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gIC5jb250ZW50X3NlY3Rpb24ueWJ0YWJsZSAud3B0Yi10YWJsZS1jb250YWluZXItbWF0cml4IHtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGwgIWltcG9ydGFudDsgfVxuICAuaW5mb190aXA6aG92ZXIgLnRpcCB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAuaW5mb190aXAuc2hvd3RpcCAudGlwIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuaW5mb190aXAgLnRpcCB7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogYXV0bzsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFdJREdFVCBTVFlMRVMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi53aWRnZXQge1xuICBtYXJnaW46IDAgMCAyMHB4O1xuICBiYWNrZ3JvdW5kOiAjZWVmMWZhO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gIC53aWRnZXQgLmlubmVyIHtcbiAgICBwYWRkaW5nOiAzMHB4IDIwcHg7IH1cbiAgLndpZGdldC53aWRnZXRfcHBscnBzdHNfcG9wdWxhcl9wb3N0c193aWRnZXQgLndpZGdldC10aXRsZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbi1ib3R0b206IDIuNWVtO1xuICAgIGZvbnQtc2l6ZTogMS4yMmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgICAud2lkZ2V0LndpZGdldF9wcGxycHN0c19wb3B1bGFyX3Bvc3RzX3dpZGdldCAud2lkZ2V0LXRpdGxlOmFmdGVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IGNhbGMoMTAwJSArIDIwcHgpO1xuICAgICAgd2lkdGg6IDc1cHg7XG4gICAgICBoZWlnaHQ6IDJweDtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gICAgICBjb250ZW50OiAnJzsgfVxuICAud2lkZ2V0LndpZGdldF9wcGxycHN0c19wb3B1bGFyX3Bvc3RzX3dpZGdldCAucmx0ZHBzdHNwbGduLXBvcHVsYXItcG9zdHMgYXJ0aWNsZSB7XG4gICAgcGFkZGluZzogMDtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2U4ZTlmMzsgfVxuICAgIC53aWRnZXQud2lkZ2V0X3BwbHJwc3RzX3BvcHVsYXJfcG9zdHNfd2lkZ2V0IC5ybHRkcHN0c3BsZ24tcG9wdWxhci1wb3N0cyBhcnRpY2xlOmZpcnN0LW9mLXR5cGUge1xuICAgICAgYm9yZGVyOiBub25lOyB9XG4gIC53aWRnZXQud2lkZ2V0X3BwbHJwc3RzX3BvcHVsYXJfcG9zdHNfd2lkZ2V0IC5ybHRkcHN0c3BsZ24tcG9wdWxhci1wb3N0cyBoNCB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7IH1cbiAgICAud2lkZ2V0LndpZGdldF9wcGxycHN0c19wb3B1bGFyX3Bvc3RzX3dpZGdldCAucmx0ZHBzdHNwbGduLXBvcHVsYXItcG9zdHMgaDQgYSB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHBhZGRpbmc6IDEwcHggMDtcbiAgICAgIGNvbG9yOiAjMTQxOTIwOyB9XG4gICAgICAud2lkZ2V0LndpZGdldF9wcGxycHN0c19wb3B1bGFyX3Bvc3RzX3dpZGdldCAucmx0ZHBzdHNwbGduLXBvcHVsYXItcG9zdHMgaDQgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gIC53aWRnZXQud2lkZ2V0X3NlYXJjaCB7XG4gICAgbWFyZ2luOiAwIDAgMzBweCAhaW1wb3J0YW50OyB9XG4gICAgLndpZGdldC53aWRnZXRfc2VhcmNoIGZvcm0uc2VhcmNoLWZvcm0ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgICAud2lkZ2V0LndpZGdldF9zZWFyY2ggbGFiZWwge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgICAgIC53aWRnZXQud2lkZ2V0X3NlYXJjaCBsYWJlbCBpbnB1dC5zZWFyY2gtZmllbGQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcGFkZGluZzogMCAxNXB4O1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBmb250LXNpemU6IDAuOGVtO1xuICAgICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuICAgICAgICAud2lkZ2V0LndpZGdldF9zZWFyY2ggbGFiZWwgaW5wdXQuc2VhcmNoLWZpZWxkOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uIHtcbiAgICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cbiAgICAgICAgLndpZGdldC53aWRnZXRfc2VhcmNoIGxhYmVsIGlucHV0LnNlYXJjaC1maWVsZDo6LW1zLWNsZWFyIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgLndpZGdldC53aWRnZXRfc2VhcmNoIGJ1dHRvblt0eXBlPSdzdWJtaXQnXTpmb2N1cyxcbiAgICAud2lkZ2V0LndpZGdldF9zZWFyY2ggaW5wdXQ6Zm9jdXMge1xuICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAgIC53aWRnZXQud2lkZ2V0X3NlYXJjaCAuc2VhcmNoLXN1Ym1pdCB7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB3aWR0aDogNDBweDtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMjBweDtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAyMHB4O1xuICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDA7XG4gICAgICBib3JkZXI6IG5vbmU7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICAgLndpZGdldC53aWRnZXRfc2VhcmNoIC5zZWFyY2gtc3VibWl0OmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTogbm9uZTsgfVxuICAgICAgLndpZGdldC53aWRnZXRfc2VhcmNoIC5zZWFyY2gtc3VibWl0IHN2ZyB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDEwcHg7XG4gICAgICAgIHRvcDogN3B4O1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7IH1cbiAgICAgICAgLndpZGdldC53aWRnZXRfc2VhcmNoIC5zZWFyY2gtc3VibWl0IHN2ZyAjc2VhcmNoLW1hZy1nbGFzcyB7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgICAgZmlsbDogIzAwMDAwMDsgfVxuICAgICAgLndpZGdldC53aWRnZXRfc2VhcmNoIC5zZWFyY2gtc3VibWl0OmhvdmVyIHN2ZyAjc2VhcmNoLW1hZy1nbGFzcyB7XG4gICAgICAgIGZpbGw6ICNmZjZlNDI7IH1cbiAgICAud2lkZ2V0LndpZGdldF9zZWFyY2ggOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgLndpZGdldC53aWRnZXRfc2VhcmNoIDotbW96LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG4gICAgLndpZGdldC53aWRnZXRfc2VhcmNoIDo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICBjb2xvcjogIzAwMDAwMDsgfVxuICAgIC53aWRnZXQud2lkZ2V0X3NlYXJjaCA6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgIGNvbG9yOiAjMDAwMDAwOyB9XG5cbi53aWRnZXRfd3JhcCB7XG4gIG1hcmdpbjogMzBweCAwO1xuICBwYWRkaW5nOiAzMHB4IDIwcHg7XG4gIGJhY2tncm91bmQ6ICNlZWYxZmE7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cbiAgLndpZGdldF93cmFwIC53aWRnZXQge1xuICAgIG1hcmdpbjogMCAwIDIwcHg7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAwOyB9XG5cbi5ibG9nX2N0YXMgLndpZGdldCAuaW5uZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLmJsb2dfY3RhcyAud2lkZ2V0IC5pbm5lciAuaWNvbiB7XG4gICAgd2lkdGg6IDQ1JTtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gNTAlOyB9XG4gIC5ibG9nX2N0YXMgLndpZGdldCAuaW5uZXIgaDMge1xuICAgIHdpZHRoOiA1NSU7XG4gICAgZm9udC1zaXplOiAxLjIyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuM2VtO1xuICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDA7IH1cbiAgICAuYmxvZ19jdGFzIC53aWRnZXQgLmlubmVyIGgzIHNwYW4ge1xuICAgICAgY29sb3I6ICNmZjZlNDI7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAuYmxvZ19jdGFzIC53aWRnZXQgLmlubmVyIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAgIC5ibG9nX2N0YXMgLndpZGdldCAuaW5uZXIgLmljb24ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDAgYXV0byAyMHB4O1xuICAgICAgaGVpZ2h0OiA3MHB4O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiBhdXRvIDEwMCU7IH1cbiAgICAuYmxvZ19jdGFzIC53aWRnZXQgLmlubmVyIGgzIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU0lURVdJREUgUEFHSU5BVElPTiBTVFlMRVMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLnBhZ2luZy1uYXZpZ2F0aW9uIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi5wYWdpbmF0aW9uIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDQ4cHggNjBweDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgei1pbmRleDogMTsgfVxuICAucGFnaW5hdGlvbjpiZWZvcmUsIC5wYWdpbmF0aW9uOmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA5cHg7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vLi4vaW1hZ2VzL3BhZ2luYXRpb24tYXJyb3cuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIGNvbnRlbnQ6ICcnOyB9XG4gIC5wYWdpbmF0aW9uOmFmdGVyIHtcbiAgICBsZWZ0OiBhdXRvO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSByb3RhdGUoMTgwZGVnKTsgfVxuICAucGFnaW5hdGlvbiAucGFnZS1udW1iZXJzIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDQ4cHg7XG4gICAgaGVpZ2h0OiA0OHB4O1xuICAgIG1hcmdpbjogMCAxMHB4O1xuICAgIHBhZGRpbmc6IDEzcHggNXB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICBjb2xvcjogIzAwMDAwMDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzA3MDcwO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAxcHggIzcwNzA3MDtcbiAgICBiYWNrZ3JvdW5kOiAjZjJmM2Y4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgfVxuICAgIC5wYWdpbmF0aW9uIC5wYWdlLW51bWJlcnM6aG92ZXIsIC5wYWdpbmF0aW9uIC5wYWdlLW51bWJlcnM6Zm9jdXMge1xuICAgICAgY29sb3I6ICMyMjI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICNmZjZlNDI7IH1cbiAgICAucGFnaW5hdGlvbiAucGFnZS1udW1iZXJzOmFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMnB4ICNmZjZlNDI7IH1cbiAgICAucGFnaW5hdGlvbiAucGFnZS1udW1iZXJzLmN1cnJlbnQge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAjZmY2ZTQyO1xuICAgICAgY29sb3I6ICMwMDAwMDA7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAucGFnaW5hdGlvbiAucGFnZS1udW1iZXJzLmRvdHMge1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwO1xuICAgICAgd2lkdGg6IDIwcHg7IH1cbiAgICAucGFnaW5hdGlvbiAucGFnZS1udW1iZXJzLnByZXYsIC5wYWdpbmF0aW9uIC5wYWdlLW51bWJlcnMubmV4dCB7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBmb250LXNpemU6IDE4cHg7XG4gICAgICBmb250LXdlaWdodDogNDAwOyB9XG5cbnVsLmFsbS1wYWdpbmcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogNDhweCA2MHB4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBvcGFjaXR5OiAwO1xuICB6LWluZGV4OiAxOyB9XG4gIHVsLmFsbS1wYWdpbmc6YmVmb3JlLCB1bC5hbG0tcGFnaW5nOmFmdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICB0b3A6IDUwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA5cHg7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKFwiLi4vLi4vaW1hZ2VzL3BhZ2luYXRpb24tYXJyb3cuc3ZnXCIpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgIGNvbnRlbnQ6ICcnOyB9XG4gIHVsLmFsbS1wYWdpbmc6YWZ0ZXIge1xuICAgIGxlZnQ6IGF1dG87XG4gICAgcmlnaHQ6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSgxODBkZWcpOyB9XG4gIHVsLmFsbS1wYWdpbmcuZW1wdHkge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgdWwuYWxtLXBhZ2luZyA+IGxpIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDAgMTBweDtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICBmb250LXNpemU6IDFlbTsgfVxuICAgIHVsLmFsbS1wYWdpbmcgPiBsaTpiZWZvcmUsIHVsLmFsbS1wYWdpbmcgPiBsaTphZnRlciB7XG4gICAgICBjb250ZW50OiBub25lOyB9XG4gICAgdWwuYWxtLXBhZ2luZyA+IGxpIGEge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwcHg7XG4gICAgICBoZWlnaHQ6IDQ4cHg7XG4gICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgICBjb2xvcjogIzAwMDAwMDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjNzA3MDcwO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMXB4ICM3MDcwNzA7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjJmM2Y4O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTsgfVxuICAgICAgdWwuYWxtLXBhZ2luZyA+IGxpIGE6aG92ZXIsIHVsLmFsbS1wYWdpbmcgPiBsaSBhOmZvY3VzIHtcbiAgICAgICAgY29sb3I6ICMyMjI7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAjZmY2ZTQyOyB9XG4gICAgICB1bC5hbG0tcGFnaW5nID4gbGkgYTphY3RpdmUge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggI2ZmNmU0MjsgfVxuICAgIHVsLmFsbS1wYWdpbmcgPiBsaS5udW0gYSB7XG4gICAgICB3aWR0aDogNDhweDtcbiAgICAgIGZvbnQtc2l6ZTogMjJweDtcbiAgICAgIHBhZGRpbmc6IDEzcHggMTVweDtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgICB1bC5hbG0tcGFnaW5nID4gbGkuZGlzYWJsZWQgYSB7XG4gICAgICBjdXJzb3I6IGRlZmF1bHQgIWltcG9ydGFudDtcbiAgICAgIG9wYWNpdHk6IDAuMzsgfVxuICAgICAgdWwuYWxtLXBhZ2luZyA+IGxpLmRpc2FibGVkIGE6aG92ZXIsIHVsLmFsbS1wYWdpbmcgPiBsaS5kaXNhYmxlZCBhOmZvY3VzIHtcbiAgICAgICAgY29sb3I6ICMyMjI7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYzZjg7XG4gICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDFweCAjNzA3MDcwOyB9XG4gICAgdWwuYWxtLXBhZ2luZyA+IGxpLmFjdGl2ZSBhIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggI2ZmNmU0MjtcbiAgICAgIGNvbG9yOiAjMDAwMDAwO1xuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbi8qIFBhZ2UgTG9hZGluZyBzdHlsZXMgKi9cbi5hamF4LWxvYWQtbW9yZS13cmFwIC5hbG0tcGFnaW5nLWNvbnRlbnQge1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZTsgfVxuXG4uYWpheC1sb2FkLW1vcmUtd3JhcC5hbG0tbG9hZGluZyAuYWxtLXBhZ2luZy1jb250ZW50IHtcbiAgb3BhY2l0eTogMC41ICFpbXBvcnRhbnQ7IH1cblxuLmFsbS1wYWdpbmctd3JhcCAuYWxtLXBhZ2luZy1sb2FkaW5nLFxuLmFqYXgtbG9hZC1tb3JlLXdyYXAuYWxtLXBhZ2luZy5hbG0taXMtZmlsdGVyaW5nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi9pbWFnZXMvbG9hZGluZy5zdmdcIik7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7IH1cblxuLmFqYXgtbG9hZC1tb3JlLXdyYXAuYWxtLWxvYWRpbmcuYWxtLXBhZ2luZyAuYWxtLXBhZ2luZy13cmFwLFxuLmFqYXgtbG9hZC1tb3JlLXdyYXAuYWxtLWxvYWRpbmcgLmFqYXgtbG9hZC1tb3JlLXdyYXAuYWxtLWlzLWZpbHRlcmluZyB7XG4gIC8qIE9uIGluaXQgKi9cbiAgbWluLWhlaWdodDogMTUwcHg7IH1cblxuLmFqYXgtbG9hZC1tb3JlLXdyYXAuYWxtLWlzLWZpbHRlcmluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi5hbG0tcGFnaW5nLXdyYXAgLmFsbS1yZXZlYWwge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLmFsbS1wYWdpbmctd3JhcCAuYWxtLXBhZ2luZy1sb2FkaW5nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG9wYWNpdHk6IDA7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTk7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2U7XG4gIHRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlOyB9XG5cbi5hbG0tbG9hZGluZyAuYWxtLXBhZ2luZy13cmFwIC5hbG0tcGFnaW5nLWxvYWRpbmcge1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICBvcGFjaXR5OiAxOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5wYWdpbmF0aW9uIHtcbiAgICBwYWRkaW5nOiA0OHB4IDMwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAgIC5wYWdpbmF0aW9uOmJlZm9yZSwgLnBhZ2luYXRpb246YWZ0ZXIge1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBoZWlnaHQ6IDlweDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJSBhdXRvOyB9XG4gICAgLnBhZ2luYXRpb24gLnBhZ2UtbnVtYmVycyB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogMzZweDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDEwcHggNXB4O1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7IH1cbiAgICAgIC5wYWdpbmF0aW9uIC5wYWdlLW51bWJlcnMucHJldiwgLnBhZ2luYXRpb24gLnBhZ2UtbnVtYmVycy5uZXh0IHtcbiAgICAgICAgd2lkdGg6IDgwcHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDsgfVxuICB1bC5hbG0tcGFnaW5nIHtcbiAgICBwYWRkaW5nOiA0OHB4IDMwcHg7IH1cbiAgICB1bC5hbG0tcGFnaW5nOmJlZm9yZSwgdWwuYWxtLXBhZ2luZzphZnRlciB7XG4gICAgICB3aWR0aDogMjBweDtcbiAgICAgIGhlaWdodDogOXB4O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIGF1dG87IH1cbiAgICB1bC5hbG0tcGFnaW5nID4gbGkge1xuICAgICAgbWFyZ2luOiAwIDJweDsgfVxuICAgICAgdWwuYWxtLXBhZ2luZyA+IGxpIGEge1xuICAgICAgICB3aWR0aDogODBweDtcbiAgICAgICAgaGVpZ2h0OiAzNnB4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4OyB9XG4gICAgICB1bC5hbG0tcGFnaW5nID4gbGkubnVtIGEge1xuICAgICAgICB3aWR0aDogMzZweDtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4OyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogSEVSTyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuI2hlcm9fYWx0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDI5MHB4O1xuICBtaW4taGVpZ2h0OiAyOTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJiNTljMztcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyIGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgei1pbmRleDogMTU7IH1cbiAgI2hlcm9fYWx0LmJsb2cgaDEsICNoZXJvX2FsdC5zZWFyY2ggaDEge1xuICAgIHdpZHRoOiA3MCU7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDsgfVxuICAjaGVyb19hbHQuYmxvZyAuaW5uZXIsICNoZXJvX2FsdC5zZWFyY2ggLmlubmVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogNjBweDtcbiAgICB0b3A6IDUwJTtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMTIwcHgpO1xuICAgIG1heC13aWR0aDogbm9uZTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7IH1cbiAgI2hlcm9fYWx0IC5ieWxpbmUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAxLjVlbSAwIDA7IH1cbiAgICAjaGVyb19hbHQgLmJ5bGluZSAuaGVhZHNob3Qge1xuICAgICAgd2lkdGg6IDQ2cHg7XG4gICAgICBoZWlnaHQ6IDQ2cHg7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDQxO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogMjVweDtcbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxO1xuICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciB0b3A7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gICAgI2hlcm9fYWx0IC5ieWxpbmUgcCwgI2hlcm9fYWx0IC5ieWxpbmUgYmxvY2txdW90ZSwgI2hlcm9fYWx0IC5ieWxpbmUgY2l0ZSB7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBsaW5lLWhlaWdodDogMS4zZW07XG4gICAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAgICAgI2hlcm9fYWx0IC5ieWxpbmUgcCBzcGFuLCAjaGVyb19hbHQgLmJ5bGluZSBibG9ja3F1b3RlIHNwYW4sICNoZXJvX2FsdCAuYnlsaW5lIGNpdGUgc3BhbiB7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cbiAgICAgICNoZXJvX2FsdCAuYnlsaW5lIHAgYSwgI2hlcm9fYWx0IC5ieWxpbmUgYmxvY2txdW90ZSBhLCAjaGVyb19hbHQgLmJ5bGluZSBjaXRlIGEge1xuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gICAgICAgICNoZXJvX2FsdCAuYnlsaW5lIHAgYTpob3ZlciwgI2hlcm9fYWx0IC5ieWxpbmUgYmxvY2txdW90ZSBhOmhvdmVyLCAjaGVyb19hbHQgLmJ5bGluZSBjaXRlIGE6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjZmZmZmZmOyB9XG4gICNoZXJvX2FsdC5ncmFkX29yYW5nZV9wdXJwbGVkYXJrIHtcbiAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxO1xuICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KDMwZGVnLCAjZmY2ZTQyIDAlLCAjNzQxNzgyIDUwJSwgIzAwMDA0MSAxMDAlKTtcbiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgzMGRlZywgI2ZmNmU0MiAwJSwgIzc0MTc4MiA1MCUsICMwMDAwNDEgMTAwJSk7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDMwZGVnLCAjZmY2ZTQyIDAlLCAjNzQxNzgyIDUwJSwgIzAwMDA0MSAxMDAlKTtcbiAgICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudCggc3RhcnRDb2xvcnN0cj0nI2ZmNmU0MicsIGVuZENvbG9yc3RyPScjMDAwMDQxJyxHcmFkaWVudFR5cGU9MSApOyB9XG4gICNoZXJvX2FsdDpiZWZvcmUge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgcmlnaHQ6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgY29udGVudDogJyc7XG4gICAgei1pbmRleDogLTE7IH1cbiAgI2hlcm9fYWx0IC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gODBweCk7XG4gICAgbWF4LXdpZHRoOiAxMzYwcHg7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDI5MHB4O1xuICAgIHotaW5kZXg6IDEwO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgI2hlcm9fYWx0IC5pbm5lciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDUwJTtcbiAgICB0b3A6IDUwJTtcbiAgICB3aWR0aDogNzAlO1xuICAgIG1heC13aWR0aDogOTAwcHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IH1cbiAgI2hlcm9fYWx0IGgxIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB3aWR0aDogNTAlO1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgZm9udC1zaXplOiAyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTFlbTtcbiAgICBmb250LWZhbWlseTogXCJTb3VyY2UgU2FucyBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGNvbG9yOiAjZmY2ZTQyO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDRweDsgfVxuICAjaGVyb19hbHQgLnN1YmhlYWRpbmcge1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDEuMjJlbTtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuXG4jaGVybyB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgaGVpZ2h0OiA1MjBweDtcbiAgbWluLWhlaWdodDogNTIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYjU5YzM7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHotaW5kZXg6IDE1OyB9XG4gICNoZXJvOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICBjb250ZW50OiAnJztcbiAgICB6LWluZGV4OiAtMTsgfVxuICAjaGVybyAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAvKmRpc3BsYXk6ZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOyovXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA4MHB4KTtcbiAgICBtYXgtd2lkdGg6IDEzNjBweDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogNTIwcHg7XG4gICAgei1pbmRleDogMTA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICNoZXJvIC5pbm5lciB7XG4gICAgLypkaXNwbGF5OmZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgbWFyZ2luOjAgYXV0bzsqL1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgd2lkdGg6IDcwJTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsgfVxuICAjaGVybyBoMSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW46IDAgMCAxMjBweDtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgZm9udC1zaXplOiAzLjVlbTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxldHRlci1zcGFjaW5nOiAwLjFlbTtcbiAgICBjb2xvcjogI2ZmNmU0MjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmZmZmY7IH1cbiAgICAjaGVybyBoMTpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiAxMDAlO1xuICAgICAgbWFyZ2luLWxlZnQ6IC0xcHg7XG4gICAgICB3aWR0aDogMnB4O1xuICAgICAgaGVpZ2h0OiA5MHB4O1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOyB9XG4gICAgI2hlcm8gaDE6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdG9wOiBjYWxjKDEwMCUgKyA5MHB4KTtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtNnB4O1xuICAgICAgd2lkdGg6IDEycHg7XG4gICAgICBoZWlnaHQ6IDEycHg7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgICBib3JkZXItcmFkaXVzOiA2cHg7IH1cbiAgI2hlcm8gcCwgI2hlcm8gYmxvY2txdW90ZSwgI2hlcm8gY2l0ZSB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAgICNoZXJvIHAgYSwgI2hlcm8gYmxvY2txdW90ZSBhLCAjaGVybyBjaXRlIGEge1xuICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAgICNoZXJvIHAgYTpob3ZlciwgI2hlcm8gYmxvY2txdW90ZSBhOmhvdmVyLCAjaGVybyBjaXRlIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzJiNTljMzsgfVxuICAjaGVybyAuY3RhX2dyb3VwIC5idG4ge1xuICAgIG1hcmdpbjogMCAwIDAgNDBweDsgfVxuICAgICNoZXJvIC5jdGFfZ3JvdXAgLmJ0bjpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbjogMDsgfVxuICAjaGVybyAucG9zdF9ub3RlIHtcbiAgICBtYXJnaW46IDAuNzVlbSAwIDAgMDsgfVxuICAgICNoZXJvIC5wb3N0X25vdGUgYSB7XG4gICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7IH1cbiAgICAgICNoZXJvIC5wb3N0X25vdGUgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG5cbiNsYXRlc3RfbmV3cyB7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjNzA3MDcwOyB9XG4gICNsYXRlc3RfbmV3cyAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAjbGF0ZXN0X25ld3MgLmxuX3dyYXAge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICNsYXRlc3RfbmV3cyAubG5fbGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAzMHB4IDIwcHggMzBweCAwO1xuICAgIGZvbnQtc2l6ZTogMS4yMmVtO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICNmZjZlNDI7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cbiAgI2xhdGVzdF9uZXdzIC5sbl9saW5rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDMwcHggMzBweCAzMHB4IDA7XG4gICAgZm9udC1zaXplOiAxLjIyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTVlbTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgICAjbGF0ZXN0X25ld3MgLmxuX2xpbms6YWZ0ZXIge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgcmlnaHQ6IDEwcHg7XG4gICAgICB0b3A6IGNhbGMoNTAlICsgMnB4KTtcbiAgICAgIHdpZHRoOiAwO1xuICAgICAgaGVpZ2h0OiAwO1xuICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgIGJvcmRlci13aWR0aDogNnB4IDAgNnB4IDEwcHg7XG4gICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZjZlNDI7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzOyB9XG4gICAgI2xhdGVzdF9uZXdzIC5sbl9saW5rOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gICAgICAjbGF0ZXN0X25ld3MgLmxuX2xpbms6aG92ZXI6YWZ0ZXIge1xuICAgICAgICByaWdodDogMHB4OyB9XG5cbiNhbGVydF9iYXIge1xuICBib3JkZXItdG9wOiAxcHggc29saWQgIzcwNzA3MDsgfVxuICAjYWxlcnRfYmFyIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICNhbGVydF9iYXIgLmFsZXJ0X2Jhcl93cmFwIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDMwcHggMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAjYWxlcnRfYmFyIC5hbGVydF9iYXJfd3JhcCAqIHtcbiAgICAgIGNvbG9yOiAjZmZmZmZmOyB9XG4gICAgI2FsZXJ0X2JhciAuYWxlcnRfYmFyX3dyYXAgYSB7XG4gICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgI2FsZXJ0X2JhciAuYWxlcnRfYmFyX3dyYXAgYTpob3ZlciB7XG4gICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG5cbiNoZXJvX3NzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDUyMHB4O1xuICBtaW4taGVpZ2h0OiA1MjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwMDA0MTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGF1dG8gMTAwJTtcbiAgei1pbmRleDogMTU7IH1cbiAgI2hlcm9fc3MgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgLypkaXNwbGF5OmZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmxlZnQ7Ki9cbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1pbi1oZWlnaHQ6IDUyMHB4O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgei1pbmRleDogMTA7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAjaGVyb19zcyAuaW5uZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGxlZnQ7XG4gICAgd2lkdGg6IDYwJTtcbiAgICBoZWlnaHQ6IDEwMCU7IH1cbiAgI2hlcm9fc3MgLnNzX2xvZ28ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogMCAwIDJlbTtcbiAgICBtYXgtd2lkdGg6IDIyNXB4OyB9XG4gICNoZXJvX3NzIGgxIHtcbiAgICBtYXJnaW46IDAgMCAyZW07XG4gICAgY29sb3I6ICNmZmZmZmY7IH1cbiAgI2hlcm9fc3MgcCwgI2hlcm9fc3MgYmxvY2txdW90ZSwgI2hlcm9fc3MgY2l0ZSB7XG4gICAgZm9udC1zaXplOiAxLjFlbTtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuICAgICNoZXJvX3NzIHAgYSwgI2hlcm9fc3MgYmxvY2txdW90ZSBhLCAjaGVyb19zcyBjaXRlIGEge1xuICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAgICNoZXJvX3NzIHAgYTpob3ZlciwgI2hlcm9fc3MgYmxvY2txdW90ZSBhOmhvdmVyLCAjaGVyb19zcyBjaXRlIGE6aG92ZXIge1xuICAgICAgICBjb2xvcjogIzJiNTljMzsgfVxuICAjaGVyb19zcyAuY3RhX2dyb3VwIC5idG4ge1xuICAgIG1hcmdpbjogMCAwIDAgNDBweDsgfVxuICAgICNoZXJvX3NzIC5jdGFfZ3JvdXAgLmJ0bjpmaXJzdC1vZi10eXBlIHtcbiAgICAgIG1hcmdpbjogMDsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAjaGVyb19hbHQuYmxvZyBoMSwgI2hlcm9fYWx0LnNlYXJjaCBoMSB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgI2hlcm9fYWx0LmJsb2cgLmlubmVyLCAjaGVyb19hbHQuc2VhcmNoIC5pbm5lciB7XG4gICAgbGVmdDogMDtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAjaGVyb19hbHQgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpOyB9XG4gICNoZXJvX2FsdCAuaW5uZXIge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gICNoZXJvX2FsdCBoMSB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgI2hlcm8ge1xuICAgIGhlaWdodDogNTIwcHg7XG4gICAgbWluLWhlaWdodDogNTIwcHg7IH1cbiAgICAjaGVybyAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgIG1pbi1oZWlnaHQ6IDUyMHB4OyB9XG4gICAgI2hlcm8gLmlubmVyIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgI2hlcm8gaDEge1xuICAgICAgbWFyZ2luOiAwIDAgODBweDtcbiAgICAgIGZvbnQtc2l6ZTogM2VtOyB9XG4gICAgICAjaGVybyBoMTpiZWZvcmUge1xuICAgICAgICBoZWlnaHQ6IDUwcHg7IH1cbiAgICAgICNoZXJvIGgxOmFmdGVyIHtcbiAgICAgICAgdG9wOiBjYWxjKDEwMCUgKyA1MHB4KTsgfVxuICAgICNoZXJvIHAgYnIsICNoZXJvIGJsb2NrcXVvdGUgYnIsICNoZXJvIGNpdGUgYnIge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAgICNoZXJvIC5jdGFfZ3JvdXAgLmJ0biB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA0MDBweDtcbiAgICAgIG1hcmdpbjogMjBweCBhdXRvIDA7IH1cbiAgICAgICNoZXJvIC5jdGFfZ3JvdXAgLmJ0bjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87IH1cbiAgI2xhdGVzdF9uZXdzIC5sbl93cmFwIHtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7IH1cbiAgI2xhdGVzdF9uZXdzIC5sbl9saW5rIHtcbiAgICBsaW5lLWhlaWdodDogMS4zZW07XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAjYWxlcnRfYmFyIC5hbGVydF9iYXJfd3JhcCB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpOyB9XG4gICNoZXJvX3NzIHtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgbWluLWhlaWdodDogMDsgfVxuICAgICNoZXJvX3NzIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgbWluLWhlaWdodDogMDtcbiAgICAgIHBhZGRpbmc6IDQwcHggMjBweDsgfVxuICAgICNoZXJvX3NzIC5pbm5lciB7XG4gICAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgI2hlcm8gLmlubmVyIHtcbiAgICB3aWR0aDogOTAlOyB9XG4gICNoZXJvIGgxIHtcbiAgICBmb250LXNpemU6IDNlbTsgfVxuICAjYWxlcnRfYmFyIC5hbGVydF9iYXJfd3JhcCB7XG4gICAgd2lkdGg6IDcwJTsgfVxuICAjaGVyb19zcyB7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTcwJSB0b3A7IH1cbiAgICAjaGVyb19zcyAuaW5uZXIge1xuICAgICAgd2lkdGg6IDUwJTsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNMSURFUlMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5zbGljay1zbGlkZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAtd2Via2l0LXRvdWNoLWNhbGxvdXQ6IG5vbmU7XG4gIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXVzZXItc2VsZWN0OiBub25lO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLnNsaWNrLWxpc3Qge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cbiAgLnNsaWNrLWxpc3Q6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgLnNsaWNrLWxpc3QuZHJhZ2dpbmcge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjdXJzb3I6IGhhbmQ7IH1cblxuLnNsaWNrLXNsaWRlciAuc2xpY2stdHJhY2ssXG4uc2xpY2stc2xpZGVyIC5zbGljay1saXN0IHtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApOyB9XG5cbi5zbGljay10cmFjayB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbGVmdDogMDtcbiAgdG9wOiAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuICAuc2xpY2stdHJhY2s6YmVmb3JlLCAuc2xpY2stdHJhY2s6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLnNsaWNrLXRyYWNrOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDsgfVxuICAuc2xpY2stbG9hZGluZyAuc2xpY2stdHJhY2sge1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4uc2xpY2stc2xpZGUge1xuICBmbG9hdDogbGVmdDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIGRpc3BsYXk6IG5vbmU7IH1cbiAgW2Rpcj1cInJ0bFwiXSAuc2xpY2stc2xpZGUge1xuICAgIGZsb2F0OiByaWdodDsgfVxuICAuc2xpY2stc2xpZGUgaW1nIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfVxuICAuc2xpY2stc2xpZGUuc2xpY2stbG9hZGluZyBpbWcge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLnNsaWNrLXNsaWRlLmRyYWdnaW5nIGltZyB7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7IH1cbiAgLnNsaWNrLWluaXRpYWxpemVkIC5zbGljay1zbGlkZSB7XG4gICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLnNsaWNrLWxvYWRpbmcgLnNsaWNrLXNsaWRlIHtcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgLnNsaWNrLXZlcnRpY2FsIC5zbGljay1zbGlkZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG5cbi5zbGljay1hcnJvdy5zbGljay1oaWRkZW4ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qIFNsaWRlciAqL1xuLnNsaWNrLWxvYWRpbmcgLnNsaWNrLWxpc3Qge1xuICBiYWNrZ3JvdW5kOiAjZmZmZmZmIHVybCguLi8uLi9pbWFnZXMvbG9hZGluZy5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyOyB9XG5cbi8qIEljb25zICovXG4vKkBpZiAkc2xpY2stZm9udC1mYW1pbHkgPT0gXCJzbGlja1wiIHtcbiAgICBAZm9udC1mYWNlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwic2xpY2tcIjtcbiAgICAgICAgc3JjOiBzbGljay1mb250LXVybChcInNsaWNrLmVvdFwiKTtcbiAgICAgICAgc3JjOiBzbGljay1mb250LXVybChcInNsaWNrLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHNsaWNrLWZvbnQtdXJsKFwic2xpY2sud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCBzbGljay1mb250LXVybChcInNsaWNrLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgc2xpY2stZm9udC11cmwoXCJzbGljay5zdmcjc2xpY2tcIikgZm9ybWF0KFwic3ZnXCIpO1xuICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgfVxufSovXG4vKiBBcnJvd3MgKi9cbi5zbGljay1wcmV2LFxuLnNsaWNrLW5leHQge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDIwcHg7XG4gIHdpZHRoOiAyMHB4O1xuICBsaW5lLWhlaWdodDogMHB4O1xuICBmb250LXNpemU6IDBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgY29sb3I6IHRyYW5zcGFyZW50O1xuICB0b3A6IDUwJTtcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTtcbiAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIC01MCUpO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtNTAlKTtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiBub25lO1xuICBvdXRsaW5lOiBub25lOyB9XG4gIC5zbGljay1wcmV2OmhvdmVyLCAuc2xpY2stcHJldjpmb2N1cyxcbiAgLnNsaWNrLW5leHQ6aG92ZXIsXG4gIC5zbGljay1uZXh0OmZvY3VzIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIGNvbG9yOiB0cmFuc3BhcmVudDsgfVxuICAgIC5zbGljay1wcmV2OmhvdmVyOmJlZm9yZSwgLnNsaWNrLXByZXY6Zm9jdXM6YmVmb3JlLFxuICAgIC5zbGljay1uZXh0OmhvdmVyOmJlZm9yZSxcbiAgICAuc2xpY2stbmV4dDpmb2N1czpiZWZvcmUge1xuICAgICAgY29sb3I6ICMyYjU5YzM7IH1cbiAgLnNsaWNrLXByZXYuc2xpY2stZGlzYWJsZWQ6YmVmb3JlLFxuICAuc2xpY2stbmV4dC5zbGljay1kaXNhYmxlZDpiZWZvcmUge1xuICAgIG9wYWNpdHk6IDAuMjU7IH1cbiAgLnNsaWNrLXByZXY6YmVmb3JlLFxuICAuc2xpY2stbmV4dDpiZWZvcmUge1xuICAgIC8qZm9udC1mYW1pbHk6ICRzbGljay1mb250LWZhbWlseTtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTtcbiAgICAgICAgY29sb3I6ICRzbGljay1hcnJvdy1jb2xvcjtcbiAgICAgICAgb3BhY2l0eTogJHNsaWNrLW9wYWNpdHktZGVmYXVsdDtcbiAgICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7Ki9cbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiA1MCU7XG4gICAgbWFyZ2luOiAtOXB4O1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMThweDtcbiAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgY29sb3I6ICNmZjZlNDI7XG4gICAgZm9udC1mYW1pbHk6ICdkYXNoaWNvbnMnO1xuICAgIGNvbnRlbnQ6ICdcXGY1MjInO1xuICAgIGZvbnQtc2l6ZTogMjZweDtcbiAgICB0ZXh0LWluZGVudDogMDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAudGVzdF9zbGlkZXIgLnNsaWNrLXByZXYsIC50ZXN0X3NsaWRlclxuICAuc2xpY2stbmV4dCB7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiAzMXB4OyB9XG4gICAgLnRlc3Rfc2xpZGVyIC5zbGljay1wcmV2OmJlZm9yZSwgLnRlc3Rfc2xpZGVyXG4gICAgLnNsaWNrLW5leHQ6YmVmb3JlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIGxlZnQ6IDA7XG4gICAgICB0b3A6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICB3aWR0aDogMzFweDtcbiAgICAgIGhlaWdodDogNDBweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICMwMDAwNDE7XG4gICAgICAvKmZvbnQtZmFtaWx5OiRzc2FucztcbiAgICAgICAgICAgIGNvbnRlbnQ6Jz4nO1xuICAgICAgICAgICAgZm9udC1zaXplOjI2cHg7XG4gICAgICAgICAgICB0ZXh0LWluZGVudDowOyovXG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCguLi8uLi9pbWFnZXMvc2xpZGVyLWFycm93LWFsdC5zdmcpO1xuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cblxuLnNsaWNrLXByZXYge1xuICBsZWZ0OiAtNDBweDsgfVxuICBbZGlyPVwicnRsXCJdIC5zbGljay1wcmV2IHtcbiAgICBsZWZ0OiBhdXRvO1xuICAgIHJpZ2h0OiAtNDBweDsgfVxuICAuc2xpY2stcHJldjpiZWZvcmUge1xuICAgIC8qY29udGVudDogJHNsaWNrLXByZXYtY2hhcmFjdGVyO1xuICAgICAgICBbZGlyPVwicnRsXCJdICYge1xuICAgICAgICAgICAgY29udGVudDogJHNsaWNrLW5leHQtY2hhcmFjdGVyO1xuICAgICAgICB9Ki9cbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyB9XG5cbi5zbGljay1uZXh0IHtcbiAgcmlnaHQ6IC00MHB4OyB9XG4gIFtkaXI9XCJydGxcIl0gLnNsaWNrLW5leHQge1xuICAgIGxlZnQ6IC00MHB4O1xuICAgIHJpZ2h0OiBhdXRvOyB9XG4gIC5zbGljay1uZXh0OmJlZm9yZSB7XG4gICAgLypjb250ZW50OiAkc2xpY2stbmV4dC1jaGFyYWN0ZXI7XG4gICAgICAgIFtkaXI9XCJydGxcIl0gJiB7XG4gICAgICAgICAgICBjb250ZW50OiAkc2xpY2stcHJldi1jaGFyYWN0ZXI7XG4gICAgICAgIH0qLyB9XG5cbi8qIERvdHMgKi9cbi5zbGljay1kb3R0ZWQuc2xpY2stc2xpZGVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4uc2xpY2stZG90cyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAtMjVweDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICB3aWR0aDogMTAwJTsgfVxuICAuc2xpY2stZG90cyBsaSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgbWFyZ2luOiAwIDVweDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5zbGljay1kb3RzIGxpIGJ1dHRvbiB7XG4gICAgICBib3JkZXI6IDA7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgd2lkdGg6IDIwcHg7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgbGluZS1oZWlnaHQ6IDBweDtcbiAgICAgIGZvbnQtc2l6ZTogMHB4O1xuICAgICAgY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgcGFkZGluZzogNXB4O1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICAuc2xpY2stZG90cyBsaSBidXR0b246aG92ZXIsIC5zbGljay1kb3RzIGxpIGJ1dHRvbjpmb2N1cyB7XG4gICAgICAgIG91dGxpbmU6IG5vbmU7IH1cbiAgICAgICAgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOmhvdmVyOmJlZm9yZSwgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOmZvY3VzOmJlZm9yZSB7XG4gICAgICAgICAgb3BhY2l0eTogMTsgfVxuICAgICAgLnNsaWNrLWRvdHMgbGkgYnV0dG9uOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICBjb250ZW50OiBcIuKAolwiO1xuICAgICAgICB3aWR0aDogMjBweDtcbiAgICAgICAgaGVpZ2h0OiAyMHB4O1xuICAgICAgICBmb250LWZhbWlseTogXCJzbGlja1wiO1xuICAgICAgICBmb250LXNpemU6IDZweDtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICBvcGFjaXR5OiAwLjI1O1xuICAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICAgICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsgfVxuICAgIC5zbGljay1kb3RzIGxpLnNsaWNrLWFjdGl2ZSBidXR0b246YmVmb3JlIHtcbiAgICAgIGNvbG9yOiBibGFjaztcbiAgICAgIG9wYWNpdHk6IDAuNzU7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnNsaWNrLXByZXYge1xuICAgIGxlZnQ6IC0yMHB4OyB9XG4gICAgW2Rpcj1cInJ0bFwiXSAuc2xpY2stcHJldiB7XG4gICAgICBsZWZ0OiBhdXRvO1xuICAgICAgcmlnaHQ6IC0yMHB4OyB9XG4gICAgLnRlc3Rfc2xpZGVyIC5zbGljay1wcmV2IHtcbiAgICAgIGxlZnQ6IDA7IH1cbiAgLnNsaWNrLW5leHQge1xuICAgIHJpZ2h0OiAtMjBweDsgfVxuICAgIFtkaXI9XCJydGxcIl0gLnNsaWNrLW5leHQge1xuICAgICAgbGVmdDogLTIwcHg7XG4gICAgICByaWdodDogYXV0bzsgfVxuICAgIC50ZXN0X3NsaWRlciAuc2xpY2stbmV4dCB7XG4gICAgICByaWdodDogMDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNMSURFUlMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5pbWdfZ2FsbGVyeV9zbGlkZXIge1xuICBtYXJnaW46IDQwcHggMCAwIDA7XG4gIG1hcmdpbi1sZWZ0OiAwICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMzMwcHg7IH1cbiAgLmltZ19nYWxsZXJ5X3NsaWRlciAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG4gIC5pbWdfZ2FsbGVyeV9zbGlkZXIgbGkge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBoZWlnaHQ6IDMzMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICB6LWluZGV4OiAxMDAwOyB9XG4gICAgLmltZ19nYWxsZXJ5X3NsaWRlciBsaSA+IC5pbm5lciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgcGFkZGluZzogMCA1cHg7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuaW1nX2dhbGxlcnlfc2xpZGVyIGxpIGltZyB7XG4gICAgICBoZWlnaHQ6IDEwMCU7IH1cblxuLnRlc3Rfc2xpZGVyIHtcbiAgbWFyZ2luLWxlZnQ6IDAgIWltcG9ydGFudDsgfVxuICAudGVzdF9zbGlkZXIgKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuICAudGVzdF9zbGlkZXIgLnNsaWNrLXRyYWNrIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLnRlc3Rfc2xpZGVyIC5zbGljay1saXN0IHtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7IH1cbiAgLnRlc3Rfc2xpZGVyIGxpIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIHotaW5kZXg6IDEwMDA7IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLmltZ19nYWxsZXJ5X3NsaWRlciB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpO1xuICAgIG1hcmdpbjogNDBweCBhdXRvIDA7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBGT1JNIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jY29udGVudCAuZ2Zvcm1fd3JhcHBlciB7XG4gIHBhZGRpbmc6IDE2cHggMDtcbiAgLyogQ09NUExFWCAqLyB9XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyICoge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyB7XG4gICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICAgIGxpc3Qtc3R5bGU6IG5vbmUgIWltcG9ydGFudDsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXJnaW46IDAgMCAxLjI1ZW07XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBsaXN0LXN0eWxlOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICB6LWluZGV4OiAxMDA7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkubXNnIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMjBweDsgfVxuICAgICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLm1zZyBsYWJlbCxcbiAgICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5tc2cgLmdmaWVsZF9sYWJlbCB7XG4gICAgICAgICAgbGVmdDogMjBweDtcbiAgICAgICAgICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7IH1cbiAgICAgICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLm1zZyBsYWJlbC5mbG9hdF9sYWJlbCxcbiAgICAgICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLm1zZyAuZ2ZpZWxkX2xhYmVsLmZsb2F0X2xhYmVsIHtcbiAgICAgICAgICAgIGxlZnQ6IDA7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfbGlzdF9pbmxpbmUge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5yZXZlYWxlZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZmllbGRfaHRtbCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDJlbTsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9sZWZ0X3RoaXJkLCAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX21pZGRsZV90aGlyZCwgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9yaWdodF90aGlyZCB7XG4gICAgICAgIHdpZHRoOiAzMy40JTsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9sZWZ0X3RoaXJkLCAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX21pZGRsZV90aGlyZCB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfcmlnaHRfdGhpcmQge1xuICAgICAgICB3aWR0aDogMzMuMiU7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfbGVmdF9oYWxmLCAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX3JpZ2h0X2hhbGYge1xuICAgICAgICB3aWR0aDogNTAlOyB9XG4gICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX2xlZnRfaGFsZiB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfbGlzdF8zY29sIHVsLmdmaWVsZF9yYWRpbyBsaSB7XG4gICAgICAgIHdpZHRoOiAzMy4zMyUgIWltcG9ydGFudDsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5ub19mbG9hdCAuZ2ZpZWxkX2xhYmVsIHtcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYzsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5pbml0X2Zsb2F0X2xhYmVsIC5nZmllbGRfbGFiZWwsICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuaW5pdF9zdGF0aWNfbGFiZWwgLmdmaWVsZF9sYWJlbCB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgdG9wOiAtMS4yZW07XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICAgICAgY29sb3I6ICMwMDAwNDE7XG4gICAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuaW5pdF9mbG9hdF9sYWJlbCAuZ2ZpZWxkX2xhYmVsIC5nZmllbGRfcmVxdWlyZWQsICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuaW5pdF9zdGF0aWNfbGFiZWwgLmdmaWVsZF9sYWJlbCAuZ2ZpZWxkX3JlcXVpcmVkIHtcbiAgICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5pbml0X3N0YXRpY19sYWJlbCAuZ2ZpZWxkX2xhYmVsIHtcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYzsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5sb25nX2xhYmVsIC5nZmllbGRfbGFiZWwsXG4gICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmxvbmdfbGFiZWwgLmdpbnB1dF9jb21wbGV4IGxhYmVsIHtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNGVtOyB9XG4gICAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkubG9uZ19sYWJlbCAuZ2ZpZWxkX2xhYmVsLmZsb2F0X2xhYmVsLFxuICAgICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmxvbmdfbGFiZWwgLmdpbnB1dF9jb21wbGV4IGxhYmVsLmZsb2F0X2xhYmVsIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTRweDsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaTpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2Zvcm1faGlkZGVuIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogMDsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS50d29fY29sX2FkZHJlc3Mge1xuICAgICAgICBtYXJnaW46IDA7IH1cbiAgICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS50d29fY29sX2FkZHJlc3MgLmdpbnB1dF9jb21wbGV4IC5naW5wdXRfZnVsbC5hZGRyZXNzX2xpbmVfMSxcbiAgICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS50d29fY29sX2FkZHJlc3MgLmdpbnB1dF9jb21wbGV4IC5naW5wdXRfZnVsbC5hZGRyZXNzX2xpbmVfMiB7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDhweCk7XG4gICAgICAgICAgbWFyZ2luOiAwIDAgMS4yNWVtO1xuICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDA7XG4gICAgICAgICAgei1pbmRleDogMTAyOyB9XG4gICAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkudHdvX2NvbF9hZGRyZXNzIC5naW5wdXRfY29tcGxleCAuZ2lucHV0X2Z1bGwuYWRkcmVzc19saW5lXzIge1xuICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4OyB9XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfbGFiZWwsXG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCBsYWJlbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBmb250LWZhbWlseTogXCJTb3VyY2UgU2FucyBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc2l6ZTogMTAwJTtcbiAgICBsZXR0ZXItc3BhY2luZzogMDtcbiAgICBsaW5lLWhlaWdodDogY2FsYygyLjZlbSArIDJweCk7XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICBjb2xvcjogIzAwMDA0MTtcbiAgICB0cmFuc2l0aW9uOiB0b3AgMC4zcywgcGFkZGluZyAwLjNzLCBmb250LXNpemUgMC4zcywgY29sb3IgMC4zcztcbiAgICB6LWluZGV4OiAxMDY7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfbGFiZWwgLmdmaWVsZF9yZXF1aXJlZCxcbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggbGFiZWwgLmdmaWVsZF9yZXF1aXJlZCB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB0b3A6IC0wLjI1ZW07XG4gICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIGZvbnQtc2l6ZTogODAlO1xuICAgICAgY29sb3I6ICMwMDAwNDE7IH1cbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2ZpZWxkX2xhYmVsLmZsb2F0X2xhYmVsLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCBsYWJlbC5mbG9hdF9sYWJlbCB7XG4gICAgICB0b3A6IC0xLjNlbTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMThweDtcbiAgICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgICAgei1pbmRleDogMTA2OyB9XG4gICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2ZpZWxkX2xhYmVsLmZsb2F0X2xhYmVsIC5nZmllbGRfcmVxdWlyZWQsXG4gICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggbGFiZWwuZmxvYXRfbGFiZWwgLmdmaWVsZF9yZXF1aXJlZCB7XG4gICAgICAgIGNvbG9yOiAjMDAwMDQxOyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmaWVsZF9sYWJlbC5nZmllbGRfbGFiZWxfYmVmb3JlX2NvbXBsZXgsXG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb21wbGV4IGxhYmVsLmdmaWVsZF9sYWJlbF9iZWZvcmVfY29tcGxleCB7XG4gICAgICBwb3NpdGlvbjogc3RhdGljO1xuICAgICAgbWFyZ2luOiAwIDAgMWVtO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxOHB4O1xuICAgICAgY29sb3I6ICMwMDAwNDE7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfbGFiZWwuZ2ZpZWxkX2xhYmVsX2JlZm9yZV9jb21wbGV4IC5nZmllbGRfcmVxdWlyZWQsXG4gICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggbGFiZWwuZ2ZpZWxkX2xhYmVsX2JlZm9yZV9jb21wbGV4IC5nZmllbGRfcmVxdWlyZWQge1xuICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciBpbnB1dFt0eXBlPSd0ZXh0J10sXG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J251bWJlciddLFxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciBpbnB1dFt0eXBlPSd0ZWwnXSxcbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgdGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgaGVpZ2h0OiAyLjc4ZW07XG4gICAgbGluZS1oZWlnaHQ6IDIuNzhlbTtcbiAgICBmb250LWZhbWlseTogXCJTb3VyY2UgU2FucyBQcm9cIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZjtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgY29sb3I6ICMwMDAwNDE7XG4gICAgYmFja2dyb3VuZDogI2ZmZmZmZjtcbiAgICB0cmFuc2l0aW9uOiBib3JkZXItY29sb3IgMC4zczsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J3RleHQnXTpmb2N1cywgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgaW5wdXRbdHlwZT0ndGV4dCddOnZhbGlkLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J251bWJlciddOmZvY3VzLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J251bWJlciddOnZhbGlkLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J3RlbCddOmZvY3VzLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J3RlbCddOnZhbGlkLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIHRleHRhcmVhOmZvY3VzLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIHRleHRhcmVhOnZhbGlkIHtcbiAgICAgIG91dGxpbmU6IG5vbmU7XG4gICAgICBib3JkZXI6IG5vbmU7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgdGV4dGFyZWEge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGhlaWdodDogMTMwcHg7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTZlbTtcbiAgICBwYWRkaW5nOiA4cHggMTZweDsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciBpbnB1dFt0eXBlPSdoaWRkZW4nXSB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZmllbGRfc3VibGFiZWxfYmVsb3cgLmdpbnB1dF9jb250YWluZXIgbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMC43OGVtO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBjb2xvcjogIzAwMDA0MTsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZmllbGRfc3VibGFiZWxfYmVsb3cgLmdpbnB1dF9jb21wbGV4LmdpbnB1dF9jb250YWluZXIgbGFiZWwge1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5maWVsZF9zdWJsYWJlbF9iZWxvdyAuZ2lucHV0X2NvbXBsZXguZ2lucHV0X2NvbnRhaW5lciBsYWJlbC5mbG9hdF9sYWJlbCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgICBsaW5lLWhlaWdodDogMThweDsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuaW5zdHJ1Y3Rpb24ge1xuICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICBmb250LXNpemU6IDAuNzhlbTtcbiAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgY29sb3I6ICMwMDAwNDE7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb250YWluZXJfc2VsZWN0LFxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbnRhaW5lcl90ZXh0LFxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbnRhaW5lcl9lbWFpbCxcbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb250YWluZXJfcGhvbmUsXG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29udGFpbmVyX2RhdGUsXG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29udGFpbmVyX3dlYnNpdGUsXG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29udGFpbmVyX251bWJlciB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29udGFpbmVyX3RleHRhcmVhIHtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb250YWluZXJfc2VsZWN0LFxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggLmFkZHJlc3Nfc3RhdGUsXG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCAuYWRkcmVzc19jb3VudHJ5IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7XG4gICAgei1pbmRleDogMTA1OyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb250YWluZXJfc2VsZWN0OmFmdGVyLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCAuYWRkcmVzc19zdGF0ZTphZnRlcixcbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggLmFkZHJlc3NfY291bnRyeTphZnRlciB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMTZweDtcbiAgICAgIHRvcDogMjBweDtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgei1pbmRleDogLTE7XG4gICAgICB3aWR0aDogMTJweDtcbiAgICAgIGhlaWdodDogMTBweDtcbiAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybChcIi4uLy4uL2ltYWdlcy9zZWxlY3QtY2FyZXQuc3ZnXCIpIG5vLXJlcGVhdCByaWdodCBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgYXV0bzsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29udGFpbmVyX3NlbGVjdCBzZWxlY3QsXG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb21wbGV4IC5hZGRyZXNzX3N0YXRlIHNlbGVjdCxcbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggLmFkZHJlc3NfY291bnRyeSBzZWxlY3Qge1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgb3V0bGluZTogMDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDAgMTZweDtcbiAgICAgIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDIuNzhlbTtcbiAgICAgIGNvbG9yOiAjMDAwMDQxO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAtbW96LXVzZXItc2VsZWN0OiAtbW96LW5vbmU7XG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgIC1tb3otYXBwZWFyYW5jZTogcmFkaW8tY29udGFpbmVyO1xuICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgICAgIHotaW5kZXg6IDExMDtcbiAgICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29udGFpbmVyX3NlbGVjdCBzZWxlY3Q6Oi1tcy1leHBhbmQsXG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb21wbGV4IC5hZGRyZXNzX3N0YXRlIHNlbGVjdDo6LW1zLWV4cGFuZCxcbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggLmFkZHJlc3NfY291bnRyeSBzZWxlY3Q6Oi1tcy1leHBhbmQge1xuICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbnRhaW5lcl9yYWRpbyB7XG4gICAgbWFyZ2luLXRvcDogMDsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2ZpZWxkX3JhZGlvIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmc6IDA7XG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfcmFkaW8gPiBsaSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICB3aWR0aDogYXV0byAhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgIGZvbnQtc2l6ZTogMTAwJSAhaW1wb3J0YW50OyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmaWVsZF9yYWRpbyBsYWJlbCB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAvKmRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjsqL1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgbWFyZ2luOiAwIDAgNXB4O1xuICAgICAgcGFkZGluZzogMCAyNXB4O1xuICAgICAgZm9udC1zaXplOiAxZW0gIWltcG9ydGFudDtcbiAgICAgIGhlaWdodDogMi43OGVtO1xuICAgICAgbWF4LXdpZHRoOiBub25lICFpbXBvcnRhbnQ7XG4gICAgICBsaW5lLWhlaWdodDogMi43OGVtO1xuICAgICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICBmb250LXdlaWdodDogNDAwO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIGNvbG9yOiAjMDAwMDQxICFpbXBvcnRhbnQ7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfcmFkaW8gbGFiZWw6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAzcHg7XG4gICAgICAgIHRvcDogMThweDtcbiAgICAgICAgd2lkdGg6IDE0cHg7XG4gICAgICAgIGhlaWdodDogMTRweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMTRweCAxNHB4ICMyYjU5YzM7XG4gICAgICAgIHRyYW5zaXRpb246IDAuMnMgdHJhbnNmb3JtIGVhc2UtaW4tb3V0O1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApOyB9XG4gICAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2ZpZWxkX3JhZGlvIGxhYmVsOmFmdGVyIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB0b3A6IDE1cHg7XG4gICAgICAgIHdpZHRoOiAyMHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzJiNTljMztcbiAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgIHotaW5kZXg6IC0xOyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmaWVsZF9yYWRpbyBpbnB1dFt0eXBlPSdyYWRpbyddIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfcmFkaW8gaW5wdXRbdHlwZT0ncmFkaW8nXTpjaGVja2VkIH4gbGFiZWw6YmVmb3JlIHtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxKTsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbnRhaW5lcl9jaGVja2JveCB7XG4gICAgaGVpZ2h0OiAxMzBweDtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHBhZGRpbmc6IDI2cHggMTZweCAxNnB4O1xuICAgIGJhY2tncm91bmQ6ICNmZmZmZmY7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmaWVsZF9jaGVja2JveCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7IH1cbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2ZpZWxkX2NoZWNrYm94ID4gbGkge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgd2lkdGg6IGNhbGMoMzMuMzMzMyUgLSAxNXB4KSAhaW1wb3J0YW50O1xuICAgICAgbWFyZ2luOiAwIDAgMTBweCAzMHB4O1xuICAgICAgdmVydGljYWwtYWxpZ246IHRvcDsgfVxuICAgICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmaWVsZF9jaGVja2JveCA+IGxpOm50aC1vZi10eXBlKDJuICsgMSkge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfY2hlY2tib3ggbGFiZWwge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMCAwIDAgMjRweDtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgICAgZm9udC1zdHlsZTogbm9ybWFsICFpbXBvcnRhbnQ7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgICAgZm9udC1zaXplOiAwLjc4ZW0gIWltcG9ydGFudDtcbiAgICAgIGNvbG9yOiAjMDAwMDQxICFpbXBvcnRhbnQ7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfY2hlY2tib3ggbGFiZWw6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHdpZHRoOiAxNnB4O1xuICAgICAgICBoZWlnaHQ6IDE2cHg7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBGb250QXdlc29tZTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMnB4O1xuICAgICAgICBjb2xvcjogI2U4ZTlmMztcbiAgICAgICAgY29udGVudDogJ1xcZjAwYyc7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgYmFja2dyb3VuZDogI2U4ZTlmMztcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmaWVsZF9jaGVja2JveCBpbnB1dFt0eXBlPSdjaGVja2JveCddIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIG9wYWNpdHk6IDA7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZmllbGRfY2hlY2tib3ggaW5wdXRbdHlwZT0nY2hlY2tib3gnXTpjaGVja2VkIH4gbGFiZWw6YmVmb3JlIHtcbiAgICAgICAgY29sb3I6ICMwMDAwNDE7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLm5vX2xhYmVsIC5nZmllbGRfbGFiZWwge1xuICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLm5vX2xhYmVsIC5nZmllbGRfY2hlY2tib3ggbGFiZWwge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6IDFlbTtcbiAgICBjb2xvcjogIzAwMDA0MTsgfVxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5ub19sYWJlbCAuZ2ZpZWxkX2NoZWNrYm94IGxhYmVsOmFmdGVyIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgdG9wOiAtMC4yNWVtO1xuICAgICAgZm9udC1zaXplOiA4MCU7XG4gICAgICBjb2xvcjogIzAwMDA0MTtcbiAgICAgIGNvbnRlbnQ6ICcqJzsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXgge1xuICAgIHotaW5kZXg6IDEwMTtcbiAgICAvKi5hZGRyZXNzX3N0YXRlIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgIHotaW5kZXg6LTE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSovIH1cbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggLmdpbnB1dF9sZWZ0LFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCAuZ2lucHV0X3JpZ2h0IHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDhweCk7XG4gICAgICBtYXJnaW46IDAgMCAxLjI1ZW07XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgei1pbmRleDogMTAyOyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb21wbGV4IC5naW5wdXRfcmlnaHQge1xuICAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7IH1cbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggaW5wdXRbdHlwZT0ndGV4dCddLFxuICAgICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCBpbnB1dFt0eXBlPSdudW1iZXInXSxcbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbXBsZXggaW5wdXRbdHlwZT0ndGVsJ10sXG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb21wbGV4IHRleHRhcmVhIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmNoYXJsZWZ0LFxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvdW50ZXIge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2ZpZWxkX2Vycm9yIHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogbm9uZTsgfVxuICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAudmFsaWRhdGlvbl9lcnJvciB7XG4gICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgbWFyZ2luOiAwIDAgMzBweDtcbiAgICBjb2xvcjogI2ZmNmU0MjtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBsaW5lLWhlaWdodDogMS40ZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC52YWxpZGF0aW9uX21lc3NhZ2Uge1xuICAgIG1hcmdpbjogMCAwIDMwcHg7XG4gICAgcGFkZGluZzogNXB4IDAgMCAxNnB4O1xuICAgIGZvbnQtZmFtaWx5OiBcIlNvdXJjZSBTYW5zIFByb1wiLCBzYW5zLXNlcmlmO1xuICAgIGNvbG9yOiAjZmY2ZTQyO1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICBsaW5lLWhlaWdodDogMS40ZW07IH1cbiAgICAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAudmFsaWRhdGlvbl9tZXNzYWdlLmluc3RydWN0aW9uIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAzMnB4O1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZy1sZWZ0OiAwOyB9XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyLmdmb3JtX3ZhbGlkYXRpb25fZXJyb3IgLmdmb3JtX2JvZHkgdWwgbGkuZ2ZpZWxkLmdmaWVsZF9lcnJvcjpub3QoLmdmX2xlZnRfaGFsZik6bm90KC5nZl9yaWdodF9oYWxmKSB7XG4gICAgbWF4LXdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7IH1cbiAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2Zvb3RlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gICAgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2Zvb3RlciAuZ2Zvcm1fYnV0dG9uIHtcbiAgICAgIHdpZHRoOiA1MCU7IH1cblxuI2NvbnRlbnQgLndoaXRlX2Zvcm0gLmdmb3JtX3dyYXBwZXIgaW5wdXRbdHlwZT0ndGV4dCddLFxuI2NvbnRlbnQgLndoaXRlX2Zvcm0gLmdmb3JtX3dyYXBwZXIgaW5wdXRbdHlwZT0nbnVtYmVyJ10sXG4jY29udGVudCAud2hpdGVfZm9ybSAuZ2Zvcm1fd3JhcHBlciBpbnB1dFt0eXBlPSd0ZWwnXSxcbiNjb250ZW50IC53aGl0ZV9mb3JtIC5nZm9ybV93cmFwcGVyIHRleHRhcmVhIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzcwNzA3MDsgfVxuICAjY29udGVudCAud2hpdGVfZm9ybSAuZ2Zvcm1fd3JhcHBlciBpbnB1dFt0eXBlPSd0ZXh0J106Zm9jdXMsICNjb250ZW50IC53aGl0ZV9mb3JtIC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J3RleHQnXTp2YWxpZCxcbiAgI2NvbnRlbnQgLndoaXRlX2Zvcm0gLmdmb3JtX3dyYXBwZXIgaW5wdXRbdHlwZT0nbnVtYmVyJ106Zm9jdXMsXG4gICNjb250ZW50IC53aGl0ZV9mb3JtIC5nZm9ybV93cmFwcGVyIGlucHV0W3R5cGU9J251bWJlciddOnZhbGlkLFxuICAjY29udGVudCAud2hpdGVfZm9ybSAuZ2Zvcm1fd3JhcHBlciBpbnB1dFt0eXBlPSd0ZWwnXTpmb2N1cyxcbiAgI2NvbnRlbnQgLndoaXRlX2Zvcm0gLmdmb3JtX3dyYXBwZXIgaW5wdXRbdHlwZT0ndGVsJ106dmFsaWQsXG4gICNjb250ZW50IC53aGl0ZV9mb3JtIC5nZm9ybV93cmFwcGVyIHRleHRhcmVhOmZvY3VzLFxuICAjY29udGVudCAud2hpdGVfZm9ybSAuZ2Zvcm1fd3JhcHBlciB0ZXh0YXJlYTp2YWxpZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzcwNzA3MDsgfVxuXG4jY29udGVudCAud2hpdGVfZm9ybSAuZ2Zvcm1fd3JhcHBlciAuZ2lucHV0X2NvbnRhaW5lcl9zZWxlY3Qgc2VsZWN0LFxuI2NvbnRlbnQgLndoaXRlX2Zvcm0gLmdmb3JtX3dyYXBwZXIgLmdpbnB1dF9jb21wbGV4IC5hZGRyZXNzX3N0YXRlIHNlbGVjdCxcbiNjb250ZW50IC53aGl0ZV9mb3JtIC5nZm9ybV93cmFwcGVyIC5naW5wdXRfY29tcGxleCAuYWRkcmVzc19jb3VudHJ5IHNlbGVjdCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICM3MDcwNzA7IH1cblxuI2NvbnRlbnQgLmZvcmNlXzFjb2wgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9sZWZ0X3RoaXJkLCAjY29udGVudCAuZm9yY2VfMWNvbCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX21pZGRsZV90aGlyZCwgI2NvbnRlbnQgLmZvcmNlXzFjb2wgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9yaWdodF90aGlyZCwgI2NvbnRlbnQgLmZvcmNlXzFjb2wgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9sZWZ0X2hhbGYsICNjb250ZW50IC5mb3JjZV8xY29sIC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfcmlnaHRfaGFsZiB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDAgIWltcG9ydGFudDsgfVxuXG4jY29udGVudCAuZm9yY2VfMWNvbCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX2xpc3RfM2NvbCB1bC5nZmllbGRfcmFkaW8gbGkge1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG5cbiNjb250ZW50IC5mb3JtX2VtYmVkLnB1cnBsZS1kYXJrIC5nZm9ybV9maWVsZHMgLmdmaWVsZF9sYWJlbC5mbG9hdF9sYWJlbCxcbiNjb250ZW50IC5mb3JtX2VtYmVkLnB1cnBsZS1kYXJrIC5nZm9ybV9maWVsZHMgLmdpbnB1dF9jb21wbGV4IGxhYmVsLmZsb2F0X2xhYmVsIHtcbiAgY29sb3I6ICNmZmZmZmY7IH1cbiAgI2NvbnRlbnQgLmZvcm1fZW1iZWQucHVycGxlLWRhcmsgLmdmb3JtX2ZpZWxkcyAuZ2ZpZWxkX2xhYmVsLmZsb2F0X2xhYmVsIC5nZmllbGRfcmVxdWlyZWQsXG4gICNjb250ZW50IC5mb3JtX2VtYmVkLnB1cnBsZS1kYXJrIC5nZm9ybV9maWVsZHMgLmdpbnB1dF9jb21wbGV4IGxhYmVsLmZsb2F0X2xhYmVsIC5nZmllbGRfcmVxdWlyZWQge1xuICAgIGNvbG9yOiAjZmZmZmZmOyB9XG5cbiNjb250ZW50IC5mb3JtX2VtYmVkLnB1cnBsZS1kYXJrIC5nZm9ybV9maWVsZHMgLmdmaWVsZF9sYWJlbC5nZmllbGRfbGFiZWxfYmVmb3JlX2NvbXBsZXgsXG4jY29udGVudCAuZm9ybV9lbWJlZC5wdXJwbGUtZGFyayAuZ2Zvcm1fZmllbGRzIC5naW5wdXRfY29tcGxleCBsYWJlbC5nZmllbGRfbGFiZWxfYmVmb3JlX2NvbXBsZXgge1xuICBjb2xvcjogI2ZmZmZmZjsgfVxuICAjY29udGVudCAuZm9ybV9lbWJlZC5wdXJwbGUtZGFyayAuZ2Zvcm1fZmllbGRzIC5nZmllbGRfbGFiZWwuZ2ZpZWxkX2xhYmVsX2JlZm9yZV9jb21wbGV4IC5nZmllbGRfcmVxdWlyZWQsXG4gICNjb250ZW50IC5mb3JtX2VtYmVkLnB1cnBsZS1kYXJrIC5nZm9ybV9maWVsZHMgLmdpbnB1dF9jb21wbGV4IGxhYmVsLmdmaWVsZF9sYWJlbF9iZWZvcmVfY29tcGxleCAuZ2ZpZWxkX3JlcXVpcmVkIHtcbiAgICBjb2xvcjogI2ZmZmZmZjsgfVxuXG4jY29udGVudCAuZm9ybV9lbWJlZC5wdXJwbGUtZGFyayAuZm9ybV9mb290bm90ZSB7XG4gIGNvbG9yOiAjZmZmZmZmOyB9XG5cbjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIC8qIENocm9tZS9PcGVyYS9TYWZhcmkgKi9cbiAgY29sb3I6ICMwMDAwNDE7IH1cblxuOjotbW96LXBsYWNlaG9sZGVyIHtcbiAgLyogRmlyZWZveCAxOSsgKi9cbiAgY29sb3I6ICMwMDAwNDE7IH1cblxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIC8qIElFIDEwKyAqL1xuICBjb2xvcjogIzAwMDA0MTsgfVxuXG46LW1vei1wbGFjZWhvbGRlciB7XG4gIC8qIEZpcmVmb3ggMTgtICovXG4gIGNvbG9yOiAjMDAwMDQxOyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfbGVmdF90aGlyZCwgI2NvbnRlbnQgLmdmb3JtX3dyYXBwZXIgLmdmb3JtX2ZpZWxkcyBsaS5nZl9taWRkbGVfdGhpcmQsICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfcmlnaHRfdGhpcmQsICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfbGVmdF9oYWxmLCAjY29udGVudCAuZ2Zvcm1fd3JhcHBlciAuZ2Zvcm1fZmllbGRzIGxpLmdmX3JpZ2h0X2hhbGYge1xuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1yaWdodDogMCAhaW1wb3J0YW50OyB9XG4gICNjb250ZW50IC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkuZ2ZfbGlzdF8zY29sIHVsLmdmaWVsZF9yYWRpbyBsaSB7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfSB9XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFVUSUxJVFkgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgSEVMUEVSIENMQVNTRVNcbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLmNsZWFyZml4OmJlZm9yZSwgLmNsZWFyZml4OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7IH1cblxuLmNsZWFyZml4OmFmdGVyIHtcbiAgY2xlYXI6IGJvdGg7IH1cblxuLmNsZWFyZml4IHtcbiAgKnpvb206IDE7IH1cblxuLyogUEFUVEVSTlMgKi9cbi53eXNpd3lnIHVsLmNoZWNrbWFyayB7XG4gIG1hcmdpbjogMDsgfVxuICAud3lzaXd5ZyB1bC5jaGVja21hcmsgPiBsaSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG1hcmdpbjogMCAwIDIwcHg7XG4gICAgcGFkZGluZzogMCAwIDAgNjBweDtcbiAgICBjb2xvcjogIzE0MTkyMDsgfVxuICAgIC53eXNpd3lnIHVsLmNoZWNrbWFyayA+IGxpOmJlZm9yZSB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgdG9wOiAtNXB4O1xuICAgICAgd2lkdGg6IDM2cHg7XG4gICAgICBoZWlnaHQ6IDM2cHg7XG4gICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoLi4vLi4vaW1hZ2VzL2xpc3QtdHlwZS1jaGVja21hcmsuc3ZnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gICAgICBjb250ZW50OiAnJzsgfVxuICAgIC53eXNpd3lnIHVsLmNoZWNrbWFyayA+IGxpOmxhc3Qtb2YtdHlwZSB7XG4gICAgICBtYXJnaW46IDA7IH1cblxuLmZsZXhyb3cge1xuICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5mbGV4cm93IC5mbGV4X2kge1xuICAgIGZsZXgtZ3JvdzogMTsgfVxuICAuZmxleHJvdyAuZmxleF9pICsgLmZsZXhfaSB7XG4gICAgbWFyZ2luLWxlZnQ6IDUlOyB9XG5cbi5hbGlnbmxlZnQsXG4uYWxpZ25yaWdodCB7XG4gIGZsb2F0OiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLmFsaWdubm9uZSxcbi5hbGlnbmNlbnRlciB7XG4gIHdpZHRoOiBhdXRvO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbmZpZ3VyZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG8gMS42N2VtOyB9XG4gIGZpZ3VyZS53cC1jYXB0aW9uIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cbmZpZ2NhcHRpb24ge1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICBmb250LXNpemU6IDAuNzhlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNGVtO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGNvbG9yOiAjNjY2OyB9XG5cbmlmcmFtZSB7XG4gIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50OyB9XG5cbi52aWRfY29udCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIHotaW5kZXg6IDEwOyB9XG5cbi52aWRlb19jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiA2Mi41JTtcbiAgLypwYWRkaW5nLXRvcDozMHB4OyovXG4gIG1hcmdpbjogMCAwIDAgMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMDtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjNzOyB9XG4gIC52aWRlb19jb250YWluZXIub2ZmIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxuXG4udmlkZW9fY29udGFpbmVyIGlmcmFtZSxcbi52aWRlb19jb250YWluZXIgb2JqZWN0LFxuLnZpZGVvX2NvbnRhaW5lciBlbWJlZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlOyB9XG5cbi50b19jb2xzXzMge1xuICBjb2x1bW4tY291bnQ6IDM7XG4gIGNvbHVtbi1nYXA6IDc0cHg7IH1cbiAgLnRvX2NvbHNfMyA+IGxpIHtcbiAgICBsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7XG4gICAgYnJlYWstaW5zaWRlOiBhdm9pZDsgfVxuXG4ucG9zX3JlbCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50OyB9XG5cbi5mbG9hdF9sZWZ0IHtcbiAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDsgfVxuXG4uZmxvYXRfcmlnaHQge1xuICBmbG9hdDogcmlnaHQgIWltcG9ydGFudDsgfVxuXG4ub2ZfaGlkZGVuIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbiAhaW1wb3J0YW50OyB9XG5cbi5ub21hcmdpbiB7XG4gIG1hcmdpbjogMCAhaW1wb3J0YW50OyB9XG5cbi5ub21hcmdpbl90b3Age1xuICBtYXJnaW4tdG9wOiAwICFpbXBvcnRhbnQ7IH1cblxuLm5vbWFyZ2luX2JvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsgfVxuXG4ubGFyZ2VfbWFyZ2luX2JvdHRvbSB7XG4gIG1hcmdpbi1ib3R0b206IDYwcHggIWltcG9ydGFudDsgfVxuXG4udGFsbF9wYWQge1xuICBwYWRkaW5nLXRvcDogMTAwcHggIWltcG9ydGFudDtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLnNob3J0X3BhZCB7XG4gIHBhZGRpbmctdG9wOiAzMHB4ICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAzMHB4ICFpbXBvcnRhbnQ7IH1cblxuLm1pZF9wYWQge1xuICBwYWRkaW5nLXRvcDogNjBweCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLWJvdHRvbTogNjBweCAhaW1wb3J0YW50OyB9XG5cbi5ub3BhZGRpbmcge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7IH1cblxuLm5vcGFkZGluZ19sciB7XG4gIHBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xuICBwYWRkaW5nLXJpZ2h0OiAwICFpbXBvcnRhbnQ7IH1cblxuLm5vcGFkZGluZ190YiB7XG4gIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7IH1cblxuLm5vcGFkZGluZ190b3Age1xuICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbi5ub3BhZGRpbmdfYm90dG9tIHtcbiAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDsgfVxuXG4uc21hbGxfcGFkZGluZ19ib3R0b20ge1xuICBwYWRkaW5nLWJvdHRvbTogMzBweCAhaW1wb3J0YW50OyB9XG5cbi5sYXJnZV9wYWRkaW5nX2JvdHRvbSB7XG4gIHBhZGRpbmctYm90dG9tOiAxMDBweCAhaW1wb3J0YW50OyB9XG5cbi5zbWFsbF9wYWRkaW5nX3RvcCB7XG4gIHBhZGRpbmctdG9wOiAzMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmxhcmdlX3BhZGRpbmdfdG9wIHtcbiAgcGFkZGluZy10b3A6IDEwMHB4ICFpbXBvcnRhbnQ7IH1cblxuLyogU09VUFk6IFBST1ZJREUgQUJJTElUWSBUTyBPVkVSUklERSBZQiBCTE9DSyBQQURESU5HUyBWSUEgR1VURU5CRVJHIEFEVkFOQ0VEIENTUyBGSUVMRCAqL1xuLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLnRhbGxfcGFkIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy50YWxsX3BhZCAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMTAwcHggIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMTAwcHggIWltcG9ydGFudDsgfVxuXG4uY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubWlkX3BhZCB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAuY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubWlkX3BhZCAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXRvcDogNjBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOiA2MHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLnNob3J0X3BhZCB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAuY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcuc2hvcnRfcGFkIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmctdG9wOiAzMHB4ICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHggIWltcG9ydGFudDsgfVxuXG4uY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubm9wYWRkaW5nIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5ub3BhZGRpbmcgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG5cbi5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5ub3BhZGRpbmdfbHIge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLm5vcGFkZGluZ19sciAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1sZWZ0OiAwICFpbXBvcnRhbnQ7IH1cblxuLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLm5vcGFkZGluZ190YiB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAuY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubm9wYWRkaW5nX3RiIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmctdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgcGFkZGluZy1ib3R0b206IDAgIWltcG9ydGFudDsgfVxuXG4uY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubm9wYWRkaW5nX3RvcCB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAuY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubm9wYWRkaW5nX3RvcCAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMCAhaW1wb3J0YW50OyB9XG5cbi5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5ub3BhZGRpbmdfYm90dG9tIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5ub3BhZGRpbmdfYm90dG9tIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiAwICFpbXBvcnRhbnQ7IH1cblxuLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLnNtYWxsX3BhZGRpbmdfdG9wIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5zbWFsbF9wYWRkaW5nX3RvcCAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweCAhaW1wb3J0YW50OyB9XG5cbi5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5zbWFsbF9wYWRkaW5nX2JvdHRvbSB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAuY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcuc21hbGxfcGFkZGluZ19ib3R0b20gLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgcGFkZGluZy1ib3R0b206IDMwcHggIWltcG9ydGFudDsgfVxuXG4uY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcuc21hbGxfcGFkZGluZ190YiB7XG4gIHBhZGRpbmc6IDAgIWltcG9ydGFudDsgfVxuICAuY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcuc21hbGxfcGFkZGluZ190YiAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMzBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOiAzMHB4ICFpbXBvcnRhbnQ7IH1cblxuLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLmxhcmdlX3BhZGRpbmdfdG9wIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5sYXJnZV9wYWRkaW5nX3RvcCAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICBwYWRkaW5nLXRvcDogMTAwcHggIWltcG9ydGFudDsgfVxuXG4uY29udGVudF9zZWN0aW9uLm92ZXJyaWRlX3BhZGRpbmcubGFyZ2VfcGFkZGluZ19ib3R0b20ge1xuICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7IH1cbiAgLmNvbnRlbnRfc2VjdGlvbi5vdmVycmlkZV9wYWRkaW5nLmxhcmdlX3BhZGRpbmdfYm90dG9tIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmctYm90dG9tOiAxMDBweCAhaW1wb3J0YW50OyB9XG5cbi5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5sYXJnZV9wYWRkaW5nX3RiIHtcbiAgcGFkZGluZzogMCAhaW1wb3J0YW50OyB9XG4gIC5jb250ZW50X3NlY3Rpb24ub3ZlcnJpZGVfcGFkZGluZy5sYXJnZV9wYWRkaW5nX3RiIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgIHBhZGRpbmctdG9wOiAxMDBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOiAxMDBweCAhaW1wb3J0YW50OyB9XG5cbi5ub2J1bGxldHMge1xuICBsaXN0LXN0eWxlOiBub25lICFpbXBvcnRhbnQ7IH1cblxuLnVwcGVyIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZSAhaW1wb3J0YW50OyB9XG5cbi5sb3dlciB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lICFpbXBvcnRhbnQ7IH1cblxuLmNlbnRlcmVkIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7IH1cblxuLmxlZnRlZCB7XG4gIHRleHQtYWxpZ246IGxlZnQgIWltcG9ydGFudDsgfVxuXG4ucmlnaHRlZCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0ICFpbXBvcnRhbnQ7IH1cblxuLmJsb2NraXQge1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG5cbi5mbGV4X3ZlcnRfY2VudCB7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50OyB9XG5cbi53aWR0aF9jYXAge1xuICBtYXgtd2lkdGg6IDEwMDhweDsgfVxuXG4uc2hvd19vbl9tb2JpbGUge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLmhpZGVfb25fbW9iaWxlIHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxuXG4uc2hvd19vbl90YWJsZXQge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLmhpZGVfb25fdGFibGV0IHtcbiAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gIC5mbGV4cm93IHtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgLmZsZXhyb3cubm9mbGV4X20ge1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5mbGV4cm93Lm5vZmxleF9tIC5mbGV4X2kgKyAuZmxleF9pIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgLnRvX2NvbHNfMyB7XG4gICAgY29sdW1uLWNvdW50OiAxOyB9XG4gIC50YWxsX3BhZCB7XG4gICAgcGFkZGluZy10b3A6IDYwcHggIWltcG9ydGFudDtcbiAgICBwYWRkaW5nLWJvdHRvbTogNjBweCAhaW1wb3J0YW50OyB9XG4gIC5zaG93X29uX21vYmlsZSB7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDsgfVxuICAuaGlkZV9vbl9tb2JpbGUge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgLnNob3dfb25fdGFibGV0IHtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50OyB9XG4gIC5oaWRlX29uX3RhYmxldCB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9XG4gIC5ub3BhZGRpbmdfdGFibGV0IHtcbiAgICBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7IH1cbiAgLnRhbGxfcGFkIHtcbiAgICBwYWRkaW5nLXRvcDogNjBweCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctYm90dG9tOiA2MHB4ICFpbXBvcnRhbnQ7IH0gfVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBQUklNQVJZIE5BViAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jcHJpbWFyeS1uYXZpZ2F0aW9uIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwMHB4KTtcbiAgbWFyZ2luLWxlZnQ6IDI0cHg7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpIHtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMCAwIDAgLTRweDtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XG4gICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgPiBsaSBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgcGFkZGluZzogMCAyNHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogODBweDtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDsgfVxuICAgICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpIGE6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpOmhvdmVyID4gYSxcbiAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24gLm5hdi1tZW51ID4gbGk6Zm9jdXMgPiBhLFxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgPiBsaS5jdXJyZW50LW1lbnUtaXRlbSA+IGEsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpLmN1cnJlbnQtbWVudS1hbmNlc3RvciA+IGEsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpLmN1cnJlbnQtcG9zdC1hbmNlc3RvciA+IGEsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpLmN1cnJlbnQtcGFnZS1hbmNlc3RvciA+IGEge1xuICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgPiBsaTpob3ZlciAuc3ViLW1lbnUsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpOmZvY3VzIC5zdWItbWVudSB7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24gLm5hdi1tZW51ID4gbGkuZmxpcDpob3ZlciAuc3ViLW1lbnUsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpLmZsaXA6Zm9jdXMgLnN1Yi1tZW51IHtcbiAgICAgICAgbGVmdDogYXV0bztcbiAgICAgICAgcmlnaHQ6IDA7IH1cbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSB1bCB7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDEwMCU7XG4gICAgICBsZWZ0OiAtOTk5ZW07XG4gICAgICB3aWR0aDogYXV0bztcbiAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIGJhY2tncm91bmQ6ICMwMDAwNDE7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgei1pbmRleDogMTAwMDtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24gLm5hdi1tZW51IHVsIGxpIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMDAwMDQxO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuOyB9XG4gICAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24gLm5hdi1tZW51IHVsIGxpIGEge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMS4zZW07XG4gICAgICAgICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgICAgICAgcGFkZGluZzogMTVweCAyNHB4O1xuICAgICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2ZmZmZmZjtcbiAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAgICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSB1bCBsaSBhOmhvdmVyLCAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSB1bCBsaSBhLmFjdGl2ZSxcbiAgICAgICAgICAubmF2LW1lbnUgbGk6aG92ZXIgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgdWwgbGkgYSxcbiAgICAgICAgICAubmF2LW1lbnUgbGk6Zm9jdXMgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgdWwgbGkgYSB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSB1bCBsaS5jdXJyZW50LW1lbnUtaXRlbSBhLFxuICAgICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSB1bCBsaS5jdXJyZW50LW1lbnUtYW5jZXN0b3IgYSxcbiAgICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgdWwgbGkuY3VycmVudC1wb3N0LWFuY2VzdG9yIGEsXG4gICAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24gLm5hdi1tZW51IHVsIGxpLmN1cnJlbnQtcGFnZS1hbmNlc3RvciBhIHtcbiAgICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuXG4vKiBNT0JJTEUgTkFWICovXG4jcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwOyB9XG4gICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIC5uYXYtbWVudSB7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMzBweCAwOyB9XG4gICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51ID4gLm1lbnUtaXRlbS1oYXMtY2hpbGRyZW4gPiBhIHtcbiAgICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MnB4KTtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgPiAubWVudS1pdGVtLWhhcy1jaGlsZHJlbiA+IC50b2dnbGUge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgYmFja2dyb3VuZDogbm9uZTsgfVxuICAgICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIC5uYXYtbWVudSA+IGxpIHtcbiAgICAgIG1hcmdpbjogMCAwIDEwcHg7XG4gICAgICBib3JkZXI6IG5vbmU7IH1cbiAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIC5uYXYtbWVudSA+IGxpID4gYSB7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgZm9udC1zaXplOiAxLjVlbTtcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiU291cmNlIFNhbnMgUHJvXCIsIHNhbnMtc2VyaWY7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgcGFkZGluZzogN3B4IDUwcHggN3B4IDA7XG4gICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgPiBsaSA+IGE6aG92ZXIge1xuICAgICAgICAgIGNvbG9yOiAjZmY2ZTQyOyB9XG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgPiBsaSA+IC50b2dnbGUge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIHdpZHRoOiA0MHB4O1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICBoZWlnaHQ6IDQwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgIHRleHQtaW5kZW50OiAtOTk5OXB4O1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zczsgfVxuICAgICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgPiBsaSA+IC50b2dnbGU6YWZ0ZXIge1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgd2lkdGg6IDA7XG4gICAgICAgICAgaGVpZ2h0OiAwO1xuICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgYm9yZGVyLXdpZHRoOiA2cHggMCA2cHggMTBweDtcbiAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICNmZjZlNDI7XG4gICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7IH1cbiAgICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51ID4gbGkgPiAudG9nZ2xlID4gc3BhbiB7XG4gICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgcGFkZGluZzogMTAwcHggMCAwIDA7IH1cbiAgICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51ID4gbGkgPiAudG9nZ2xlOmhvdmVyIHtcbiAgICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZyk7IH1cbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgdWwge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHBhZGRpbmc6IDZweCAxNXB4O1xuICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICAvKnVsIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDozNCU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9Ki8gfVxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IHVsIGxpIGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiAxLjIyZW07XG4gICAgICAgIGNvbG9yOiAjZmZmZmZmO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuMmVtO1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHBhZGRpbmc6IDVweCAwO1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzOyB9XG4gICAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIC5uYXYtbWVudSB1bCBsaSBhOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogI2ZmNmU0MjsgfVxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IHVsIGxpLmN1cnJlbnQtbWVudS1pdGVtIGEsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgdWwgbGkuY3VycmVudC1tZW51LWFuY2VzdG9yIGEsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgdWwgbGkuY3VycmVudC1wb3N0LWFuY2VzdG9yIGEsXG4gICAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgdWwgbGkuY3VycmVudF9wYWdlX3BhcmVudCBhLFxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IHVsIGxpLmN1cnJlbnRfcGFnZV9hbmNlc3RvciBhLFxuICAgICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IHVsIGxpLmN1cnJlbnQtcGFnZS1hbmNlc3RvciBhIHtcbiAgICAgICAgY29sb3I6ICNmZjZlNDI7IH1cbiAgICAgICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIC5uYXYtbWVudSB1bCBsaSA+IC50b2dnbGUge1xuICAgICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IC5jdXJyZW50LW1lbnUtaXRlbSBhOmJlZm9yZSxcbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgLmN1cnJlbnQtbWVudS1hbmNlc3RvciBhOmJlZm9yZSxcbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgLmN1cnJlbnQtcG9zdC1hbmNlc3RvciBhOmJlZm9yZSxcbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uLW1vYmlsZSAubmF2LW1lbnUgLmN1cnJlbnRfcGFnZV9wYXJlbnQgYTpiZWZvcmUsXG4gICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IC5jdXJyZW50X3BhZ2VfYW5jZXN0b3IgYTpiZWZvcmUsXG4gICAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51IC5jdXJyZW50LXBhZ2UtYW5jZXN0b3IgYTpiZWZvcmUge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTBweCkge1xuICAjcHJpbWFyeS1uYXZpZ2F0aW9uIHtcbiAgICBkaXNwbGF5OiBub25lOyB9XG4gICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBibG9jazsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTkwcHgpIHtcbiAgI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUgLm5hdi1tZW51ID4gbGkgYTphZnRlciB7XG4gICAgbGVmdDogLTgwcHg7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTFweCkgYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSA+IGxpIGEge1xuICAgIGZvbnQtc2l6ZTogMC44M2VtO1xuICAgIHBhZGRpbmc6IDAgMTRweDsgfVxuICAjcHJpbWFyeS1uYXZpZ2F0aW9uIC5uYXYtbWVudSB1bCBsaSBhIHtcbiAgICBwYWRkaW5nOiAxNXB4IDE0cHg7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTAxcHgpIGFuZCAobWF4LXdpZHRoOiAxMjYwcHgpIHtcbiAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgPiBsaSBhIHtcbiAgICBwYWRkaW5nOiAwIDE1cHg7IH1cbiAgI3ByaW1hcnktbmF2aWdhdGlvbiAubmF2LW1lbnUgdWwgbGkgYSB7XG4gICAgcGFkZGluZzogMTVweCAxNXB4OyB9IH1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogR1VURU5CRVJHIFJFU0VUUyAvIFNUQU5EQVJEIE5BS0VEIEJMT0NLUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuI2NvbnRlbnQgYXJ0aWNsZSA+IGgxLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IGgyLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IGgzLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IGg0LFxuI2NvbnRlbnQgYXJ0aWNsZSA+IGg1LFxuI2NvbnRlbnQgYXJ0aWNsZSA+IGg2LFxuI2NvbnRlbnQgYXJ0aWNsZSA+IHAsXG4jY29udGVudCBhcnRpY2xlID4gYmxvY2txdW90ZSxcbiNjb250ZW50IGFydGljbGUgPiBjaXRlLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IG9sLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IHVsLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IGhyLFxuI2NvbnRlbnQgYXJ0aWNsZSA+IHNwYW4sXG4jY29udGVudCBhcnRpY2xlID4gYSB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAxNjBweCk7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gIG1hcmdpbi1sZWZ0OiBhdXRvOyB9XG4gIC5zaW5nbGUtcG9zdCAjY29udGVudCBhcnRpY2xlID4gaDEsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gaDIsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gaDMsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gaDQsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gaDUsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gaDYsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gcCwgLnNpbmdsZS1wb3N0XG4gICNjb250ZW50IGFydGljbGUgPiBibG9ja3F1b3RlLCAuc2luZ2xlLXBvc3RcbiAgI2NvbnRlbnQgYXJ0aWNsZSA+IGNpdGUsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gb2wsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gdWwsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gaHIsIC5zaW5nbGUtcG9zdFxuICAjY29udGVudCBhcnRpY2xlID4gc3BhbiwgLnNpbmdsZS1wb3N0XG4gICNjb250ZW50IGFydGljbGUgPiBhIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuXG4jY29udGVudCBhcnRpY2xlIHVsLCAjY29udGVudCBhcnRpY2xlIG9sIHtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7IH1cbiAgLnNpbmdsZS1wb3N0ICNjb250ZW50IGFydGljbGUgdWwsIC5zaW5nbGUtcG9zdCAjY29udGVudCBhcnRpY2xlIG9sIHtcbiAgICB3aWR0aDogYXV0bzsgfVxuXG4jY29udGVudCBhcnRpY2xlIC53cC1ibG9jay1jb2x1bW5zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiBub3dyYXA7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAxNjBweCk7XG4gIG1heC13aWR0aDogMTIwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMCAwIDgwcHggMDsgfVxuICAjY29udGVudCBhcnRpY2xlIC53cC1ibG9jay1jb2x1bW5zIC53cC1ibG9jay1jb2x1bW46Zmlyc3QtY2hpbGQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDEwJTsgfVxuICAjY29udGVudCBhcnRpY2xlIC53cC1ibG9jay1jb2x1bW5zIC53cC1ibG9jay1jb2x1bW46bm90KDpmaXJzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1sZWZ0OiAyMHB4OyB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICNjb250ZW50IGFydGljbGUgPiBoMSxcbiAgI2NvbnRlbnQgYXJ0aWNsZSA+IGgyLFxuICAjY29udGVudCBhcnRpY2xlID4gaDMsXG4gICNjb250ZW50IGFydGljbGUgPiBoNCxcbiAgI2NvbnRlbnQgYXJ0aWNsZSA+IGg1LFxuICAjY29udGVudCBhcnRpY2xlID4gaDYsXG4gICNjb250ZW50IGFydGljbGUgPiBwLFxuICAjY29udGVudCBhcnRpY2xlID4gYmxvY2txdW90ZSxcbiAgI2NvbnRlbnQgYXJ0aWNsZSA+IGNpdGUsXG4gICNjb250ZW50IGFydGljbGUgPiBvbCxcbiAgI2NvbnRlbnQgYXJ0aWNsZSA+IHVsLFxuICAjY29udGVudCBhcnRpY2xlID4gaHIsXG4gICNjb250ZW50IGFydGljbGUgPiBzcGFuLFxuICAjY29udGVudCBhcnRpY2xlID4gYSB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDQwcHgpOyB9XG4gICNjb250ZW50IGFydGljbGUgLndwLWJsb2NrLWNvbHVtbnMge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBwYWRkaW5nOiAwIDAgNDBweCAwOyB9XG4gICAgI2NvbnRlbnQgYXJ0aWNsZSAud3AtYmxvY2stY29sdW1ucyAud3AtYmxvY2stY29sdW1uOmZpcnN0LWNoaWxkIHtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDA7IH1cbiAgICAjY29udGVudCBhcnRpY2xlIC53cC1ibG9jay1jb2x1bW5zIC53cC1ibG9jay1jb2x1bW46bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7IH0gfVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogOTAwcHgpIHtcbiAgI2NvbnRlbnQgYXJ0aWNsZSAud3AtYmxvY2stY29sdW1ucyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDE2MHB4KTtcbiAgICBwYWRkaW5nOiAwIDAgNDBweCAwOyB9XG4gICAgI2NvbnRlbnQgYXJ0aWNsZSAud3AtYmxvY2stY29sdW1ucyAud3AtYmxvY2stY29sdW1uOmZpcnN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAwOyB9XG4gICAgI2NvbnRlbnQgYXJ0aWNsZSAud3AtYmxvY2stY29sdW1ucyAud3AtYmxvY2stY29sdW1uOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiAwOyB9IH1cbiIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIEdMT0JBTCAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLyogR1JJRCBBQ0NFU1NPUklFUyAqL1xuLmdyaWQge1xuICAgID4gZGl2IHtcbiAgICAgICAgXG4gICAgICAgICYuZmx1c2hfcmlnaHQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICA+IC5jb250IHtcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgKyAjeyRndXR0ZXJ9KTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6KC0kZ3V0dGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5mbHVzaF9sZWZ0IHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPiAuY29udCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYygxMDAlICsgI3skZ3V0dGVyfSk7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6KC0kZ3V0dGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5mbHVzaF9sZWZ0X3JpZ2h0IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgID4gLmNvbnQge1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSArICN7JGd1dHRlcn0gKyAjeyRndXR0ZXJ9KTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDooLSRndXR0ZXIpO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDooLSRndXR0ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICA+IC5jb250IHtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgLmdyaWQgPiBkaXYuZmx1c2hfcmlnaHQgPiAuY29udCB7XG4gICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAoKCgxMDB2dyAtICN7JGJwX2Z1bGx9KSAvIDIpICsgI3skZ3V0dGVyfSkpO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IGNhbGMoLTEgKiAoKCgxMDB2dyAtICN7JGJwX2Z1bGx9KSAvIDIpICsgI3skZ3V0dGVyfSkpO1xuICAgIH1cbiAgICAuZ3JpZCA+IGRpdi5mbHVzaF9sZWZ0ID4gLmNvbnQge1xuICAgICAgICB3aWR0aDogY2FsYygxMDAlICsgKCgoMTAwdncgLSAjeyRicF9mdWxsfSkgLyAyKSArICN7JGd1dHRlcn0pKTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEgKiAoKCgxMDB2dyAtICN7JGJwX2Z1bGx9KSAvIDIpICsgI3skZ3V0dGVyfSkpO1xuICAgIH1cbn0qL1xuXG4vKiogVE9DOiAqKi9cbi8qKiBVTklRVUUgR1VURU5CRVJHIEJMT0NLUyAqKi9cbi8qKiBIT01FUEFHRSAqKi9cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogVU5JUVVFIEdVVEVOQkVSRyBCTE9DS1MgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmltZ19jb250IHtcbiAgICBcbiAgICAmLndpZGVfY29udGVudCB7XG4gICAgICAgIC5jb250IC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNvbnQgaDIge1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDo2MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICB9XG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmNvbnQge1xuICAgICAgICBvcmRlcjotMTtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIHBhZGRpbmc6MCA2MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5pbWcge1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIGZsb2F0OnJpZ2h0O1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6NjBweDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIHotaW5kZXg6MTU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLnpvb21fY29udCB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaG92ZXJfcHJvbXB0IHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICB0b3A6MDtcbiAgICAgICAgICAgICAgICByaWdodDowO1xuICAgICAgICAgICAgICAgIGJvdHRvbTowO1xuICAgICAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDY1LDAuNik7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1pbWFnZTp1cmwoLi4vLi4vaW1hZ2VzL21hZy1nbGFzcy1mYXQtd2hpdGUuc3ZnKTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgY2VudGVyO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZToxMjBweCBhdXRvO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246b3BhY2l0eSAwLjNzO1xuICAgICAgICAgICAgICAgIG9wYWNpdHk6MDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmtpbGwge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJi56b29tYWJsZSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIC5ob3Zlcl9wcm9tcHQge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eToxO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYuZmxpcCB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgb3JkZXI6MTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmltZ19jb250IHtcbiAgICAgICAgXG4gICAgICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgXG4gICAgICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAmLndpZGVfY29udGVudCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmNvbnQgaDIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmltZyB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDQwcHg7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICB3aWR0aDphdXRvO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDoxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLmltZ19jb250IHtcbiAgICBcbiAgICAgICAgJi53aWRlX2NvbnRlbnQge1xuICAgICAgICAgICAgLmNvbnQgaDIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuY29udCB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTozMHB4O1xuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6YXV0bztcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4uY3RhX2J1Y2tldHMge1xuICAgIFxuICAgIFxuICAgIC5jdGEge1xuICAgICAgICBwYWRkaW5nOjAgNDBweDtcbiAgICB9XG4gICAgXG4gICAgLmJ0biB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206MDtcbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5jdGFfYnVja2V0cyB7XG4gICAgXG4gICAgICAgIC5jdGEge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA2MHB4O1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLmN0YV9idWNrZXRzIHtcbiAgICAgICAgXG4gICAgICAgIC5jdGEge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTo2MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi50ZWFtX2dyaWQge1xuICAgIFxuICAgIFxuICAgIC50ZWFtIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgICAgICBsaXN0LXN0eWxlOm5vbmU7XG4gICAgICAgIG1hcmdpbjo4MHB4IDAgMCAwO1xuICAgICAgICBtYXJnaW4tbGVmdDowICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICBcbiAgICAgICAgLmdyaWRibG9jayB7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzJSAtIDE0cHgpO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA2MHB4IDIwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIHBhZGRpbmc6MCAxMCU7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MTgwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTgwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czoxMDBweDtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgICAgICAgICAgYm9yZGVyOjNweCBzb2xpZCAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gNDBweDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTowO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMC43NWVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiRuZWFybHlibGFjaztcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTokc3NhbnM7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5zb2NpYWwge1xuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6MzJweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MzNweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDAgMTBweDtcbiAgICAgICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgICAgICAgICAgIHRleHQtaW5kZW50Oi05OTk5cHg7XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOmFsbCAwLjNzO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpvbmx5LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5maXJzdCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDozMnB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6MzNweDtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuYmcge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTowO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIHN2ZyAuaWNvbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAudGVhbV9ncmlkIHtcbiAgICAgICAgXG4gICAgICAgIC50ZWFtIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkYmxvY2sge1xuICAgICAgICAgICAgICAgIHdpZHRoOjkwJTtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6NDgwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA2MHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSxcbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDphdXRvICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byAzMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC50ZWFtX2dyaWQge1xuICAgIFxuICAgIFxuICAgICAgICAudGVhbSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkYmxvY2sge1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gMjBweCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgybiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLmxvZ29fZ3JpZCB7ICAgIFxuICAgIFxuICAgIC5sb2dvcyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246cm93O1xuICAgICAgICBmbGV4LXdyYXA6d3JhcDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICBsaXN0LXN0eWxlOm5vbmU7XG4gICAgICAgIG1hcmdpbjo4MHB4IDAgNjBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nOjA7XG4gICAgXG4gICAgICAgIC5ncmlkYmxvY2sge1xuICAgICAgICAgICAgd2lkdGg6Y2FsYygyNSUgLSAyMHB4KTtcbiAgICAgICAgICAgIGhlaWdodDo5NnB4O1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAwIDIwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOm50aC1vZi10eXBlKDRuICsgMSkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OnRhYmxlO1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmxvZ28ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6dGFibGUtY2VsbDtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICAgICAgd2lkdGg6OTAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6OTZweDtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYudGhyZWUge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuZ3JpZGJsb2NrIHtcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDI1JSAtIDYwcHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMCA4MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSg0biArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6NjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5sb2dvX2dyaWQgeyAgICBcbiAgICBcbiAgICAgICAgLmxvZ29zIHtcbiAgICAgICAgICAgIG1hcmdpbjo2MHB4IDAgMzBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmdyaWRibG9jayB7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYyg1MCUgLSA0MHB4KTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MjBweCAwIDIwcHggNDBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoNG4gKyAxKSxcbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDJuICsgMSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLnRocmVlIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5ncmlkYmxvY2sge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6MzAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gMjBweDtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDphdXRvICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDRuICsgMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5sb2dvX2dyaWQgeyAgICBcbiAgICBcbiAgICAgICAgLmxvZ29zIHtcbiAgICAgICAgXG4gICAgICAgICAgICAmLnRocmVlIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5ncmlkYmxvY2sge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzMzMlIC0gNjBweCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5md19jdGEge1xuICAgIFxuICAgIFxuICAgIC5oZWFkX3dyYXAge1xuICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgIG1hcmdpbjowIGF1dG8gNjBweDtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIFxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBmbGV4OjAgMCBjYWxjKDEwMCUgLSA0MDBweCk7XG4gICAgICAgICAgICAvL3dpZHRoOjQwJTtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDo0MHB4O1xuICAgICAgICAgICAgYm9yZGVyLWxlZnQ6MnB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmxvZ29zX2dyb3VwIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDQwMHB4O1xuICAgICAgICAgICAgLy93aWR0aDo1NSU7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmxvZ28ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDcwcHggNDBweCAwO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OjUwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGgyIHtcbiAgICAgICAgbWFyZ2luOjAgMCAwLjc1ZW07XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgXG4gICAgICAgICYuc3RhbmRhcmQge1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgIGNvbG9yOiRvcmFuZ2U7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzo0cHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYubGluZWQge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAxLjVlbTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHAge1xuICAgICAgICBtYXJnaW46MCAwIDIuMjVlbTtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLnNvY2lhbF93cmFwIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTo0MHB4O1xuICAgICAgICBcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgd2lkdGg6NDRweDtcbiAgICAgICAgICAgIGhlaWdodDo0NXB4O1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAwIDIwcHg7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgICAgICB0ZXh0LWluZGVudDotOTk5OXB4O1xuICAgICAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgXG4gICAgICAgICAgICAmLmZpcnN0IHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgICAgIHRvcDo1MCU7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgd2lkdGg6NDRweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6NDVweDtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5iZyB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgICAgICAgICAgICAgICAgIGZpbGw6ICR3aGl0ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgc3ZnIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgZmlsbDogJG9yYW5nZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmN0YXNfd3JhcCB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLmJ0biB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDEwcHggNDBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAvKiY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JG9yYW5nZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJG9yYW5nZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfSovXG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5md19jdGEge1xuICAgICAgICBcbiAgICAgICAgLmhlYWRfd3JhcCB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBcbiAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICBmbGV4OjEgMCA2MCU7XG4gICAgICAgICAgICAgICAgLy93aWR0aDo2MCU7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OjIwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAubG9nb3NfZ3JvdXAge1xuICAgICAgICAgICAgICAgIGZsZXg6MCAwIDQwJTtcbiAgICAgICAgICAgICAgICAvL3dpZHRoOjQwJTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5sb2dvIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMzBweCAzMHB4IDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OjMwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGJyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmN0YXNfd3JhcCB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgIC5idG4ge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDEwcHggMjBweCAxMHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuZndfY3RhIHtcbiAgICAgICAgXG4gICAgICAgIC5oZWFkX3dyYXAge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4ubG9nb3NfY29udCB7XG4gICAgXG4gICAgXG4gICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgLmdyaWQge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmxvZ29zIHtcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgcGFkZGluZzowIDYwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmNvbnQge1xuICAgICAgICBvcmRlcjotMTtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNjBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOjYwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRvZmZ3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgcmlnaHQ6LTQwcHg7XG4gICAgICAgICAgICAgICAgdG9wOjEwMHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwOyBcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7IFxuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAyNHB4IDAgMjRweCA0MHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJG9mZndoaXRlO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYuZmxpcCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICByaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0Oi00MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDI0cHggNDBweCAyNHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgJG9mZndoaXRlIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAubG9nb3Nfc3RhZ2dlciB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgbGkge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5sb2dvIHtcbiAgICAgICAgICAgICAgICBmbG9hdDpsZWZ0O1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOjQwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOjIwcHg7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAubG9nbyB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0OnJpZ2h0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpsYXN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5sb2dvIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmxvZ29zX2NvbnQge1xuICAgICAgICBcbiAgICAgICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmxvZ29zIHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgODBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuY29udCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MzBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICByaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OjEwMHB4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6LTQwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogMCAyNHB4IDQwcHggMjRweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkb2Zmd2hpdGUgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICYuZmxpcCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6MTAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6LTQwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDAgMjRweCA0MHB4IDI0cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRvZmZ3aGl0ZSB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5sb2dvc19jb250IHtcbiAgICAgICAgXG4gICAgXG4gICAgICAgIC5sb2dvcyB7XG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDYwcHggMCAwO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjQwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgJi5mbGlwIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMCAwIDYwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5sb2dvc19zdGFnZ2VyIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjAgIWltcG9ydGFudDtcbiAgICAgICAgXG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAubG9nbyB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0Om5vbmU7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDoyMDBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byAzMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmxvZ28ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIC5sb2dvc19jb250IHtcbiAgICAgICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCA2MHB4IDAgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLmZsaXAge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbi50ZXN0X2NvbnQge1xuICAgIFxuICAgIFxuICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgXG4gICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5jb250IHtcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgcGFkZGluZzowIDYwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLnRlc3Qge1xuICAgICAgICBvcmRlcjotMTtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNjBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBwYWRkaW5nOjYwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgcmlnaHQ6LTQwcHg7XG4gICAgICAgICAgICAgICAgdG9wOjEwMHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwOyBcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7IFxuICAgICAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAyNHB4IDAgMjRweCA0MHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJHdoaXRlO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYuZmxpcCB7XG4gICAgICAgICAgICBvcmRlcjoxO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgbGVmdDotNDBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAyNHB4IDQwcHggMjRweCAwO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICR3aGl0ZSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC50ZXN0X2NvbnQge1xuICAgICAgICBcbiAgICAgICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuY29udCB7XG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC50ZXN0IHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgODBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MzBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICByaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OjEwMHB4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOi00MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDQwcHggMjRweCAwIDI0cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHdoaXRlIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLmZsaXAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OmF1dG87XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6MTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHRvcDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBib3R0b206LTQwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNDBweCAyNHB4IDAgMjRweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkd2hpdGUgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLnRlc3RfY29udCB7XG4gICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAudGVzdCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgNjBweCAwIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLmZsaXAge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6LTQwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDI0cHggNDBweCAyNHB4IDA7XG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50ICR3aGl0ZSB0cmFuc3BhcmVudCB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4udGVzdGltb25pYWwge1xuICAgIGJhY2tncm91bmQ6JGJsdWU7XG4gICAgXG4gICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgIHBhZGRpbmctdG9wOjEwMHB4O1xuICAgICAgICBwYWRkaW5nLWJvdHRvbToxNjBweDtcbiAgICB9XG4gICAgXG4gICAgKiB7XG4gICAgICAgIGNvbG9yOiR3aGl0ZTtcbiAgICB9XG4gICAgXG4gICAgaDMge1xuICAgICAgICBtYXJnaW4tYm90dG9tOjJlbTtcbiAgICB9XG4gICAgXG4gICAgYmxvY2txdW90ZSB7XG4gICAgICAgIGNvbG9yOiR3aGl0ZTtcbiAgICB9XG4gICAgY2l0ZSB7XG4gICAgICAgIGNvbG9yOiR3aGl0ZTtcbiAgICB9XG4gICAgXG4gICAgLmltZyB7XG4gICAgICAgIFxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLmljb25fbGFiZWxfZ3JpZCB7XG4gICAgXG4gICAgXG4gICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgIHBhZGRpbmc6MTAwcHggMCAyMHB4O1xuICAgIH1cbiAgICBcbiAgICAuaW50cm8ge1xuICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgIG1hcmdpbjowIGF1dG8gODBweDtcbiAgICB9XG4gICAgXG4gICAgaDMge1xuICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzoxcHg7XG4gICAgfVxuICAgIFxuICAgIC5pY29ucyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgZmxleC13cmFwOndyYXA7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOnRvcDtcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICB3aWR0aDozMy4zMyU7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvIDgwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMzBweDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6MTIwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6MTIwcHg7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvIDUwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgYm90dG9tO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOjkwJSBhdXRvO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBwIHtcbiAgICAgICAgICAgIG1hcmdpbjoyZW0gMCAwIDA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIFxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmljb25fbGFiZWxfZ3JpZCB7XG4gICAgXG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgcGFkZGluZzo2MHB4IDIwcHggMjBweDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaW50cm8ge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmljb25zIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6NDAwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA0MHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAxMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MWVtIDAgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byAzMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLnZhbHVlc190ZW5ldHMge1xuICAgIFxuICAgIFxuICAgIGgyIHtcbiAgICAgICAgXG4gICAgICAgICYubGluZWRfbGVmdCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHAsXG4gICAgbGksXG4gICAgaDUsXG4gICAgaDYge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH1cbiAgICBcbiAgICBoMyxcbiAgICBoNCB7XG4gICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgIH1cbiAgICBcbiAgICBoNSB7XG4gICAgICAgIG1hcmdpbjowIDAgMC43NWVtO1xuICAgIH1cbiAgICBcbiAgICAudGVuZXRzIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBmbGV4LXdyYXA6d3JhcDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmxlZnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7XG4gICAgICAgIG1hcmdpbjo4MHB4IDAgMCAwO1xuICAgICAgICBcbiAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICB3aWR0aDo1MCU7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDUwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoZXZlbikge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUob2RkKSB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDYwcHggMCAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC52YWx1ZXNfdGVuZXRzIHtcbiAgICBcbiAgICAgICAgLnRlbmV0cyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICBcbiAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKGV2ZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKG9kZCkge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLmJsb2dfcGlja2VyIHtcbiAgICBcbiAgICBoMyB7XG4gICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOjFweDtcbiAgICB9XG4gICAgXG4gICAgLmZlYXR1cmVkX3Bvc3RzIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtcbiAgICAgICAgbWFyZ2luOjgwcHggMCA1MHB4O1xuICAgICAgICBtYXJnaW4tbGVmdDowICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIFxuICAgIC5pdGVtIHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIGZsb2F0OmxlZnQ7XG4gICAgICAgIHdpZHRoOmNhbGMoMzMuMzMzMyUgLSAyN3B4KTtcbiAgICAgICAgbWFyZ2luOjAgMCA0MHB4IDQwcHg7XG4gICAgICAgIHotaW5kZXg6MTA7XG4gICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuXG4gICAgICAgICY6bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAudG9wIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgei1pbmRleDoxMjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NDBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MjMwcHg7XG4gICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JGJsdWU7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuYnRtIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgIHotaW5kZXg6MTE7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzozMHB4IDQwcHggODBweCAyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBoNCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAwLjc1ZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRub3JtYWw7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lO1xuICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAucm1fd3JhcCB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6MjBweDtcbiAgICAgICAgICAgIGJvdHRvbToyMHB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuYmxvZ19waWNrZXIge1xuICAgIFxuICAgICAgICAuZmVhdHVyZWRfcG9zdHMge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaXRlbSB7XG4gICAgICAgICAgICBmbG9hdDpub25lO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweCAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLmJsb2dfcGlja2VyIHtcbiAgICBcbiAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBtYXgtd2lkdGg6NjAwcHg7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvIDQwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4ud3lzIHtcbiAgICBcbiAgICBcbiAgICAuaW5uZXIge1xuICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgIH1cbn1cblxuLm5hcnJvd193eXMge1xuICAgIFxuICAgIFxuICAgIC5pbm5lciB7XG4gICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgIHdpZHRoOjcwJTtcbiAgICAgICAgbWF4LXdpZHRoOjkwMHB4O1xuICAgIH1cbn1cblxuLmluc2V0X3JpZ2h0X2NvbCB7XG4gICAgXG4gICAgXG4gICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgIHdpZHRoOjgwJTtcbiAgICB9XG4gICAgXG4gICAgLmxlZnQge1xuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6NzBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAucmlnaHQge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRncmF5X2xpZ2h0ZXN0O1xuICAgICAgICAgICAgcGFkZGluZzozNnB4IDM2cHggMTBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaDQge1xuICAgICAgICAgICAgZm9udC1zaXplOjEuMTFlbTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjFweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdWwge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAxLjU2ZW0gMjBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkbmVhcmx5YmxhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGEge1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgJi5saWdodC1ncmF5IHtcbiAgICAgICAgXG4gICAgICAgIC5yaWdodCAuaW5uZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5uYXJyb3dfd3lzIHtcbiAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmluc2V0X3JpZ2h0X2NvbCB7XG4gICAgXG4gICAgICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAubGVmdCB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDQwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLm5hcnJvd193eXMge1xuICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgd2lkdGg6OTAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5za2lubnlfY3RhIHtcbiAgICBiYWNrZ3JvdW5kOiAkcHVycGxlX2Rhcms7XG4gICAgXG4gICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgIHBhZGRpbmctdG9wOjMwcHg7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOjMwcHg7XG4gICAgfVxuICAgIFxuICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgd2lkdGg6NzAlO1xuICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgfVxuICAgICAgICAuY3Qge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmNvbnQge1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OjYwcHg7XG4gICAgICAgIFxuICAgICAgICAmLnNvbG8ge1xuICAgICAgICAgICAgcGFkZGluZzo2MHB4IDAgMzBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBmb250LXNpemU6MS4yMmVtO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAqIHtcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmN0IHtcbiAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgIFxuICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYubGlnaHQtZ3JheSxcbiAgICAmLmxpZ2h0LWJsdWUge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgXG4gICAgICAgICAgICAqIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYuZmxpcCB7XG4gICAgICAgIC5jb250IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDo2MHB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuc2tpbm55X2N0YSB7XG4gICAgICAgIFxuICAgICAgICAudmVydF9hbGlnbiB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAmLmZsaXAge1xuICAgICAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLnNraW5ueV9jdGEge1xuICAgICAgICBcbiAgICAgICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4uZm9ybV9lbWJlZCB7XG4gICAgXG4gICAgXG4gICAgJi5wdXJwbGUtZGFyayB7XG4gICAgICAgIFxuICAgICAgICBoMiB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDAuNzVlbTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICYuYWx0X2xheW91dCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRwdXJwbGVfZGFyayAhaW1wb3J0YW50O1xuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICBcbiAgICAgICAgaDIge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMWVtO1xuICAgICAgICAgICAgcGFkZGluZzoxMHB4IDIwcHg7XG4gICAgICAgICAgICBmb250LXNpemU6Mi4yMmVtO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjAuMWVtO1xuICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XG4gICAgICAgICAgICBib3JkZXI6MnB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBwIHtcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuZGVzYyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAzMHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgMzBweDtcbiAgICAgICAgICAgICAgICBib3JkZXItbGVmdDoycHggc29saWQgJG9yYW5nZTtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAubmFycm93X2Zvcm0ge1xuICAgICAgICB3aWR0aDo1MCU7XG4gICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuZm9ybV9lbWJlZCB7XG4gICAgICAgIFxuICAgICAgICAmLmFsdF9sYXlvdXQge1xuICAgICAgICBcbiAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5kZXNjIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjFlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYnIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5uYXJyb3dfZm9ybSB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLmljb25fY29udF9saXN0IHtcbiAgICBcbiAgICAuaW50cm8ge1xuICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgIG1hcmdpbjowIGF1dG8gODBweDtcbiAgICB9XG4gICAgXG4gICAgXG4gICAgLmljb25fY29udF9ibG9ja3Mge1xuICAgICAgICBtYXJnaW4tbGVmdDowICFpbXBvcnRhbnQ7XG4gICAgICAgIFxuICAgICAgICAuYnVja2V0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjEwMHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgIGZsb2F0OmxlZnQ7XG4gICAgICAgICAgICB3aWR0aDoyOCU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDoxMzBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuY29udCB7XG4gICAgICAgICAgICBmbG9hdDpsZWZ0O1xuICAgICAgICAgICAgd2lkdGg6NzIlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBoMyB7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxLjY3ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzoxcHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYudHdvX3VwIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6OTZweCA5NnB4IDgwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOnRvcDtcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDUwJSAtIDQwcHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweCA0MHB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JGdyYXlfbGlnaHRlc3Q7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAudmVydF9hbGlnbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgICAgICAgICAgICAgIC8vaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA2MHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTQwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDoxNDBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaDMge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSAxNDBweCk7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMCAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjJlbTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JHNlbWlib2xkO1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzoxcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjokbmVhcmx5YmxhY2s7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLnZhcmlhbnQge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6NTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDpub25lO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDo5MCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OjE0MHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjgwJTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byAzMHB4O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzozcHg7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxLjIyZW07XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjp0b3A7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gNjBweCk7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNjBweCA2MHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czo4cHg7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6MCAwIDIwcHggcmdiYSgwLDAsMCwwLjE2KTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5pY29uX2NvbnRfbGlzdCB7XG4gICAgXG4gICAgICAgIC5pbnRybyB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA0MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBiciB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pY29uX2NvbnRfYmxvY2tzIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTo2MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICAgICAgZmxvYXQ6bm9uZTtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTMwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMzBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgICAgIGZsb2F0Om5vbmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MS42N2VtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzoxcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgJi50d29fdXAge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzo0MHB4IDQwcHggMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuYnVja2V0IHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4IDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDoxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSAxMjBweCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDAgMjBweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lO1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjJlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjFweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjokbmVhcmx5YmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLnZhcmlhbnQge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzo1MHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsb2F0Om5vbmU7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byAzMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDo5MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6MTQwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaDMge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ODAlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byAzMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6M3B4O1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjpjb2x1bW47XG4gICAgICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweCAwO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgybisxKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuaWNvbl9jb250X2xpc3Qge1xuICAgIFxuICAgICAgICAuaW50cm8ge1xuICAgICAgICAgICAgd2lkdGg6OTAlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaWNvbl9jb250X2Jsb2NrcyB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTo4MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLnR3b191cCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDo4MDBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA0MHB4IGF1dG87XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4rMSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLnZhcmlhbnQge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzozMHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6ODAwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDYwcHggYXV0bztcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDJuKzEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgLmljb25fY29udF9saXN0IHtcbiAgICAgICAgXG4gICAgICAgIC5pY29uX2NvbnRfYmxvY2tzIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJi50d29fdXAge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6NjBweCA2MHB4IDUwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOjgwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ODBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSAxMDBweCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MS41ZW07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi52YXJpYW50IHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6NTBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OjEwMHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgIH1cbiAgICBcbn1cblxuLmltYWdlX3Jvd3Mge1xuICAgIFxuICAgIC5pbnRybyB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206NjBweDtcbiAgICB9XG4gICAgXG4gICAgLnpvb21fcm93IHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBoMyB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDJlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxLjY3ZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLnpvb21faW1hZ2VzIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTo2MHB4O1xuICAgICAgICBcbiAgICAgICAgLnpvb21fY29udCB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIC8vZmxleDogMSAxIDA7XG4gICAgICAgICAgICB3aWR0aDozMy4zMzMlO1xuICAgICAgICAgICAgaGVpZ2h0OiA0NzBweDtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5ob3Zlcl9wcm9tcHQge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDowO1xuICAgICAgICAgICAgICAgIHJpZ2h0OjA7XG4gICAgICAgICAgICAgICAgYm90dG9tOjA7XG4gICAgICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsNjUsMC42KTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOnVybCguLi8uLi9pbWFnZXMvbWFnLWdsYXNzLWZhdC13aGl0ZS5zdmcpO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOjEyMHB4IGF1dG87XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjpvcGFjaXR5IDAuM3M7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTowO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYua2lsbCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDphdXRvO1xuICAgICAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLnpvb21hYmxlIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgLmhvdmVyX3Byb21wdCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OjE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5pbWFnZV9yb3dzIHtcbiAgICAgICAgXG4gICAgICAgIC56b29tX3JvdyB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgaDMge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMWVtO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC56b29tX2ltYWdlcyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICBcbiAgICAgICAgICAgIC56b29tX2NvbnQge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmhvdmVyX3Byb21wdCB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6NDAwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5pbWFnZV9yb3dzIHtcbiAgICBcbiAgICAgICAgLnpvb21faW1hZ2VzIHtcbiAgICAgICAgXG4gICAgICAgICAgICAuem9vbV9jb250IHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwMHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4uaGFwcHlfY3VzdG9tZXJzIHtcbiAgICBcbiAgICBcbiAgICAuaGNfdGVzdCB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgLy9tYXJnaW4tdG9wOjMwcHg7XG4gICAgICAgIFxuICAgICAgICAubG9nbyB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNTBweCAwIDA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTp0YWJsZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2lubmVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OnRhYmxlLWNlbGw7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgcGFkZGluZzowIDUwcHggMCAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NzBweCA3MHB4IDMwcHggMTAwcHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDokb2Zmd2hpdGU7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5tYXJrIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDotNDBweDtcbiAgICAgICAgICAgIHRvcDotMjBweDtcbiAgICAgICAgICAgIHdpZHRoOjQwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6NDBweDtcbiAgICAgICAgICAgIGNvbG9yOiAjMUYxRkREO1xuICAgICAgICAgICAgZm9udC1zaXplOjMuNjFlbTtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjQwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpsZWZ0O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDExMnB4O1xuICAgICAgICAgICAgd2lkdGg6MTEycHg7XG4gICAgICAgICAgICBoZWlnaHQ6MTEycHg7XG4gICAgICAgICAgICBtYXJnaW46MCAzMHB4IDAgMDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6NjBweDtcbiAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgJi5saWdodC1ibHVlLFxuICAgICYubGlnaHQtZ3JheSB7XG4gICAgICAgIFxuICAgICAgICAuaGNfdGV4dCAuY29udCAuaW5uZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmxvZ29zIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICAgICAgbWFyZ2luOjgwcHggMDtcbiAgICAgICAgcGFkZGluZzowO1xuICAgIFxuICAgICAgICAuZ3JpZGJsb2NrIHtcbiAgICAgICAgICAgIHdpZHRoOjE2LjY2NyU7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMzVweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5sb2dvIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6NzBweDtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgICAgICAgICB0b3A6NTAlO1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBtYXgtaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmhhcHB5X2N1c3RvbWVycyB7XG4gICAgICAgIFxuICAgICAgICAuaGNfdGVzdCB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luLXRvcDozMHB4O1xuICAgICAgICBcbiAgICAgICAgICAgIC5sb2dvIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDQwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDozMDBweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCA0MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzo1MHB4IDQwcHggMzBweCA1MHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgICAgICBmbGV4OjAgMCA2MHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOjYwcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjYwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMjBweCAwIDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5sb2dvcyB7XG4gICAgICAgICAgICBtYXJnaW46NDBweCAwO1xuICAgIFxuICAgICAgICAgICAgLmdyaWRibG9jayB7XG4gICAgICAgICAgICAgICAgZmxleDoxIDAgNTAlO1xuICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuaGFwcHlfY3VzdG9tZXJzIHtcbiAgICAgICAgXG4gICAgICAgIC5oY190ZXN0IHtcbiAgICAgICAgXG4gICAgICAgICAgICAubG9nbyB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDIwcHggMCAwO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5jb250IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMjBweCAwIDA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjQwcHggNDBweCAyMHB4IDcwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubWFyayB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDotNDBweDtcbiAgICAgICAgICAgICAgICB0b3A6LTIwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6NDBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6NDBweDtcbiAgICAgICAgICAgICAgICBjb2xvcjogIzFGMUZERDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6My42MWVtO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjQwcHg7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaGVhZHNob3Qge1xuICAgICAgICAgICAgICAgIGZsZXg6MCAwIDYwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6NjBweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6NjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAubG9nb3Mge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuZ3JpZGJsb2NrIHtcbiAgICAgICAgICAgICAgICB3aWR0aDozMy4zMzMzJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDMwcHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLm1ldHJpY3NfY29udCB7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6MTAwJSBhdXRvO1xuICAgIFxuICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTo4MHB4O1xuICAgICAgICBcbiAgICAgICAgLmdyaWQge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYubGFzdCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLm1ldHJpY3Mge1xuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNjBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuY29udCB7XG4gICAgICAgIG9yZGVyOi0xO1xuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6MCA2MHB4O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHBhZGRpbmc6NjBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDotNDBweDtcbiAgICAgICAgICAgICAgICB0b3A6MTAwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7IFxuICAgICAgICAgICAgICAgIGhlaWdodDogMDsgXG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDI0cHggMCAyNHB4IDQwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkd2hpdGU7XG4gICAgICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5mbGlwIHtcbiAgICAgICAgICAgIG9yZGVyOjE7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICByaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0Oi00MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDI0cHggNDBweCAyNHB4IDA7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgJHdoaXRlIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAubWV0cmljc19ncmlkIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBsaSB7XG4gICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gNDBweCk7XG4gICAgICAgICAgICBtYXJnaW46MzBweCAyMHB4IDMwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOjYwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubWV0cmljIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowLjI1ZW0gMDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6My4zM2VtO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuM2VtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubWV0cmljX2xhYmVsIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxLjIyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLm1ldHJpY3NfY29udCB7XG4gICAgICAgIFxuICAgICAgICAudmVydF9hbGlnbiB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAubWV0cmljcyB7XG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjMwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgbGVmdDoxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOi00MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDAgMjRweCA0MHB4IDI0cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJHdoaXRlIHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLmZsaXAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OmF1dG87XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6MTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHRvcDotNDBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiAwIDI0cHggNDBweCAyNHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICR3aGl0ZSB0cmFuc3BhcmVudDtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLm1ldHJpY3NfZ3JpZCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjgwcHg7XG4gICAgICAgIFxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gNDBweCk7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjMwcHggMjBweCAzMHB4O1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6NjAlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5tZXRyaWMge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDAuMjVlbTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjMuMzNlbTtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS4zZW07XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAubWV0cmljX2xhYmVsIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxLjIyZW07XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLm1ldHJpY3NfY29udCB7XG4gICAgXG4gICAgICAgIC5tZXRyaWNzIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIGZsZXg6MSAwIDEwMCU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250IHtcbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCA2MHB4IDAgMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzo0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICYuZmxpcCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzowIDAgMCA2MHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAubWV0cmljc19ncmlkIHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjAgIWltcG9ydGFudDtcbiAgICAgICAgXG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjozMHB4IDAgMzBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjYwJTtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOjIwMHB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5tZXRyaWMge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjNlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAubWV0cmljX2xhYmVsIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjFlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLnliX2lzX2ZvciB7XG4gICAgXG4gICAgXG4gICAgaDIubGluZWQge1xuICAgICAgICBtYXJnaW46MCAwIDIuNWVtO1xuICAgIH1cbiAgICBcbiAgICAuY29udGVudGJ1Y2tldHMge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgICAgICBcbiAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICBmbGV4OjAgMCBjYWxjKDMzLjMzMzMlIC0gMjJweCk7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzMzMlIC0gMjJweCk7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDAgMzNweDtcbiAgICAgICAgICAgIGFsaWduLXNlbGY6c3RyZXRjaDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW1nIHtcbiAgICAgICAgICAgIGhlaWdodDoyNTBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgdG9wO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICB9XG4gICAgICAgIC5jb250IHtcbiAgICAgICAgICAgIGhlaWdodDpjYWxjKDEwMCUgLSAyNTBweCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDokb2Zmd2hpdGU7XG4gICAgICAgICAgICAgICAgYm9yZGVyOjFweCBkYXNoZWQgJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3A6bm9uZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjcwcHggNTBweCAzMHB4IDgwcHg7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgICAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaDQge1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSArIDMwcHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0Oi0zMHB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNTBweDtcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6MnB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgLyp0b3A6NTAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKTsqL1xuICAgICAgICAgICAgICAgICAgICB0b3A6LTJweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC53eXNpd3lnIHtcbiAgICAgICAgICAgICAgICB1bCB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0Oi0yMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6NnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjZweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6M3B4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAueWJfaXNfZm9yIHtcbiAgICAgICAgXG4gICAgICAgIC5jb250ZW50YnVja2V0cyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICBcbiAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuY29udCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjQwcHggMzBweCAyMHB4IDUwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLnliX2lzX2ZvciB7XG4gICAgICAgIFxuICAgICAgICAuY29udGVudGJ1Y2tldHMge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDo4MDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDMwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaW1nIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MzAwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6YXV0byAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5saW5rX2dyb3VwcyB7XG4gICAgXG4gICAgXG4gICAgLmxpc3RzX3dyYXAge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczpmbGV4LXN0YXJ0O1xuICAgICAgICBwYWRkaW5nOjAgNjBweDtcbiAgICAgICAgXG4gICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgd2lkdGg6Y2FsYygzMy4zMzMzJSAtIDQwcHgpO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAwIDYwcHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmhlYWQge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgIHBhZGRpbmc6MjBweCA1MHB4O1xuICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRvZmZ3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgIGZsZXg6MCAwIDcwcHg7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGg0IHtcbiAgICAgICAgICAgICAgICBmbGV4OjEgMCBjYWxjKDEwMCUgLSA5MHB4KTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDAgMjBweDtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAubGlua3Mge1xuICAgICAgICAgICAgbWFyZ2luOjAgIWltcG9ydGFudDtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggZGFzaGVkICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIGJvcmRlci10b3A6bm9uZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3A6MXB4IGRhc2hlZCAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOm5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MjZweCAzMHB4IDI2cHggNTBweDtcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjFlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDozMHB4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkbmVhcmx5YmxhY2s7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkbmVhcmx5YmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuYXJyb3cge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MTZweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuYXJyb3cge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAwOyBcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDA7IFxuICAgICAgICAgICAgICAgIG1hcmdpbjoxMHB4IDAgMCA4cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDRweCAwIDRweCA3cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5saW5rX2ljb24ge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDoxMHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5saW5rX2dyb3VwcyB7XG4gICAgXG4gICAgICAgIC5saXN0c193cmFwIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDQwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5saW5rX2dyb3VwcyB7XG4gICAgICAgIFxuICAgICAgICAubGlzdHNfd3JhcCB7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIFxuICAgICAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYygzMy4zMzMzJSAtIDIwcHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMCAzMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5oZWFkIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjIwcHggMTBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICAgICAgZmxleDowIDAgMzBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBoNCB7XG4gICAgICAgICAgICAgICAgICAgIGZsZXg6MSAwIGNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDoxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAubGlua3Mge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MTZweCAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MC44ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5hY2NvcmRpb25fc2ltcGxlIHtcbiAgICBcbiAgICBcbiAgICAudmVydF9hbGlnbiB7XG4gICAgICAgIFxuICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpmbGV4LXN0YXJ0O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgYWxpZ24taXRlbXM6ZmxleC1zdGFydDtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5hY2Mge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIGZsZXgtZ3JvdzoxO1xuICAgICAgICAgICAgcGFkZGluZzowIDYwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmNvbnQge1xuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHBhZGRpbmc6MCA2MHB4O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHBhZGRpbmc6NjBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDotNDBweDtcbiAgICAgICAgICAgICAgICB0b3A6MTAwcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7IFxuICAgICAgICAgICAgICAgIGhlaWdodDogMDsgXG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDI0cHggMCAyNHB4IDQwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkd2hpdGU7XG4gICAgICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuYWNjb3JkaW9uX3dyYXAge1xuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgLmFjY29yZGlvbiB7XG4gICAgICAgIG1hcmdpbjowICFpbXBvcnRhbnQ7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgbGlzdC1zdHlsZTpub25lO1xuICAgICAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgbGlzdC1zdHlsZTpub25lO1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOjFweCBkYXNoZWQgJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5hY2NfaGVhZGluZyB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICA+IGEge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MzZweCAxMHB4O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6NDZweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDo0NnB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuYWNjX2ljb24ge1xuICAgICAgICAgICAgICAgIHdpZHRoOjQ2cHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMTVweCAwIDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246bWlkZGxlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAudG9nZ2xlIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDoxMHB4O1xuICAgICAgICAgICAgICAgIHRvcDozNnB4O1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOjIxcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjQ2cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKCcuLi8uLi9pbWFnZXMvYWNjb3JkaW9uLXRvZ2dsZS5zdmcnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6MTAwJSBhdXRvO1xuICAgICAgICAgICAgICAgIC8vdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtLW9yaWdpbjpjZW50ZXI7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC50b2dnbGUge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06cm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5hY2NfY29udGVudCB7XG4gICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDMwcHggNzJweDtcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOjA7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6NnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDo2cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czozcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTowLjVlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmFjY29yZGlvbl9zaW1wbGUge1xuICAgICAgICBcbiAgICAgICAgLnZlcnRfYWxpZ24ge1xuICAgICAgICBcbiAgICAgICAgICAgIC5ncmlkIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuYWNjIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuY29udCB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjYwcHg7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MzBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICByaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OjEwMHB4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOi00MHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDQwcHggMjRweCAwIDI0cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJHdoaXRlIHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmFjY29yZGlvbiB7XG4gICAgXG4gICAgICAgICAgICAuYWNjX2hlYWRpbmcge1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoyMHB4IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICAgICAudG9nZ2xlIHtcbiAgICAgICAgICAgICAgICAgICAgdG9wOjIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgIFxuICAgICAgICAgICAgLmFjY19jb250ZW50IHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMCAwIDcycHg7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuYWNjb3JkaW9uX3NpbXBsZSB7XG4gICAgXG4gICAgICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgXG4gICAgICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmFjYyB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzo0MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgIHJpZ2h0OmF1dG87XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6MTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHRvcDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBib3R0b206LTQwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci13aWR0aDogNDBweCAyNHB4IDAgMjRweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAkd2hpdGUgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuYWNjb3JkaW9uIHtcbiAgICAgICAgICAgIG1hcmdpbjo2MHB4IDAgMCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5hY2NvcmRpb25fY29tcGxleCB7XG4gICAgXG4gICAgXG4gICAgLmludHJvIHtcbiAgICAgICAgd2lkdGg6NzAlO1xuICAgICAgICBtYXJnaW46MCBhdXRvIDgwcHg7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgICBcbiAgICAudmVydF9hbGlnbiB7XG4gICAgICAgIFxuICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuY29udF9yaWdodCB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgZmxleC1ncm93OjE7XG4gICAgICAgICAgICBwYWRkaW5nOjAgNjBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdWwge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDowO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjZweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjZweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czozcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5jb250X2xlZnQge1xuICAgICAgICBwYWRkaW5nOjAgMCAwIDYwcHggIWltcG9ydGFudDtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIGNsaXAtcGF0aDogcG9seWdvbig5MyUgMCwgOTMlIDEwMHB4LCAxMDAlIDEyMnB4LCA5MyUgMTQ0cHgsIDkzJSAxMDAlLCAwIDEwMCUsIDAgMCk7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRvcmFuZ2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6MXB4O1xuICAgICAgICAgICAgICAgIHRvcDoxcHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYygxMDAlIC0gMnB4KTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6Y2FsYygxMDAlIC0gMnB4KTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgICAgICBjbGlwLXBhdGg6IHBvbHlnb24oOTMlIDAsIDkzJSAxMDBweCwgY2FsYygxMDAlIC0gMXB4KSAxMjFweCwgOTMlIDE0MnB4LCA5MyUgMTAwJSwgMCAxMDAlLCAwIDApO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgcGFkZGluZzoxMDBweCAxMDBweCA3MHB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5hY2NvcmRpb25fd3JhcCB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICBtYXJnaW46NjBweCAwIDA7XG4gICAgICAgIHBhZGRpbmctdG9wOjEwMHB4O1xuICAgICAgICBcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgIHRvcDo0MHB4O1xuICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICB3aWR0aDo0MCU7XG4gICAgICAgICAgICBoZWlnaHQ6MTBweDtcbiAgICAgICAgICAgIC8vYmFja2dyb3VuZDp0cmFuc3BhcmVudCB1cmwoLi4vLi4vaW1hZ2VzL2FjY29yZGlvbi1jb21wbGV4LWRpdmlkZXIuc3ZnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgIC8vYmFja2dyb3VuZC1zaXplOjEwMCUgYXV0bztcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206MXB4IGRhc2hlZCAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5hY2NvcmRpb24ge1xuICAgICAgICBtYXJnaW46MCAhaW1wb3J0YW50O1xuICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICAgICAgXG4gICAgICAgID4gbGkge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbToxcHggZGFzaGVkICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuYWNjX2hlYWRpbmcge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NjBweCAxMCUgNjBweCAxMDBweDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246bm9uZTtcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6NDBweDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOjYwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjM2cHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDozNnB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCguLi8uLi9pbWFnZXMvbGlzdC10eXBlLWNoZWNrbWFyay5zdmcpIG5vLXJlcGVhdCBjZW50ZXIgY2VudGVyO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmgge1xuICAgICAgICAgICAgICAgIGZsZXg6MCAwIDMwJTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjQ1ZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JHNlbWlib2xkO1xuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzozcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5zaCB7XG4gICAgICAgICAgICAgICAgZmxleDoxIDAgNzAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjIwcHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjAuODJlbTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDokbm9ybWFsO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuNWVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLnRvZ2dsZSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgcmlnaHQ6MTBweDtcbiAgICAgICAgICAgICAgICB0b3A6NTAlO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOjIxcHg7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjQ2cHg7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOm1pZGRsZTtcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgdXJsKCcuLi8uLi9pbWFnZXMvYWNjb3JkaW9uLXRvZ2dsZS5zdmcnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6MTAwJSBhdXRvO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46Y2VudGVyO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAudG9nZ2xlIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKDE4MGRlZyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5hY2NfY29udGVudCB7XG4gICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDMwcHggY2FsYygzMCUgKyA2MHB4KTtcbiAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOjA7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6NnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDo2cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czozcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTowLjVlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmFjY29yZGlvbl9jb21wbGV4IHtcbiAgICBcbiAgICAgICAgLmludHJvIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC52ZXJ0X2FsaWduIHtcbiAgICAgICAgXG4gICAgICAgICAgICAuZ3JpZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnRfcmlnaHQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250X2xlZnQge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgcGFkZGluZzowICFpbXBvcnRhbnQ7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTAwJSAwLCAxMDAlIGNhbGMoMTAwJSAtIDQwcHgpLCAxNDRweCBjYWxjKDEwMCUgLSA0MHB4KSwgMTIycHggMTAwJSwgMTAwcHggY2FsYygxMDAlIC0gNDBweCksIDAgY2FsYygxMDAlIC0gNDBweCksIDAgMCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGNsaXAtcGF0aDogcG9seWdvbigxMDAlIDAsIDEwMCUgY2FsYygxMDAlIC0gNDBweCksIDE0MnB4IGNhbGMoMTAwJSAtIDQwcHgpLCAxMjFweCBjYWxjKDEwMCUgLSAxcHgpLCAxMDBweCBjYWxjKDEwMCUgLSA0MHB4KSwgMCBjYWxjKDEwMCUgLSA0MHB4KSwgMCAwKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmFjY29yZGlvbl93cmFwIHtcbiAgICAgICAgICAgIHRvcDowO1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIFxuICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmFjY29yZGlvbiB7XG4gICAgXG4gICAgICAgICAgICAuYWNjX2hlYWRpbmcge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MjBweCA1MHB4IDIwcHggNjBweDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDoxMHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgdG9wOjIwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLnNoIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgXG4gICAgICAgICAgICAuYWNjX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzowIDAgMCA2MHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5hY2NvcmRpb25fY29tcGxleCB7XG4gICAgXG4gICAgICAgIC5pbnRybyB7XG4gICAgICAgICAgICB3aWR0aDo5MCU7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmNvbnRfcmlnaHQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDAgMCA2MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250X2xlZnQge1xuICAgICAgICAgICAgcGFkZGluZzowIDAgMCAwICFpbXBvcnRhbnQ7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6NzBweCA3MHB4IDQwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmFjY29yZGlvbl93cmFwIHtcbiAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICB3aWR0aDo2MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmFjY29yZGlvbiB7XG4gICAgXG4gICAgICAgICAgICAuYWNjX2hlYWRpbmcge1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDo1MCU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5zaCB7XG4gICAgICAgICAgICAgICAgICAgIGZsZXg6MSAwIGNhbGMoNzAlIC0gNjBweCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi5jb250cmliX2pvdXJuZXkge1xuICAgIFxuICAgIC5jb250X3dyYXAge1xuICAgICAgICBwYWRkaW5nOjAgNjBweDtcbiAgICAgICAgXG4gICAgICAgID4gLmJ0biB7XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOjA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmludHJvIHtcbiAgICAgICAgd2lkdGg6NzAlO1xuICAgICAgICBtYXJnaW46MCBhdXRvIDgwcHg7XG4gICAgfVxuICAgIFxuICAgIC5jb250ZW50YnVja2V0cyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206NjBweDtcbiAgICAgICAgXG4gICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgd2lkdGg6Y2FsYygzMy4zMzMzJSAtIDQwcHgpO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAwIDYwcHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgICAgICBmaWx0ZXI6IGRyb3Atc2hhZG93KDAgMCAwLjRyZW0gcmdiYSgwLCAwLCAwLCAwLjMpKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAubm90Y2hlZCB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgICAgICAgICAgY2xpcC1wYXRoOiBwb2x5Z29uKDAlIDAlLCA0MiUgMCwgNTAlIDI0cHgsIDU4JSAwLCAxMDAlIDAsIDEwMCUgMTAwJSwgMCAxMDAlKTtcblxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICBib3JkZXItdG9wOm5vbmU7XG4gICAgICAgICAgICBwYWRkaW5nOjYwcHg7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLnd5c2l3eWcge1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDo1MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgIC5jb250cmliX2pvdXJuZXkge1xuICAgIFxuICAgICAgICAuY29udF93cmFwIHtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaW50cm8ge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuY29udGVudGJ1Y2tldHMge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgXG4gICAgICAgICAgICAuYnVja2V0IHtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIC5jb250cmliX2pvdXJuZXkge1xuICAgIFxuICAgICAgICAuY29udF93cmFwIHtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaW50cm8ge1xuICAgICAgICAgICAgd2lkdGg6OTAlO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5jb250ZW50YnVja2V0cyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICBcbiAgICAgICAgICAgIC5idWNrZXQge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOjUwMHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gNjBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OmF1dG87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgcGFkZGluZzo0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIElOTElORSBDVEFzIC0gTElTVElORyBQQUdFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi5pbmxpbmVfY3RhIHtcbiAgICBtYXJnaW4tYm90dG9tOjQwcHg7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBcbiAgICAmLnRlc3Qge1xuICAgICAgICBwYWRkaW5nOjYwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6I2YyZjNmODtcbiAgICAgICAgXG4gICAgICAgIC5tZXRhIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MTE0cHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTE0cHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czoxMDBweDtcbiAgICAgICAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA0MHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOjA7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICAgICAgICAgIG1heC1oZWlnaHQ6MTAwJTtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5xdW90ZSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgNDBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaW1nIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOjUwJTtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6MzAwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmlubGluZV9jdGEge1xuICAgICAgICBcbiAgICAgICAgJi50ZXN0IHtcbiAgICAgICAgICAgIHBhZGRpbmc6MzBweDtcbiAgICAgICAgXG4gICAgICAgICAgICAubWV0YSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbToxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDQwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLmlubGluZV9jdGEge1xuICAgICAgICBcbiAgICAgICAgJi50ZXN0IHtcbiAgICAgICAgICAgIHBhZGRpbmc6NDBweDtcbiAgICAgICAgXG4gICAgICAgICAgICAucXVvdGUge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNDBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIEFMTCBBTE0sIE9USEVSIEZJTFRFUlMgQ09MVU1OIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNhbG0tZmlsdGVycy1zc2ZpbHRlcixcbiNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIsXG4jYWxtLWZpbHRlcnMteWJuZXdzZmlsdGVyLFxuI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciB7XG4gICAgcGFkZGluZy1yaWdodDo0MHB4O1xuICAgIFxuICAgIC5hbG0tZmlsdGVyIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbToyMHB4O1xuICAgIFxuICAgICAgICB1bCB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDMwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICBsaXN0LXN0eWxlOm5vbmU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgJGdyYXk7XG4gICAgICAgIFxuICAgICAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOm5vbmU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jayAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgICAgICAvL0BpbmNsdWRlIGJhY2tncm91bmQtb3BhY2l0eSgkb3JhbmdlLCAwLjE1KTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5hbG0tZmlsdGVyLS1saW5rIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgJi5pbml0IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLW9wYWNpdHkoJG9yYW5nZSwgMC4xNSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICYub2ZmIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLW9wYWNpdHkoJG9yYW5nZSwgMC4wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmxhc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5hbG0tZmlsdGVyLS1saW5rIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoxMHB4IDEwcHggMTBweCAxNXB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MWVtO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjokYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuM2VtO1xuICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOm5vbmU7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjpwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLW9wYWNpdHkoJG9yYW5nZSwgMC4wKTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyLFxuICAgICAgICAgICAgICAgICAgICAmLmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBAaW5jbHVkZSBiYWNrZ3JvdW5kLW9wYWNpdHkoJG9yYW5nZSwgMC4xNSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYub3BlbiB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHVsID4gbGkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5hbG0tZmlsdGVyLS10aXRsZSB7XG4gICAgXG4gICAgICAgIGgzIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAxZW07XG4gICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDoyMHB4O1xuICAgICAgICAgICAgICAgIHRvcDpjYWxjKDUwJSArIDJweCk7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDA7IFxuICAgICAgICAgICAgICAgIGhlaWdodDogMDsgXG4gICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICBib3JkZXItd2lkdGg6IDZweCAwIDZweCAxMHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJG9yYW5nZTtcbiAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSgwZGVnKTtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOmFsbCAwLjNzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLm9wZW4ge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKSByb3RhdGUoOTBkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuYWxtLWZpbHRlcnMtZWRpdCB7XG4gICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG59XG5cbiNhbG0tZmlsdGVycy1yZXNvdXJjZXNzZWFyY2hmaWx0ZXIge1xuICAgIGRpc3BsYXk6ZmxleDtcbiAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgaGVpZ2h0OjQycHg7XG4gICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgIGJvcmRlcjoxcHggc29saWQgJGJsYWNrO1xuICAgIGJvcmRlci1yYWRpdXM6MjRweDtcbiAgICBcbiAgICAuYWxtLWZpbHRlciB7XG4gICAgICAgIHdpZHRoOjI2MHB4O1xuICAgIH1cbiAgICBcbiAgICAuYWxtLWZpbHRlcnMtLWNvbnRyb2xzIHtcbiAgICAgICAgd2lkdGg6NjBweDtcbiAgICB9XG4gICAgXG4gICAgLmFsbS1maWx0ZXItLXRleHRmaWVsZCB7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIGhlaWdodDo0MnB4O1xuICAgICAgICBsaW5lLWhlaWdodDo0MnB4O1xuICAgICAgICBmb250LWZhbWlseTokc3NhbnM7XG4gICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgIHBhZGRpbmc6MCAyMHB4O1xuICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgIGJvcmRlcjpub25lO1xuICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6bm9uZTtcbiAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgYmFja2dyb3VuZDpub25lO1xuICAgICAgICBcbiAgICAgICAgJjpmb2N1cyxcbiAgICAgICAgJjp2YWxpZCB7XG4gICAgICAgICAgICBvdXRsaW5lOm5vbmU7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuYWxtLWZpbHRlcnMtLWJ1dHRvbiB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICB3aWR0aDo2MHB4O1xuICAgICAgICBoZWlnaHQ6NDJweDtcbiAgICAgICAgdGV4dC1pbmRlbnQ6IC05OTk5cHg7XG4gICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgIGJvcmRlcjpub25lO1xuICAgICAgICBib3JkZXItcmFkaXVzOjA7XG4gICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgIGN1cnNvcjpwb2ludGVyO1xuICAgICAgICBcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRvcmFuZ2U7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgb3V0bGluZTpub25lO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDowO1xuICAgICAgICAgICAgcmlnaHQ6MDtcbiAgICAgICAgICAgIGJvdHRvbTowO1xuICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKC4uLy4uL2ltYWdlcy9zZWFyY2gtbWFnLWdsYXNzLnN2Zykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6MjBweCBhdXRvO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICAuYWxtLWZpbHRlcnMtZWRpdCB7XG4gICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICB9XG59XG5cbi5hbG0tYnRuLXdyYXAge1xuICAgIG9wYWNpdHk6MDtcbiAgICB2aXNpYmlsaXR5OmhpZGRlbjtcbiAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICBcbiAgICAjZXZlbnRzLWxpc3QgJixcbiAgICAjeWJuZXdzLWxpc3QgJixcbiAgICAjcmVzb3VyY2VzLWxpc3Qge1xuICAgICAgICBvcGFjaXR5OjE7XG4gICAgICAgIHZpc2liaWxpdHk6dmlzaWJsZTtcbiAgICB9XG5cbiAgICAuYnRuIHtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIFxuICAgICAgICAjeWJuZXdzLWxpc3QgJixcbiAgICAgICAgI3Jlc291cmNlcy1saXN0ICYge1xuICAgICAgICAgICAgYmFja2dyb3VuZDokb3JhbmdlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JGJsdWUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgI2FsbS1maWx0ZXJzLXNzZmlsdGVyLFxuICAgICNhbG0tZmlsdGVycy1ldmVudHNmaWx0ZXIsXG4gICAgI2FsbS1maWx0ZXJzLXlibmV3c2ZpbHRlcixcbiAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2VzZmlsdGVyIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDowO1xuICAgIH1cbiAgICBcbiAgICAjYWxtLWZpbHRlcnMtcmVzb3VyY2Vzc2VhcmNoZmlsdGVyIHtcbiAgICAgICAgLmFsbS1maWx0ZXIge1xuICAgICAgICAgICAgZmxleDoxIDAgMjYwcHg7XG4gICAgICAgICAgICB3aWR0aDoyNjBweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgICNhbG0tZmlsdGVycy1zc2ZpbHRlcixcbiAgICAjYWxtLWZpbHRlcnMtZXZlbnRzZmlsdGVyLFxuICAgICNhbG0tZmlsdGVycy15Ym5ld3NmaWx0ZXIsXG4gICAgI2FsbS1maWx0ZXJzLXJlc291cmNlc2ZpbHRlciB7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6MTBweDtcbiAgICAgICAgXG4gICAgICAgIC5hbG0tZmlsdGVyLS10aXRsZSB7XG4gICAgXG4gICAgICAgICAgICBoMyB7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjFlbTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICByaWdodDowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFNVQ0NFU1MgU1RPUklFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNzdWNjZXNzX3N0b3JpZXMge1xuICAgIHdpZHRoOmNhbGMoMTAwJSAtIDgwcHgpO1xuICAgIG1hcmdpbjowIGF1dG87XG4gICAgcGFkZGluZzo2MHB4IDA7XG4gICAgXG4gICAgLy9TUyBHUklEXG4gICAgI3N1Y2Nlc3Mtc3Rvcmllcy1saXN0IHtcbiAgICAgICAgXG4gICAgICAgIC5hbG0tcmV2ZWFsLmFsbS1maWx0ZXJzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOnJvdztcbiAgICAgICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgXG4gICAgICAgICAgICAuYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzMzMlIC0gMjdweCk7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDQwcHggNDBweDtcbiAgICAgICAgICAgIHotaW5kZXg6MTA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiNmMmYzZjg7XG4gICAgXG4gICAgICAgICAgICAmOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLnRvcCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZSgxLjEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAucmVhZF9tb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAudG9wIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICB6LWluZGV4OjEyO1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6MCAwIDE1cHggcmdiYSgyMCwyNSwzMiwwLjE1KTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6NDBweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjIzMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOnRyYW5zZm9ybSAwLjNzO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAudmVydGljYWwge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgICAgICAgICBib3R0b206NXB4O1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjVweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjAuNzhlbTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6JGdyYXk7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuMjVlbTtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5idG0ge1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgICAgICB6LWluZGV4OjExO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjMwcHggNDBweCA4MHB4IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHAge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5ybV93cmFwIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OjIwcHg7XG4gICAgICAgICAgICAgICAgYm90dG9tOjIwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgICNzdWNjZXNzX3N0b3JpZXMge1xuICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBcbiAgICAgICAgLy9TUyBHUklEXG4gICAgICAgICNzdWNjZXNzLXN0b3JpZXMtbGlzdCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmFsbS1yZXZlYWwuYWxtLWZpbHRlcnMge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gICAgICAgICAgICAgICAgZmxleC13cmFwOndyYXA7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgXG4gICAgICAgICAgICAgICAgLmFqYXgtbG9hZC1tb3JlLXdyYXAge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAuaXRlbSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6NDAwcHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgYXV0byA0MHB4IGF1dG87XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAudG9wIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6MjYwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAjc3VjY2Vzc19zdG9yaWVzIHtcbiAgICAgICAgXG4gICAgICAgICNzdWNjZXNzLXN0b3JpZXMtbGlzdCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDUwJSAtIDIwcHgpO1xuICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjQwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4gKyAxKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFlCIEVWRU5UUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiN5Yl9ldmVudHMge1xuICAgIHdpZHRoOmNhbGMoMTAwJSAtIDgwcHgpO1xuICAgIG1hcmdpbjowIGF1dG87XG4gICAgcGFkZGluZzo2MHB4IDA7XG4gICAgXG4gICAgLy9FVkVOVFMgR1JJRFxuICAgICNldmVudHMtbGlzdCB7XG4gICAgICAgIFxuICAgICAgICAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyB7XG4gICAgICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gICAgICAgICAgICBmbGV4LXdyYXA6d3JhcDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgIFxuICAgICAgICAgICAgLmFqYXgtbG9hZC1tb3JlLXdyYXAge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICBsaS5pdGVtIHtcbiAgICAgICAgICAgIHBhZGRpbmc6NDhweCAyNHB4O1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgxMTIsMTEyLDExMiwwLjM1KTtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmltZyB7XG4gICAgICAgICAgICAgICAgZmxvYXQ6bGVmdDtcbiAgICAgICAgICAgICAgICB3aWR0aDozMCU7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuY29udCB7XG4gICAgICAgICAgICAgICAgZmxvYXQ6bGVmdDtcbiAgICAgICAgICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgNTBweDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmZ1bGwge1xuICAgICAgICAgICAgICAgICAgICBmbG9hdDpub25lO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaDQge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMC4yNWVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6MDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmx1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5tZXRhIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAzNnB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuZGF0ZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRib2xkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLm11X2dyb3Vwc19saXN0IHtcbiAgICBkaXNwbGF5OmZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246cm93O1xuICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gICAgbWFyZ2luOjgwcHggMCAwO1xuICAgIG1hcmdpbi1sZWZ0OjAgIWltcG9ydGFudDtcbiAgICBcbiAgICA+IGxpIHtcbiAgICAgICAgd2lkdGg6MzMuMzMlO1xuICAgICAgICBtYXJnaW46MCAwIDUwcHg7XG4gICAgICAgIHBhZGRpbmc6MCA1MHB4O1xuICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgXG4gICAgICAgID4gYSB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06c2NhbGUoMS4wNSkgcm90YXRlKDAuMDJkZWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoNCB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmltZyB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDEwcHg7XG4gICAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGltZyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgY2VudGVyO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBoNCB7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICN7JGJwX3NtYWxsfSkge1xuICAgIFxuICAgICN5Yl9ldmVudHMge1xuICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICBcbiAgICAgICAgLy9FVkVOVFMgR1JJRFxuICAgICAgICAjZXZlbnRzLWxpc3Qge1xuICAgICAgICBcbiAgICAgICAgICAgIGxpLml0ZW0ge1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDo0ODBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmltZyB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0Om5vbmU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgNDBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuY29udCB7XG4gICAgICAgICAgICAgICAgICAgIGZsb2F0Om5vbmU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLm11X2dyb3Vwc19saXN0IHtcbiAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgLm11X2dyb3Vwc19saXN0IHtcbiAgICAgICAgXG4gICAgICAgID4gbGkge1xuICAgICAgICAgICAgcGFkZGluZzowIDMwcHg7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogWUIgTkVXUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuI3liX25ld3Mge1xuICAgIHdpZHRoOmNhbGMoMTAwJSAtIDgwcHgpO1xuICAgIG1hcmdpbjowIGF1dG87XG4gICAgcGFkZGluZzo2MHB4IDA7XG4gICAgXG4gICAgLy9TUyBHUklEXG4gICAgI3libmV3cy1saXN0IHtcbiAgICAgICAgXG4gICAgICAgIC5hbG0tcmV2ZWFsLmFsbS1maWx0ZXJzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOnJvdztcbiAgICAgICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgXG4gICAgICAgICAgICAuYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzMzMlIC0gMjdweCk7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDQwcHggNDBweDtcbiAgICAgICAgICAgIHotaW5kZXg6MTA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiNmMmYzZjg7XG4gICAgXG4gICAgICAgICAgICAmOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLnRvcCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZTNkKDAsMCwwKSBzY2FsZSgxLjEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmLnByIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUzZCgwLDAsMCkgc2NhbGUoMS4xKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5yZWFkX21vcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC50b3Age1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHotaW5kZXg6MTI7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzowIDAgMTVweCByZ2JhKDIwLDI1LDMyLDAuMTUpO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLnByIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciB0b3A7XG4gICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246dHJhbnNmb3JtIDAuM3M7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjQwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDoyMzBweDtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpbWcge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjp0cmFuc2Zvcm0gMC4zcztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLnZlcnRpY2FsIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOjVweDtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzo1cHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTowLjc4ZW07XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiRncmF5O1xuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjI1ZW07XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuYnRtIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgICAgICAgICAgei1pbmRleDoxMTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzozMHB4IDQwcHggODBweCAyMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAucm1fd3JhcCB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDoyMHB4O1xuICAgICAgICAgICAgICAgIGJvdHRvbToyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAjeWJfbmV3cyB7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICBcbiAgICAgICAgI3libmV3cy1saXN0IHtcbiAgICAgICAgXG4gICAgICAgICAgICAuYWxtLXJldmVhbC5hbG0tZmlsdGVycyB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOnJvdztcbiAgICAgICAgICAgICAgICBmbGV4LXdyYXA6d3JhcDtcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydDtcbiAgICBcbiAgICAgICAgICAgICAgICAuYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDo0MDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDQwcHggYXV0bztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAudG9wIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6MjYwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAjcmVzb3VyY2VzIHtcbiAgICAgICAgXG4gICAgICAgICNyZXNvdXJjZXMtbGlzdCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gMjBweCk7XG4gICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6NDBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgybiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLnRvcCB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjE4MHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICN5Yl9uZXdzIHtcbiAgICAgICAgXG4gICAgICAgICN5Ym5ld3MtbGlzdCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gMjBweCk7XG4gICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgzbiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6NDBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpudGgtb2YtdHlwZSgybiArIDEpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAudG9wIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6MTgwcHg7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogUkVTT1VSQ0VTIChDT05URU5UIExJQlJBUlkpICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuI3Jlc291cmNlc19zZWFyY2gge1xuICAgIHdpZHRoOmNhbGMoMTAwJSAtIDgwcHgpO1xuICAgIG1hcmdpbjowIGF1dG87XG4gICAgcGFkZGluZzozNnB4IDA7XG4gICAgXG4gICAgLnJpZ2h0IHtcbiAgICAgICAgdGV4dC1hbGlnbjpyaWdodDtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LWVuZDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxuICAgIFxuICAgIC5maWx0ZXJfd3JhcCB7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICBoMyB7XG4gICAgICAgIG1hcmdpbjowO1xuICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICBmb250LXNpemU6MS42N2VtO1xuICAgICAgICBsaW5lLWhlaWdodDo0NHB4O1xuICAgICAgICBmb250LXdlaWdodDokbm9ybWFsO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgIH1cbn1cblxuI3Jlc291cmNlcyB7XG4gICAgd2lkdGg6Y2FsYygxMDAlIC0gODBweCk7XG4gICAgbWFyZ2luOjAgYXV0bztcbiAgICBwYWRkaW5nOjYwcHggMDtcbiAgICBcbiAgICAvL1JFU09VUkNFUyBHUklEXG4gICAgI3Jlc291cmNlcy1saXN0IHtcbiAgICAgICAgXG4gICAgICAgIC5hbG0tcmV2ZWFsLmFsbS1maWx0ZXJzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOnJvdztcbiAgICAgICAgICAgIGZsZXgtd3JhcDp3cmFwO1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgXG4gICAgICAgICAgICAuYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLml0ZW0ge1xuICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzMzMlIC0gMjdweCk7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDcwcHggNDBweDtcbiAgICAgICAgICAgIHotaW5kZXg6MTA7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICBcbiAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAudG9wIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlM2QoMCwwLDApIHNjYWxlKDEuMSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5yZWFkX21vcmUge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC50eXBlX2xhYmVsIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICAgICAgdG9wOi0zNHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOjEyMHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDozNHB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjM0cHg7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjFweDtcbiAgICAgICAgICAgICAgICBjb2xvcjokYmxhY2s7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JHNlbWlib2xkO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC50b3Age1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIHotaW5kZXg6MTI7XG4gICAgICAgICAgICAgICAgYm94LXNoYWRvdzowIDAgMTVweCByZ2JhKDIwLDI1LDMyLDAuMTUpO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDoyMzBweDtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciB0b3A7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246dHJhbnNmb3JtIDAuM3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAuYnRtIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgICAgICAgICAgei1pbmRleDoxMTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzozMHB4IDQwcHggODBweCAyMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBwIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAucm1fd3JhcCB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDoyMHB4O1xuICAgICAgICAgICAgICAgIGJvdHRvbToyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAjcmVzb3VyY2VzX3NlYXJjaCB7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICBwYWRkaW5nOjIwcHggMDtcbiAgICBcbiAgICAgICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAjcmVzb3VyY2VzIHtcbiAgICAgICAgd2lkdGg6Y2FsYygxMDAlIC0gNDBweCk7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICBcbiAgICAgICAgLy9SRVNPVVJDRVMgR1JJRFxuICAgICAgICAjcmVzb3VyY2VzLWxpc3Qge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDo2MHB4O1xuICAgICAgICBcbiAgICAgICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDo0MDBweDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDcwcHggYXV0bztcbiAgICBcbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDNuICsgMSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDphdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC50b3Age1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjI2MHB4O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgI3Jlc291cmNlcyB7XG4gICAgICAgIFxuICAgICAgICAjcmVzb3VyY2VzLWxpc3Qge1xuICAgICAgICBcbiAgICAgICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDUwJSAtIDIwcHgpO1xuICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoM24gKyAxKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjQwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6bnRoLW9mLXR5cGUoMm4gKyAxKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC50b3Age1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDoxODBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBCTE9HIExJU1RJTkcgLyBERVRBSUwgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uYXJjaGl2ZSxcbi5zZWFyY2gge1xuICAgIFxuICAgIC5saXN0aW5nIHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIC5pdGVtIHtcbiAgICAgICAgcGFkZGluZzoyOHB4IDAgMjhweCA2MHB4O1xuICAgICAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAkZ3JheV9saWdodDtcbiAgICB9XG4gICAgXG4gICAgLnRodW1iIHtcbiAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICBtYXJnaW46MCAwIDEwcHg7XG4gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmltZyB7XG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOnNjYWxlKDEuMDUpIHJvdGF0ZSgwLjAyZGVnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuaW1nIHtcbiAgICAgICAgaGVpZ2h0OjIwMHB4O1xuICAgICAgICBtaW4taGVpZ2h0OjIwMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kOiRibHVlO1xuICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICB0cmFuc2Zvcm0tb3JpZ2luOmNlbnRlciBjZW50ZXI7XG4gICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgfVxuICAgIFxuICAgIC5tZXRhX2NhdHMge1xuICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgbGluZS1oZWlnaHQ6MS4zZW07XG4gICAgfVxuICAgIFxuICAgIC5sZWZ0IHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIC5saXN0X2NvbnQge1xuICAgICAgICBwYWRkaW5nLWxlZnQ6MzZweDtcbiAgICAgICAgXG4gICAgICAgIGgzIHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMWVtO1xuICAgICAgICAgICAgZm9udC1zaXplOjEuMzNlbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7XG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lO1xuICAgICAgICAgICAgbGV0dGVyLXNwYWNpbmc6MDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBwIHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMWVtO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5ieWxpbmUge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIG1hcmdpbjowIDAgMWVtO1xuICAgICAgICBcbiAgICAgICAgLmhlYWRzaG90IHtcbiAgICAgICAgICAgIHdpZHRoOjQ2cHg7XG4gICAgICAgICAgICBoZWlnaHQ6NDZweDtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OjE1cHg7XG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOjI1cHg7XG4gICAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIHRvcDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHAge1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDoxLjNlbTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JHNlbWlib2xkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qIFNPQ0lBTCBTSEFSSU5HIEJBUiAqL1xuI3liX3NvY2lhbF9iYXIge1xuICAgIHdpZHRoOjEwMCU7XG4gICAgYmFja2dyb3VuZDpub25lO1xuICAgIG1hcmdpbjowIDAgMzBweDtcbiAgICBwYWRkaW5nOjMwcHggMDtcbiAgICBib3JkZXItYm90dG9tOjFweCBzb2xpZCAkZ3JheV9saWdodDtcbiAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgei1pbmRleDoxMDAwO1xuICAgIHRyYW5zaXRpb246YWxsIDAuNXM7XG4gICAgXG4gICAgLmFyY2hpdmUgJiB7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgYm9yZGVyOm5vbmU7XG4gICAgfVxuICAgIFxuICAgIGEge1xuICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6MTZweDtcbiAgICAgICAgaGVpZ2h0OjE2cHg7XG4gICAgICAgIG1hcmdpbjowIDEwcHggMCAwO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkZ3JheTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3M7XG4gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRvcmFuZ2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGltZyB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eToxO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC5hZGR0b2FueV9saXN0IGEsXG4gICAgLndpZGdldCAuYWRkdG9hbnlfbGlzdCBhIHtcbiAgICAgICAgcGFkZGluZzowO1xuICAgIH1cbn1cblxuLy8gUkVMQVRFRCBQT1NUUyBGT1IgV1Bcbi5zaW5nbGUtcG9zdCB7XG4gICAgLnJwNHdwLXJlbGF0ZWQtcG9zdHMge1xuICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuICAgIFxuICAgICNyZWxhdGVkIHtcbiAgICAgICAgaDQge1xuICAgICAgICAgICAgbWFyZ2luOjFlbSAwO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5ycDR3cC1yZWxhdGVkLXBvc3RzIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5ycDR3cC1wb3N0cy1saXN0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYygzMy4zMzMzJSAtIDE0cHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMCAyMHB4O1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLnRodW1iIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgICAgICBtYXJnaW46MCAwIDEwcHg7XG4gICAgICAgIFxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuaW1nIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnNjYWxlKDEuMDUpIHJvdGF0ZSgwLjAyZGVnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmltZyB7XG4gICAgICAgICAgICBoZWlnaHQ6MjAwcHg7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OjIwMHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDokYmx1ZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZTpjb3ZlcjtcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46Y2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGg1IHtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmFyY2hpdmUsXG4gICAgLnNlYXJjaCB7XG4gICAgXG4gICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgIG1heC13aWR0aDo0ODBweDtcbiAgICAgICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgICAgICBwYWRkaW5nOjI4cHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgaGVpZ2h0OjI2MHB4O1xuICAgICAgICAgICAgbWluLWhlaWdodDoyNjBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLm1ldGFfY2F0cyB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMzBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAubGlzdF9jb250IHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDowO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICN5Yl9zb2NpYWxfYmFyIHtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgfVxuICAgIFxuICAgIC5zaW5nbGUtcG9zdCB7XG4gICAgICAgIFxuICAgICAgICAjcmVsYXRlZCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5ycDR3cC1wb3N0cy1saXN0IHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTo4MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgbGkge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICBtYXgtd2lkdGg6NDgwcHg7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gNDBweDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gNDBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmltZyB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjI2MHB4O1xuICAgICAgICAgICAgICAgIG1pbi1oZWlnaHQ6MjYwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuYXJjaGl2ZSxcbiAgICAuc2VhcmNoIHtcbiAgICAgICAgXG4gICAgICAgIC5pdGVtIHtcbiAgICAgICAgICAgIHBhZGRpbmc6MjhweCAwO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5pbWcge1xuICAgICAgICAgICAgaGVpZ2h0OjEyMHB4O1xuICAgICAgICAgICAgbWluLWhlaWdodDoxMjBweDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAubGlzdF9jb250IHtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDoyNnB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5zaW5nbGUtcG9zdCB7XG4gICAgICAgIFxuICAgICAgICAjcmVsYXRlZCB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pbWcge1xuICAgICAgICAgICAgICAgIGhlaWdodDoxMjBweDtcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OjEyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIENPTlRBQ1QgUEFHRSAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNjb250YWN0X3BhbmVscyB7XG4gICAgXG4gICAgXG4gICAgI2NvbnRhY3RfdGFicyB7XG4gICAgICAgIFxuICAgICAgICAudGFic193cmFwIHtcbiAgICAgICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpmbGV4LXN0YXJ0O1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTozMHB4O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAudGFiIHtcbiAgICAgICAgICAgIGZsZXg6MCAwIDMwJTtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICRncmF5O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTsgXG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgZm9udC1zaXplOjEuNTZlbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDoyLjRlbTtcbiAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgIGN1cnNvcjpwb2ludGVyO1xuICAgICAgICAgICAgb3V0bGluZTpub25lO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgICAgIGJvdHRvbTotNHB4O1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjRweDtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTRweCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBjb2xvcjokb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5jb250YWN0X2NvbnQge1xuICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgIG9wYWNpdHk6MDtcbiAgICAgICAgdmlzaWJpbGl0eTpoaWRkZW47XG4gICAgICAgIHRyYW5zaXRpb246b3BhY2l0eSAwLjNzO1xuICAgICAgICBcbiAgICAgICAgJi5hY3RpdmUge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIG9wYWNpdHk6MTtcbiAgICAgICAgICAgIHZpc2liaWxpdHk6dmlzaWJsZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJiNTYWxlc0Mge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5mb3JtX2VtYmVkIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjIuMzNlbTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuc2FsZXNfbG9jcyB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgICAgICBcbiAgICAgICAgLmJ1Y2tldCB7XG4gICAgICAgICAgICBmbGV4OjAgMCAzMy4zMzMlO1xuICAgICAgICAgICAgYWxpZ24tc2VsZjpzdHJldGNoO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBoNCB7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzoycHg7XG4gICAgICAgIH1cbiAgICB9XG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU0lURVdJREUgQlVUVE9OUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuYS5idG4sXG4uYnRuIGEsXG5hIHNwYW4uYnRuLFxuaW5wdXRbdHlwZT0naW1hZ2UnXSxcbmlucHV0W3R5cGU9J3N1Ym1pdCddLFxuaW5wdXRbdHlwZT0nYnV0dG9uJ10sXG5idXR0b24uYnRuLFxuYnV0dG9uLmdwbmYtYWRkLWVudHJ5LFxuLndwLWJsb2NrLWJ1dHRvbl9fbGluayB7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgbWFyZ2luOjAgMCAxLjY3ZW0gMDtcbiAgICBwYWRkaW5nOjEwcHggMjBweDtcbiAgICB3aWR0aDphdXRvO1xuICAgIGJhY2tncm91bmQ6JG9yYW5nZSAhaW1wb3J0YW50O1xuICAgIGZvbnQtZmFtaWx5OiAkc3NhbnM7XG4gICAgZm9udC1zaXplOiAxLjI1ZW07XG4gICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZDtcbiAgICBmb250LXN0eWxlOm5vcm1hbDtcbiAgICBsaW5lLWhlaWdodDoxLjRlbSAhaW1wb3J0YW50O1xuICAgIGNvbG9yOiAkd2hpdGUgIWltcG9ydGFudDtcbiAgICBib3JkZXI6MnB4IHNvbGlkICRvcmFuZ2U7XG4gICAgYm9yZGVyLXJhZGl1czoxMDBweDtcbiAgICB0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50O1xuICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTpub25lO1xuICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgY3Vyc29yOnBvaW50ZXI7XG4gICAgdXNlci1zZWxlY3Q6bm9uZTtcbiAgICBcbiAgICAmLm9mZnNldCB7XG4gICAgICAgIG1hcmdpbi1sZWZ0OjIwcHg7XG4gICAgfVxuICAgIFxuICAgICYub3V0bGluZSB7XG4gICAgICAgIGJhY2tncm91bmQ6bm9uZSAhaW1wb3J0YW50O1xuICAgICAgICBjb2xvcjogJG9yYW5nZSAhaW1wb3J0YW50O1xuICAgIH1cbiAgICBcbiAgICAmLnNtYWxsIHtcbiAgICAgICAgcGFkZGluZzo1cHggMTBweDtcbiAgICAgICAgZm9udC1zaXplOjAuOWVtO1xuICAgICAgICBcbiAgICAgICAgJi5zcSB7XG4gICAgICAgICAgICBwYWRkaW5nOjEwcHggNDBweCAxMHB4IDE1cHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHJpZ2h0OjE1cHg7XG4gICAgICAgICAgICAgICAgdG9wOmNhbGMoNTAlICsgMXB4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAmLnNxIHtcbiAgICAgICAgcGFkZGluZy1yaWdodDo0MHB4O1xuICAgICAgICBib3JkZXItcmFkaXVzOjA7XG4gICAgICAgIGJvcmRlcjoycHggc29saWQgJHB1cnBsZV9kYXJrO1xuICAgICAgICBiYWNrZ3JvdW5kOm5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyayAhaW1wb3J0YW50O1xuICAgICAgICBcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIHJpZ2h0OjIwcHg7XG4gICAgICAgICAgICB0b3A6Y2FsYyg1MCUgKyAycHgpO1xuICAgICAgICAgICAgd2lkdGg6IDA7IFxuICAgICAgICAgICAgaGVpZ2h0OiAwOyBcbiAgICAgICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgICAgICBib3JkZXItd2lkdGg6IDZweCAwIDZweCAxMHB4O1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkb3JhbmdlO1xuICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvKi5hcnJvdyB7XG4gICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjEwcHg7XG4gICAgICAgICAgICB3aWR0aDogMDsgXG4gICAgICAgICAgICBoZWlnaHQ6IDA7IFxuICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgIGJvcmRlci13aWR0aDogNnB4IDAgNnB4IDEwcHg7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50ICRvcmFuZ2U7XG4gICAgICAgIH0qL1xuICAgICAgICBcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiRwdXJwbGVfZGFyayAhaW1wb3J0YW50O1xuICAgICAgICAgICAgY29sb3I6JG9yYW5nZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiRwdXJwbGVfZGFyayAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICY6aG92ZXIge1xuICAgICAgICBjb2xvcjogJHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjokYmx1ZSAhaW1wb3J0YW50O1xuICAgICAgICBiYWNrZ3JvdW5kOiRibHVlICFpbXBvcnRhbnQ7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG5pbnB1dFt0eXBlPSdzdWJtaXQnXSxcbmlucHV0W3R5cGU9J2J1dHRvbiddIHtcbiAgICBcbiAgICBcbiAgICAmOmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTpub25lO1xuICAgIH1cbn1cblxuYS5idG4uZGlzYWJsZWQsXG4uYnRuIGEuZGlzYWJsZWQsXG5pbnB1dFt0eXBlPSdpbWFnZSddOmRpc2FibGVkLFxuaW5wdXRbdHlwZT0nc3VibWl0J106ZGlzYWJsZWQsXG5pbnB1dFt0eXBlPSdidXR0b24nXTpkaXNhYmxlZCxcbmJ1dHRvbi5idG46ZGlzYWJsZWQsXG5idXR0b24uZ3BuZi1hZGQtZW50cnk6ZGlzYWJsZWQsXG4ud3AtYmxvY2stYnV0dG9uX19saW5rLmRpc2FibGVkIHtcbiAgICBjdXJzb3I6ZGVmYXVsdDtcbiAgICBjb2xvcjogJHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogJG9mZndoaXRlICFpbXBvcnRhbnQ7XG4gICAgYm9yZGVyLWNvbG9yOiAkb2Zmd2hpdGUgIWltcG9ydGFudDtcbiAgICBcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgY3Vyc29yOmRlZmF1bHQ7XG4gICAgICAgIGNvbG9yOiAkd2hpdGUgIWltcG9ydGFudDtcbiAgICAgICAgYmFja2dyb3VuZDogJG9mZndoaXRlICFpbXBvcnRhbnQ7XG4gICAgICAgIGJvcmRlci1jb2xvcjogJG9mZndoaXRlICFpbXBvcnRhbnQ7XG4gICAgfVxufVxuXG4vL1ZJREVPIFBMQVkgQlROXG4ucGxheV9idG4ge1xuICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgbGVmdDo1MCU7XG4gICAgdG9wOjUwJTtcbiAgICBtYXJnaW46LTQ4cHggMCAwIC00OHB4O1xuICAgIHdpZHRoOjk2cHg7XG4gICAgaGVpZ2h0Ojk2cHg7XG4gICAgYm9yZGVyLXJhZGl1czo0OHB4O1xuICAgIGJhY2tncm91bmQ6cmdiYSgyNTUsMjU1LDI1NSwwLjgpO1xuICAgIG9wYWNpdHk6MTtcbiAgICB2aXNpYmlsaXR5OnZpc2libGU7XG4gICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICB6LWluZGV4OjIwO1xuICAgIGN1cnNvcjpwb2ludGVyO1xuICAgIFxuICAgICY6YWZ0ZXIge1xuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgbGVmdDoyM3B4O1xuICAgICAgICB0b3A6MjlweDtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIHdpZHRoOjQ2cHg7XG4gICAgICAgIGhlaWdodDozOHB4O1xuICAgICAgICBsaW5lLWhlaWdodDozOHB4O1xuICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgY29sb3I6JG9yYW5nZTtcbiAgICAgICAgZm9udC1mYW1pbHk6J2Rhc2hpY29ucyc7XG4gICAgICAgIGNvbnRlbnQ6J1xcZjUyMic7XG4gICAgICAgIGZvbnQtc2l6ZTo1OHB4O1xuICAgICAgICB0cmFuc2l0aW9uOmFsbCAwLjNzO1xuICAgIH1cbiAgICBcbiAgICAmOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgIFxuICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAkYmx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAmLm9mZiB7XG4gICAgICAgIG9wYWNpdHk6MDtcbiAgICAgICAgdmlzaWJpbGl0eTpoaWRkZW47XG4gICAgfVxufVxuXG4vLyBIRUFERVIgQ1RBXG4jaGVhZGVyX2N0YSxcbiNoZWFkZXJfY3RhX21vYmlsZSB7XG4gICAgZmxvYXQ6cmlnaHQ7XG4gICAgbWFyZ2luOjE4cHggMCAwIDQ4cHg7XG4gICAgcGFkZGluZzozcHggMTVweDtcbiAgICBsaW5lLWhlaWdodDozM3B4ICFpbXBvcnRhbnQ7XG59XG5cbiNoZWFkZXJfY3RhX21vYmlsZSB7XG4gICAgZmxvYXQ6bGVmdDtcbiAgICBtYXJnaW46MThweCAwIDAgMDtcbn1cblxuLnJlYWRfbW9yZSB7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgcGFkZGluZy1yaWdodDo0MHB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgIGZvbnQtc2l6ZToxLjY3ZW07XG4gICAgbGluZS1oZWlnaHQ6MS4zMzNlbTtcbiAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgY29sb3I6JHB1cnBsZV9kYXJrO1xuICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgXG4gICAgJjphZnRlciB7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICByaWdodDoyMHB4O1xuICAgICAgICB0b3A6Y2FsYyg1MCUgKyAycHgpO1xuICAgICAgICB3aWR0aDogMDsgXG4gICAgICAgIGhlaWdodDogMDsgXG4gICAgICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgICAgIGJvcmRlci13aWR0aDogNnB4IDAgNnB4IDEwcHg7XG4gICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJG9yYW5nZTtcbiAgICAgICAgY29udGVudDonJztcbiAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgfVxufVxuXG5cbi8vIEdVVEVOQkVSRyBCVVRUT04gU1RZTEVTXG4ud3AtYmxvY2stYnV0dG9ucyB7XG4gICAgd2lkdGg6MTAwJTtcbiAgICBtYXgtd2lkdGg6MTM2MHB4O1xuICAgIG1hcmdpbi1yaWdodDphdXRvO1xuICAgIG1hcmdpbi1sZWZ0OmF1dG87XG5cbiAgICAud3AtYmxvY2stYnV0dG9uIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTowO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6MjBweDtcbiAgICAgICAgXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6MDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLndwLWJsb2NrLWJ1dHRvbl9fbGluayB7XG5cdGJvcmRlci1yYWRpdXM6IDA7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MHB4KSB7XG4gICAgXG4gICAgI2hlYWRlcl9jdGEge1xuICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuICAgICNoZWFkZXJfY3RhX21vYmlsZSB7XG4gICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG5cbiAgICBhLmJ0bixcbiAgICAuYnRuIGEsXG4gICAgYSBzcGFuLmJ0bixcbiAgICBpbnB1dFt0eXBlPSdpbWFnZSddLFxuICAgIGlucHV0W3R5cGU9J3N1Ym1pdCddLFxuICAgIGlucHV0W3R5cGU9J2J1dHRvbiddLFxuICAgIGJ1dHRvbi5idG4sXG4gICAgYnV0dG9uLmdwbmYtYWRkLWVudHJ5LFxuICAgIC53cC1ibG9jay1idXR0b25fX2xpbmsge1xuICAgICAgICBcbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkxcHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgICNoZWFkZXJfY3RhIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6MThweDtcbiAgICB9XG4gICAgXG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogSEVBREVSICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuI21vYmlsZV9uYXZfdG9nZ2xlIHtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgcmlnaHQ6MDtcbiAgICB0b3A6NXB4O1xuICAgIHdpZHRoOjcwcHg7XG4gICAgaGVpZ2h0OjUwcHg7XG4gICAgbWFyZ2luOjAgYXV0bztcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3V0bGluZTpub25lO1xuICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICB6LWluZGV4OjEwMDEwO1xuICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgXG4gICAgJi5vcGVuIHtcbiAgICAgICAgdG9wOjVweDtcbiAgICB9XG4gICAgXG4gICAgLmlubmVyIHtcbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OjA7XG4gICAgICAgIHRvcDoxNnB4O1xuICAgICAgICB3aWR0aDoyNHB4O1xuICAgICAgICBoZWlnaHQ6MjFweDtcbiAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgICAgIHRyYW5zaXRpb246IC41cyBlYXNlLWluLW91dDtcbiAgICB9XG59XG4jbW9iaWxlX25hdl90b2dnbGUgc3BhbiB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGhlaWdodDogMnB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICBvcGFjaXR5OiAxO1xuICAgIGxlZnQ6IDA7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgdHJhbnNpdGlvbjogLjI1cyBlYXNlLWluLW91dDtcbn1cbiNtb2JpbGVfbmF2X3RvZ2dsZS5vcGVuIHNwYW4ge1xuICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbn1cbiNtb2JpbGVfbmF2X3RvZ2dsZSBzcGFuOm50aC1jaGlsZCgxKSB7XG4gICAgdG9wOiAwcHg7XG59XG4jbW9iaWxlX25hdl90b2dnbGUgc3BhbjpudGgtY2hpbGQoMiksXG4jbW9iaWxlX25hdl90b2dnbGUgc3BhbjpudGgtY2hpbGQoMykge1xuICAgIHRvcDogOXB4O1xufVxuI21vYmlsZV9uYXZfdG9nZ2xlIHNwYW46bnRoLWNoaWxkKDQpIHtcbiAgICB0b3A6IDE4cHg7XG59XG4jbW9iaWxlX25hdl90b2dnbGUub3BlbiBzcGFuOm50aC1jaGlsZCgxKSB7XG4gICAgdG9wOiA5cHg7XG4gICAgd2lkdGg6IDAlO1xuICAgIGxlZnQ6IDUwJTtcbn1cbiNtb2JpbGVfbmF2X3RvZ2dsZS5vcGVuIHNwYW46bnRoLWNoaWxkKDIpIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xufVxuI21vYmlsZV9uYXZfdG9nZ2xlLm9wZW4gc3BhbjpudGgtY2hpbGQoMykge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpO1xufVxuI21vYmlsZV9uYXZfdG9nZ2xlLm9wZW4gc3BhbjpudGgtY2hpbGQoNCkge1xuICAgIHRvcDogOXB4O1xuICAgIHdpZHRoOiAwJTtcbiAgICBsZWZ0OiA1MCU7XG59XG5cbiNtb2JpbGVfbmF2X3RyYXkge1xuICAgIGRpc3BsYXk6bm9uZTtcbiAgICBwb3NpdGlvbjpmaXhlZDtcbiAgICB0b3A6NjBweDtcbiAgICBib3R0b206MDtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGhlaWdodDpjYWxjKDEwMHZoIC0gNjBweCk7XG4gICAgcGFkZGluZzoyMHB4IDIwcHggMTQwcHg7XG4gICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgIG92ZXJmbG93OnNjcm9sbDtcbiAgICB6LWluZGV4OjEwMDAwO1xuICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgIFxuICAgIC5tb2JpbGVfbmF2X29wZW4gJiB7XG4gICAgICAgIFxuICAgIH1cbn1cblxuLnNpdGUtaGVhZGVyIHtcbiAgICAvL3Bvc2l0aW9uOnJlbGF0aXZlO1xuICAgIHBvc2l0aW9uOmZpeGVkO1xuICAgIGxlZnQ6MDtcbiAgICB0b3A6MDtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgIGJvcmRlci1ib3R0b206MXB4IHNvbGlkICR3aGl0ZTtcbiAgICBoZWlnaHQ6ODBweDtcbiAgICB0cmFuc2l0aW9uOmFsbCAwLjNzIGxpbmVhcjtcbiAgICB6LWluZGV4OjEwMDA7XG4gICAgXG4gICAgLm1vYmlsZV9uYXZfb3BlbiAmIHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIC5ncmlkLXBhZCB7XG4gICAgICAgIHBhZGRpbmctdG9wOjA7XG4gICAgfVxuICAgIFxuICAgICYuc2Nyb2xsaW5nIHtcbiAgICAgICAgLypwb3NpdGlvbjpmaXhlZDtcbiAgICAgICAgdG9wOi0xMDAlO1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7Ki9cbiAgICAgICAgaGVpZ2h0OjgwcHg7XG4gICAgfVxufVxuXG4uaGVhZGVyX2lubmVyIHtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAvL3dpZHRoOjEwMCU7XG4gICAgd2lkdGg6Y2FsYygxMDAlIC0gODBweCk7XG4gICAgaGVpZ2h0OjEwMCU7XG4gICAgbWFyZ2luOjAgYXV0bztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4uc2l0ZS10aXRsZSB7XG4gICAgZmxvYXQ6bGVmdDtcbiAgICBkaXNwbGF5OmJsb2NrO1xuICAgIHdpZHRoOjE2MHB4O1xuICAgIG1heC13aWR0aDoxMDAlO1xuICAgIC8vaGVpZ2h0OjEwNnB4O1xuICAgIGhlaWdodDphdXRvO1xuICAgIG1hcmdpbjoyNnB4IDAgMCAwO1xuICAgIHotaW5kZXg6MTAwMDtcbiAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgdmVydGljYWwtYWxpZ246dG9wO1xuICAgIHRyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyO1xuICAgIFxuICAgIC5zY3JvbGxpbmcgJiB7XG4gICAgICAgIG1hcmdpbjoyNnB4IDAgMCAwO1xuICAgICAgICBcbiAgICAgICAgLm1vYmlsZV9uYXZfb3BlbiAmIHtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuaG9tZSAmIHtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICA+IGEge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLm1vYmlsZV9uYXZfb3BlbiAmIHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgID4gYSB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIFxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmhvbWUgJiB7XG4gICAgICAgIFxuICAgIH1cbn1cblxuLmhlYWRlcl9yaWdodCB7XG4gICAgbWFyZ2luOjA7XG4gICAgei1pbmRleDoxMDAwO1xuICAgIHRyYW5zaXRpb246YWxsIDAuM3MgbGluZWFyO1xuICAgIFxuICAgIC5zY3JvbGxpbmcgJiB7XG4gICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgICAgXG4gICAgICAgIC5ob21lICYge1xuICAgICAgICAgICAgbWFyZ2luLXRvcDowO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDk5MHB4KSB7XG5cbiAgICAjbW9iaWxlX25hdl90b2dnbGUge1xuICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDk5MHB4KSB7XG4gICAgXG4gICAgI21vYmlsZV9uYXZfdG9nZ2xlIHtcbiAgICAgICAgdG9wOjE1cHg7XG4gICAgfVxuICAgIFxuICAgICNtb2JpbGVfbmF2X3RyYXkge1xuICAgICAgICB0b3A6ODBweDtcbiAgICAgICAgaGVpZ2h0OmNhbGMoMTAwdmggLSA4MHB4KTtcbiAgICAgICAgcGFkZGluZzoyMHB4IDQwcHggMTQwcHg7XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgXG4gICAgI21vYmlsZV9uYXZfdG9nZ2xlIHtcbiAgICBcbiAgICAgICAgJi5vcGVuIHtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5zaXRlLWhlYWRlciB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICBoZWlnaHQ6NjBweDtcbiAgICB9XG4gICAgXG4gICAgLmhlYWRlcl9pbm5lciB7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO1xuICAgIH1cblxuICAgIC5zaXRlLXRpdGxlIHtcbiAgICAgICAgbWFyZ2luLXRvcDoxN3B4O1xuICAgICAgICBcbiAgICAgICAgLnNjcm9sbGluZyAmIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6MTdweDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAxMjYwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBGT09URVIgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4uc2l0ZS1mb290ZXIge1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICBcbiAgICAubG9nbyB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDYwcHgpO1xuICAgICAgICBtYXgtd2lkdGg6MjAwcHg7XG4gICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICBtYXJnaW46MCAwIDQwcHg7XG4gICAgICAgIHotaW5kZXg6MTAwMDtcbiAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICAgIFxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmZvb3Rlcl9pbm5lciB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA4MHB4KTtcbiAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgIHBhZGRpbmc6NjBweCAwO1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICBcbiAgICAgICAgLmdyaWQge1xuICAgICAgICAgICAgbWluLXdpZHRoOjA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgI21lbnUtZm9vdGVyLW5hdiB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgZmxleC1mbG93OnJvdztcbiAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjMwcHg7XG4gICAgICAgIFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjEwcHggMDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjQ1ZW07XG4gICAgICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICA+IGEge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDMwcHg7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS4xZW07XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJi5ub2xpbmsge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiRibGFjaztcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOmRlZmF1bHQ7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiRibGFjaztcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjpkZWZhdWx0O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBsaSBsaSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6aG92ZXIgPiBhLFxuICAgICAgICAgICAgJjpmb2N1cyA+IGEsXG4gICAgICAgICAgICAmLmN1cnJlbnQtbWVudS1pdGVtID4gYSxcbiAgICAgICAgICAgICYuY3VycmVudC1tZW51LWFuY2VzdG9yID4gYSxcbiAgICAgICAgICAgICYuY3VycmVudC1wb3N0LWFuY2VzdG9yID4gYSxcbiAgICAgICAgICAgICYuY3VycmVudC1wYWdlLWFuY2VzdG9yID4gYSB7XG4gICAgICAgICAgICAgICAgY29sb3I6JG9yYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBwIHtcbiAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgXG4gICAgICAgICYuY29weXJpZ2h0IHtcbiAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBmb250LXNpemU6MC45ZW07XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDoxLjQ1ZW07XG4gICAgICAgICAgICBjb2xvcjokcHVycGxlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHB1cnBsZTtcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuc29jaWFsX2NvbnQge1xuICAgICAgICBtYXJnaW46MCAwIDQwcHg7XG4gICAgfVxuICAgIFxuICAgIC5zb2NpYWwge1xuICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOjM4cHg7XG4gICAgICAgIGhlaWdodDozOHB4O1xuICAgICAgICBtYXJnaW46MCAwIDAgMTBweDtcbiAgICAgICAgYm9yZGVyOjJweCBzb2xpZCAkcHVycGxlX2Rhcms7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6NTBweDtcbiAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICAgICAgdGV4dC1pbmRlbnQ6LTk5OTlweDtcbiAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgIFxuICAgICAgICAmLmZpcnN0IHtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYuZ2gge1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgdG9wOjE3cHg7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgICAgICBmaWxsOiAkd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAkd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLmJnIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHN2ZyB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICBsZWZ0OjUwJTtcbiAgICAgICAgICAgIHRvcDo1MCU7XG4gICAgICAgICAgICBtYXJnaW46LTIwcHggMCAwIDA7XG4gICAgICAgICAgICBoZWlnaHQ6NDBweDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xuICAgICAgICAgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLTUwJSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcztcbiAgICAgICAgICAgICAgICBmaWxsOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuYmcge1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjokb3JhbmdlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzdmcgLmljb24ge1xuICAgICAgICAgICAgICAgIGZpbGw6ICRvcmFuZ2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcblx0XG5cdC5zaXRlLWZvb3RlciB7XG4gICAgICAgIFxuICAgICAgICAubG9nbyB7XG4gICAgICAgICAgICBtYXJnaW46MCBhdXRvIDQwcHg7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmZvb3Rlcl9pbm5lciB7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgI21lbnUtZm9vdGVyLW5hdiB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5zdWItbWVudSB7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCA0MHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgIGxpIGxpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzozcHggMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIHAge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLmNvcHlyaWdodCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLnNvY2lhbF9jb250IHtcbiAgICAgICAgICAgIG1hcmdpbjowIGF1dG8gNDBweDtcbiAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICB9XG4gICAgXG4gICAgfVxuXHRcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuc2l0ZS1mb290ZXIge1xuICAgICAgICBcbiAgICAgICAgLnNvY2lhbF9jb250IHtcbiAgICAgICAgICAgIG1hcmdpbjowIDIwcHggNDBweCAwO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuc29jaWFsIHtcbiAgICAgICAgICAgIHdpZHRoOjI4cHg7XG4gICAgICAgICAgICBoZWlnaHQ6MjhweDtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMTBweCAxMHB4O1xuICAgICAgICBcbiAgICAgICAgICAgICYuZ2gge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgICAgIHRvcDoxM3B4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgIG1hcmdpbjotMTJweCAwIDAgMDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MjRweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCJAbWVkaWEgcHJpbnQge1xuICBAcGFnZSB7XG4gICAgbWFyZ2luOiAuNWluO1xuICB9XG4gICoge1xuICAgIC13ZWJraXQtcHJpbnQtY29sb3ItYWRqdXN0OiBleGFjdDtcbiAgICBwcmludC1jb2xvci1hZGp1c3Q6IGV4YWN0O1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICB9XG4gIGh0bWwsIGJvZHkge1xuICAgIGNvbG9yOiAjMDAwICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogJHdoaXRlICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IDcuNWluICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgfVxuICBcblxuICBibG9ja3F1b3RlLCB0YWJsZSwgcHJlLCBpbWcsIC5iZy1pbWd7XG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkO1xuICB9XG5cbiAgdWwsIG9sLCBkbCB7XG4gICAgcGFnZS1icmVhay1iZWZvcmU6IGF2b2lkO1xuICB9XG59XG4iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBTRUFSQ0ggKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jc2VhcmNoX2NvbnRhaW5lcixcbiNzZWFyY2hfY29udGFpbmVyX21vYmlsZSB7XG4gICAgZmxvYXQ6cmlnaHQ7XG4gICAgd2lkdGg6MjIwcHg7XG4gICAgaGVpZ2h0OjQwcHg7XG4gICAgbWFyZ2luOjE4cHggMCAwIDA7XG4gICAgYm9yZGVyLXJhZGl1czo1MHB4O1xuICAgIGJvcmRlcjoxcHggc29saWQgJHdoaXRlO1xuICAgIFxuICAgIGZvcm0uc2VhcmNoLWZvcm0ge1xuICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICB9XG4gICAgXG4gICAgbGFiZWwge1xuICAgICAgICBmbG9hdDpsZWZ0O1xuICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6NTBweDtcbiAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICBcbiAgICAgICAgaW5wdXQuc2VhcmNoLWZpZWxkIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgICAgIGJvcmRlcjpub25lO1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBwYWRkaW5nOjAgMTVweDtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgIGZvbnQtc2l6ZTowLjhlbTtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDo0MHB4O1xuICAgICAgICAgICAgYmFja2dyb3VuZDpub25lO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTpub25lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uIHtcbiAgICAgICAgICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmOjotbXMtY2xlYXIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgYnV0dG9uW3R5cGU9J3N1Ym1pdCddOmZvY3VzLFxuICAgIGlucHV0OmZvY3VzIHtcbiAgICAgICAgb3V0bGluZTpub25lO1xuICAgIH1cbiAgICBcbiAgICAuc2VhcmNoLXN1Ym1pdCB7XG4gICAgICAgIGZsb2F0OnJpZ2h0O1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgd2lkdGg6NDBweDtcbiAgICAgICAgaGVpZ2h0OjQwcHg7XG4gICAgICAgIG1hcmdpbjowO1xuICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOjIwcHg7XG4gICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjIwcHg7XG4gICAgICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowO1xuICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgYm94LXNoYWRvdzpub25lO1xuICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgIHRleHQtaW5kZW50Oi05OTk5cHg7XG4gICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7ICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgb3V0bGluZTpub25lO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBzdmcge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDoxMHB4O1xuICAgICAgICAgICAgdG9wOjdweDtcbiAgICAgICAgICAgIHdpZHRoOjIwcHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgI3NlYXJjaC1tYWctZ2xhc3Mge1xuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzO1xuICAgICAgICAgICAgICAgIGZpbGw6ICR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN2ZyAjc2VhcmNoLW1hZy1nbGFzcyB7XG4gICAgICAgICAgICAgICAgZmlsbDogJG9yYW5nZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH1cbiAgICBcbiAgICA6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxuICAgIFxuICAgIDo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxuICAgIFxuICAgIDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH1cbn1cblxuI3NlYXJjaF9jb250YWluZXJfbW9iaWxlIHtcbiAgICBkaXNwbGF5Om5vbmU7XG4gICAgZmxvYXQ6bGVmdDtcbiAgICBtYXJnaW4tbGVmdDoyMHB4O1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTBweCkge1xuICAgIFxuICAgICNzZWFyY2hfY29udGFpbmVyIHtcbiAgICAgICAgZGlzcGxheTpub25lO1xuICAgIH1cbiAgICAjc2VhcmNoX2NvbnRhaW5lcl9tb2JpbGUge1xuICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkxcHgpIGFuZCAobWF4LXdpZHRoOiAxMjYwcHgpIHtcbiAgICBcbiAgICAjc2VhcmNoX2NvbnRhaW5lciB7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDE0MHB4KTtcbiAgICB9XG4gICAgXG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU0lURVdJREUgVEFCTEUgU1RZTEVTICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLy9HRU5FUkFMIFRBQkxFIFNUWUxFU1xudGFibGUge1xuICAgIHdpZHRoOjEwMCU7XG4gICAgbWFyZ2luOiAxZW0gMDsgXG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXk7IFxuICAgIGJvcmRlci10b3A6IG5vbmU7IFxuICAgIHRhYmxlLWxheW91dDphdXRvO1xuICAgIFxuICAgIHRkLFxuICAgIHRoIHsgXG4gICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJGdyYXk7IFxuICAgICAgICBwYWRkaW5nOiAxZW07XG4gICAgICAgIGJhY2tncm91bmQ6ICRvZmZ3aGl0ZTtcbiAgICB9XG4gICAgdGggeyBcbiAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgIH1cblxuICAgIHRyIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRncmF5OyBcbiAgICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAkZ3JheTtcbiAgICAgICAgXG4gICAgICAgICY6bnRoLWNoaWxkKGV2ZW4pIHRkIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICRvZmZ3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvL0xPQ0sgV0lEVEggRk9SIEZJUlNUIENPTFVNTlxuICAgIHRkIHtcbiAgICAgICAgXG4gICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICB3aWR0aDo0MCUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAubmFycm93X3RhYmxlICYge1xuICAgICAgICAvL0xPQ0sgV0lEVEggRk9SIEZJUlNUIENPTFVNTlxuICAgICAgICB0ZCB7XG4gICAgICAgIFxuICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICB3aWR0aDo1NSUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy9JTkxJTkUgV1lTSVdZRyBUQUJMRSBTVFlMRVMgKEFEREVEIFZJQSBUSEUgQ0xBU1NJQyBNQ0UgRURJVE9SKVxuLnd5c2l3eWcge1xuICAgIFxuICAgIHRhYmxlIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJG9mZndoaXRlOyBcbiAgICAgICAgYm9yZGVyLXRvcDogbm9uZTsgXG4gICAgICAgIHRhYmxlLWxheW91dDphdXRvO1xuICAgICAgICBcbiAgICAgICAgdGQsXG4gICAgICAgIHRoIHsgXG4gICAgICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICRvZmZ3aGl0ZTsgXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6YXV0byAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0ciB7XG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJG9mZndoaXRlOyBcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJG9mZndoaXRlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOm50aC1jaGlsZChldmVuKSB0ZCB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHRkIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDokb2Zmd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRib2xkO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5cbi8vSU5GTyBUT09MVElQU1xuLndwdGItc2hvcnRjb2RlLWNvbnRhaW5lci53cHRiLXBoLWVsZW1lbnQge1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIHRvcDowO1xuICAgIHJpZ2h0OjA7XG4gICAgYm90dG9tOjA7XG4gICAgbGVmdDowO1xuICAgIFxuICAgIHdwdGJfc2hvcnRjb2RlX2NvbnRhaW5lcl9lbGVtZW50ID4gZGl2IHtcbiAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgfVxufVxuXG4vL1dQLVRBQkxFLUJVSUxERVIgU1RZTEVTXG4uY29udGVudF9zZWN0aW9uLnlidGFibGUge1xuICAgIFxuICAgIC53cHRiLXRhYmxlLWNvbnRhaW5lciB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206MjBweDtcbiAgICB9XG4gICAgLndwdGItaW1hZ2Utd3JhcHBlciBpbWcge1xuICAgICAgICB3aWR0aDphdXRvICFpbXBvcnRhbnQ7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgfVxuICAgIFxuICAgIC50YWJsZV9mb290bm90ZSB7XG4gICAgICAgIG1hcmdpbjowIGF1dG87XG4gICAgICAgIHdpZHRoOjcwJTtcbiAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgfVxuICAgIFxufVxuXG5cbi5pbmZvX3RpcCB7XG4gICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgcmlnaHQ6MTBweDtcbiAgICB0b3A6NTAlO1xuICAgIHdpZHRoOjIycHg7XG4gICAgaGVpZ2h0OjIycHg7XG4gICAgYm9yZGVyLXJhZGl1czoxMXB4O1xuICAgIG1hcmdpbi10b3A6LTEwcHg7XG4gICAgYmFja2dyb3VuZDokd2hpdGUgdXJsKC4uLy4uL2ltYWdlcy9pbmZvLXRpcC1pY29uLnN2Zykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgIHotaW5kZXg6MTA7XG4gICAgXG4gICAgJjpob3ZlciB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgLnRpcCB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC50aXAge1xuICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICBsZWZ0OmNhbGMoMTAwJSArIDVweCk7XG4gICAgICAgIHRvcDotMzBweDtcbiAgICAgICAgd2lkdGg6NDAwcHg7XG4gICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRncmF5O1xuICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgei1pbmRleDoxMDAwMDtcbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgcGFkZGluZzoxOHB4IDI0cHg7XG4gICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS40NWVtO1xuICAgICAgICAgICAgZm9udC1zaXplOjAuOWVtO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uLnlidGFibGUge1xuICAgIFxuICAgICAgICAud3B0Yi10YWJsZS1jb250YWluZXIge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgLndwdGItaW1hZ2Utd3JhcHBlciBpbWcge1xuICAgICAgICAgICAgXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLnRhYmxlX2Zvb3Rub3RlIHtcbiAgICAgICAgICAgIHdpZHRoOjkwJTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLndwdGItdGFibGUtY29udGFpbmVyLW1hdHJpeCB7XG4gICAgICAgICAgICBvdmVyZmxvdy15OnNjcm9sbCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5pbmZvX3RpcCB7XG4gICAgICAgIFxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgIC50aXAge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5zaG93dGlwIHtcbiAgICAgICAgXG4gICAgICAgICAgICAudGlwIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC50aXAge1xuICAgICAgICAgICAgd2lkdGg6MjAwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBTSVRFV0lERSBQQUdJTkFUSU9OIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vL05BVElWRSBQQUdJTkFUSU9OXG4ucGFnaW5nLW5hdmlnYXRpb24ge1xuICAgIHRleHQtYWxpZ246Y2VudGVyO1xufVxuXG4ucGFnaW5hdGlvbiB7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG5cdHRleHQtYWxpZ246IGNlbnRlcjtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHBhZGRpbmc6IDQ4cHggNjBweDtcblx0bGlzdC1zdHlsZTogbm9uZTtcblx0ei1pbmRleDogMTtcblx0XG5cdCY6YmVmb3JlLFxuXHQmOmFmdGVyIHtcblx0ICAgIHBvc2l0aW9uOmFic29sdXRlO1xuXHQgICAgbGVmdDowO1xuXHQgICAgdG9wOjUwJTtcblx0ICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuXHQgICAgd2lkdGg6NDBweDtcblx0ICAgIGhlaWdodDo5cHg7XG5cdCAgICBiYWNrZ3JvdW5kOnRyYW5zcGFyZW50IHVybCgnLi4vLi4vaW1hZ2VzL3BhZ2luYXRpb24tYXJyb3cuc3ZnJykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG5cdCAgICBjb250ZW50OicnO1xuXHR9XG5cdCY6YWZ0ZXIge1xuXHQgICAgbGVmdDphdXRvO1xuXHQgICAgcmlnaHQ6MDtcblx0ICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpIHJvdGF0ZSgxODBkZWcpO1xuXHR9XG4gICAgXG4gICAgLnBhZ2UtbnVtYmVycyB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgd2lkdGg6NDhweDtcbiAgICAgICAgaGVpZ2h0OjQ4cHg7XG4gICAgICAgIG1hcmdpbjowIDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEzcHggNXB4O1xuICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgIGZvbnQtc2l6ZToyMnB4O1xuICAgICAgICBsaW5lLWhlaWdodDoyMnB4O1xuICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmF5O1xuICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMXB4ICRncmF5O1xuICAgICAgICBiYWNrZ3JvdW5kOiAjZjJmM2Y4O1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcbiAgICAgICAgXG4gICAgICAgICY6aG92ZXIsXG4gICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgY29sb3I6ICMyMjI7XG4gICAgICAgICAgICAvL2JvcmRlci1jb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkb3JhbmdlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAycHggJG9yYW5nZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5jdXJyZW50IHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkb3JhbmdlO1xuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5kb3RzIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6bm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgIHBhZGRpbmctbGVmdDowO1xuICAgICAgICAgICAgd2lkdGg6MjBweDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJi5wcmV2LFxuICAgICAgICAmLm5leHQge1xuICAgICAgICAgICAgd2lkdGg6MTAwcHg7XG4gICAgICAgICAgICBmb250LXNpemU6MThweDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuLy9BSkFYIExPQUQgTU9SRSBQQUdJTkFUSU9OXG51bC5hbG0tcGFnaW5nIHtcbiAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRtYXJnaW46IDAgYXV0bztcblx0cGFkZGluZzogNDhweCA2MHB4O1xuXHRsaXN0LXN0eWxlOiBub25lO1xuXHRvcGFjaXR5OiAwO1xuXHR6LWluZGV4OiAxO1xuXHRcblx0JjpiZWZvcmUsXG5cdCY6YWZ0ZXIge1xuXHQgICAgcG9zaXRpb246YWJzb2x1dGU7XG5cdCAgICBsZWZ0OjA7XG5cdCAgICB0b3A6NTAlO1xuXHQgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSk7XG5cdCAgICB3aWR0aDo0MHB4O1xuXHQgICAgaGVpZ2h0OjlweDtcblx0ICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQgdXJsKCcuLi8uLi9pbWFnZXMvcGFnaW5hdGlvbi1hcnJvdy5zdmcnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcblx0ICAgIGNvbnRlbnQ6Jyc7XG5cdH1cblx0JjphZnRlciB7XG5cdCAgICBsZWZ0OmF1dG87XG5cdCAgICByaWdodDowO1xuXHQgICAgdHJhbnNmb3JtOnRyYW5zbGF0ZVkoLTUwJSkgcm90YXRlKDE4MGRlZyk7XG5cdH1cblx0XG5cdCYuZW1wdHkge1xuXHQgICAgZGlzcGxheTpub25lO1xuXHR9XG5cdFxuXHQ+IGxpIHtcblx0ICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgbWFyZ2luOiAwIDEwcHg7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICBcbiAgICAgICAgJjpiZWZvcmUsXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgY29udGVudDogbm9uZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgIHdpZHRoOjEwMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OjQ4cHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxNXB4O1xuICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTBweDtcbiAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICBmb250LXdlaWdodDokbm9ybWFsO1xuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyYXk7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDFweCAkZ3JheTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmMmYzZjg7XG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyLFxuICAgICAgICAgICAgJjpmb2N1cyB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICMyMjI7XG4gICAgICAgICAgICAgICAgLy9ib3JkZXItY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmFjdGl2ZSB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmLm51bSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6NDhweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MjJweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjEzcHggMTVweDtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYuZGlzYWJsZWQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IGRlZmF1bHQgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLjM7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlcixcbiAgICAgICAgICAgICAgICAmOmZvY3VzIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMyMjI7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYzZjg7XG4gICAgICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDFweCAkZ3JheTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYSB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHdoaXRlO1xuICAgICAgICAgICAgICAgIC8vYm9yZGVyLWNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCAwIDJweCAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2s7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXHR9XG59XG5cblxuLyogUGFnZSBMb2FkaW5nIHN0eWxlcyAqL1xuXG4uYWpheC1sb2FkLW1vcmUtd3JhcCB7XG4gICAgXG4gICAgXG4gICAgLmFsbS1wYWdpbmctY29udGVudCB7XG5cdCAgICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjI1cyBlYXNlO1xuXHQgICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2U7XG5cdH1cblx0XG5cdCYuYWxtLWxvYWRpbmcge1xuXHQgICAgXG5cdCAgICAuYWxtLXBhZ2luZy1jb250ZW50IHtcblx0ICAgICAgICBvcGFjaXR5OiAwLjUgIWltcG9ydGFudDtcblx0ICAgIH1cblx0fVxufVxuXG4uYWxtLXBhZ2luZy13cmFwIC5hbG0tcGFnaW5nLWxvYWRpbmcsXG4uYWpheC1sb2FkLW1vcmUtd3JhcC5hbG0tcGFnaW5nLmFsbS1pcy1maWx0ZXJpbmcge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG5cdGJhY2tncm91bmQtaW1hZ2U6IHVybCgnLi4vLi4vaW1hZ2VzL2xvYWRpbmcuc3ZnJyk7XG5cdGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG5cdGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlciBjZW50ZXI7XG59XG5cbi5hamF4LWxvYWQtbW9yZS13cmFwLmFsbS1sb2FkaW5nLmFsbS1wYWdpbmcgLmFsbS1wYWdpbmctd3JhcCxcbi5hamF4LWxvYWQtbW9yZS13cmFwLmFsbS1sb2FkaW5nIC5hamF4LWxvYWQtbW9yZS13cmFwLmFsbS1pcy1maWx0ZXJpbmcge1xuXHQvKiBPbiBpbml0ICovXG5cdG1pbi1oZWlnaHQ6IDE1MHB4O1xufVxuLmFqYXgtbG9hZC1tb3JlLXdyYXAuYWxtLWlzLWZpbHRlcmluZyB7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uYWxtLXBhZ2luZy13cmFwIC5hbG0tcmV2ZWFsIHtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYWxtLXBhZ2luZy13cmFwIC5hbG0tcGFnaW5nLWxvYWRpbmcge1xuXHRkaXNwbGF5OiBibG9jaztcblx0b3BhY2l0eTogMDtcblx0dmlzaWJpbGl0eTogaGlkZGVuO1xuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHRvcDogMDtcblx0bGVmdDogMDtcblx0d2lkdGg6IDEwMCU7XG5cdGhlaWdodDogMTAwJTtcblx0ei1pbmRleDogOTk5OTtcblx0LXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4yNXMgZWFzZTtcblx0dHJhbnNpdGlvbjogYWxsIDAuMjVzIGVhc2U7XG59XG5cbi5hbG0tbG9hZGluZyAuYWxtLXBhZ2luZy13cmFwIC5hbG0tcGFnaW5nLWxvYWRpbmcge1xuXHR2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRvcGFjaXR5OiAxO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAucGFnaW5hdGlvbiB7XG4gICAgICAgIHBhZGRpbmc6IDQ4cHggMzBweDtcbiAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgIFxuICAgICAgICAmOmJlZm9yZSxcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICB3aWR0aDoyMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OjlweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZToxMDAlIGF1dG87XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLnBhZ2UtbnVtYmVycyB7XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICB3aWR0aDozNnB4O1xuICAgICAgICAgICAgaGVpZ2h0OjM2cHg7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIHBhZGRpbmc6MTBweCA1cHg7XG4gICAgICAgICAgICBmb250LXNpemU6MTZweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE2cHg7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYucHJldixcbiAgICAgICAgICAgICYubmV4dCB7XG4gICAgICAgICAgICAgICAgd2lkdGg6ODBweDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MTZweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAvL0FKQVggTE9BRCBNT1JFIFBBR0lOQVRJT05cbiAgICB1bC5hbG0tcGFnaW5nIHtcbiAgICAgICAgcGFkZGluZzogNDhweCAzMHB4O1xuICAgIFxuICAgICAgICAmOmJlZm9yZSxcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICB3aWR0aDoyMHB4O1xuICAgICAgICAgICAgaGVpZ2h0OjlweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZToxMDAlIGF1dG87XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBtYXJnaW46IDAgMnB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICB3aWR0aDo4MHB4O1xuICAgICAgICAgICAgICAgIGhlaWdodDozNnB4O1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgJi5udW0ge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MzZweDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjE2cHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6MTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA3NjhweCkgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMjVweCkgYW5kIChtYXgtd2lkdGg6ICN7JGJwX2Z1bGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogV0lER0VUIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLndpZGdldCB7XG4gICAgbWFyZ2luOjAgMCAyMHB4O1xuICAgIGJhY2tncm91bmQ6JG9mZndoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6MTBweDtcbiAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgXG4gICAgLmlubmVyIHtcbiAgICAgICAgcGFkZGluZzozMHB4IDIwcHg7XG4gICAgfVxuICAgIFxuICAgICYud2lkZ2V0X3BwbHJwc3RzX3BvcHVsYXJfcG9zdHNfd2lkZ2V0IHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAud2lkZ2V0LXRpdGxlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbToyLjVlbTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxLjIyZW07XG4gICAgICAgICAgICBmb250LXdlaWdodDokc2VtaWJvbGQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgICAgICB0b3A6Y2FsYygxMDAlICsgMjBweCk7XG4gICAgICAgICAgICAgICAgd2lkdGg6NzVweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6MnB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5ybHRkcHN0c3BsZ24tcG9wdWxhci1wb3N0cyB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGFydGljbGUge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgICAgICBib3JkZXItdG9wOjFweCBzb2xpZCAkZ3JheV9saWdodDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGg0IHtcbiAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MWVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgICAgICBsZXR0ZXItc3BhY2luZzowO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjEwcHggMDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRuZWFybHlibGFjaztcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgJi53aWRnZXRfc2VhcmNoIHtcbiAgICAgICAgbWFyZ2luOjAgMCAzMHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIFxuICAgICAgICBmb3JtLnNlYXJjaC1mb3JtIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICBoZWlnaHQ6NDBweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6NTBweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgICAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICAgIGZsb2F0OmxlZnQ7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAgICAgaW5wdXQuc2VhcmNoLWZpZWxkIHtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIGhlaWdodDo0MHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlcjpub25lO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAxNXB4O1xuICAgICAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MC44ZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDo0MHB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICAgICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTpub25lO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XG4gICAgICAgICAgICAgICAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgJjo6LW1zLWNsZWFyIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgYnV0dG9uW3R5cGU9J3N1Ym1pdCddOmZvY3VzLFxuICAgICAgICBpbnB1dDpmb2N1cyB7XG4gICAgICAgICAgICBvdXRsaW5lOm5vbmU7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLnNlYXJjaC1zdWJtaXQge1xuICAgICAgICAgICAgZmxvYXQ6cmlnaHQ7XG4gICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgIHdpZHRoOjQwcHg7XG4gICAgICAgICAgICBoZWlnaHQ6NDBweDtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MjBweDtcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjIwcHg7XG4gICAgICAgICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjA7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIGJveC1zaGFkb3c6bm9uZTtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgIHRleHQtaW5kZW50Oi05OTk5cHg7XG4gICAgICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgICAgICBjdXJzb3I6cG9pbnRlcjsgICAgICAgIFxuICAgICAgICBcbiAgICAgICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgICAgIG91dGxpbmU6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgbGVmdDoxMHB4O1xuICAgICAgICAgICAgICAgIHRvcDo3cHg7XG4gICAgICAgICAgICAgICAgd2lkdGg6MjBweDtcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICNzZWFyY2gtbWFnLWdsYXNzIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYWxsIDAuMnM7XG4gICAgICAgICAgICAgICAgICAgIGZpbGw6ICRibGFjaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzdmcgI3NlYXJjaC1tYWctZ2xhc3Mge1xuICAgICAgICAgICAgICAgICAgICBmaWxsOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgfVxuICAgIFxuICAgICAgICA6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIDo6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgICAgICAgICBjb2xvcjogJGJsYWNrO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLndpZGdldF93cmFwIHtcbiAgICBtYXJnaW46MzBweCAwO1xuICAgIHBhZGRpbmc6MzBweCAyMHB4O1xuICAgIGJhY2tncm91bmQ6JG9mZndoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6MTBweDtcbiAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgXG4gICAgLndpZGdldCB7XG4gICAgICAgIG1hcmdpbjowIDAgMjBweDtcbiAgICAgICAgYmFja2dyb3VuZDpub25lO1xuICAgICAgICBib3JkZXItcmFkaXVzOjA7XG4gICAgfVxufVxuXG4uYmxvZ19jdGFzIHtcbiAgICBcbiAgICAud2lkZ2V0IHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5pY29uIHtcbiAgICAgICAgICAgICAgICB3aWR0aDo0NSU7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjEwMHB4O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6YXV0byA1MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGgzIHtcbiAgICAgICAgICAgICAgICB3aWR0aDo1NSU7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxLjNlbTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTpub25lO1xuICAgICAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG5cbiAgICAuYmxvZ19jdGFzIHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICAuYmxvZ19jdGFzIHtcbiAgICBcbiAgICAgICAgLndpZGdldCB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLmljb24ge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvIDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDo3MHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLXNpemU6YXV0byAxMDAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGgzIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBIRVJPICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4jaGVyb19hbHQge1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIGhlaWdodDoyOTBweDtcbiAgICBtaW4taGVpZ2h0OjI5MHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6JGJsdWU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgei1pbmRleDoxNTtcbiAgICBcbiAgICAmLmJsb2csXG4gICAgJi5zZWFyY2gge1xuICAgICAgICBcbiAgICAgICAgaDEge1xuICAgICAgICAgICAgd2lkdGg6NzAlO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICBsZXR0ZXItc3BhY2luZzoxcHg7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5pbm5lciB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6NjBweDtcbiAgICAgICAgICAgIHRvcDo1MCU7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSAxMjBweCk7XG4gICAgICAgICAgICBtYXgtd2lkdGg6bm9uZTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGVZKC01MCUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5ieWxpbmUge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0O1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIG1hcmdpbjoxLjVlbSAwIDA7XG4gICAgICAgIFxuICAgICAgICAuaGVhZHNob3Qge1xuICAgICAgICAgICAgd2lkdGg6NDZweDtcbiAgICAgICAgICAgIGhlaWdodDo0NnB4O1xuICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6MTVweDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6MjVweDtcbiAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgdG9wO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOmNvdmVyO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuM2VtO1xuICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JHNlbWlib2xkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAmLmdyYWRfb3JhbmdlX3B1cnBsZWRhcmsge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkcHVycGxlX2Rhcms7XG4gICAgICAgIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KDMwZGVnLCAgJG9yYW5nZSAwJSwgcmdiYSgxMTYsMjMsMTMwLDEpIDUwJSwgJHB1cnBsZV9kYXJrIDEwMCUpO1xuICAgICAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgzMGRlZywgICRvcmFuZ2UgMCUscmdiYSgxMTYsMjMsMTMwLDEpIDUwJSwkcHVycGxlX2RhcmsgMTAwJSk7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzMGRlZywgICRvcmFuZ2UgMCUscmdiYSgxMTYsMjMsMTMwLDEpIDUwJSwkcHVycGxlX2RhcmsgMTAwJSk7XG4gICAgICAgIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KCBzdGFydENvbG9yc3RyPScjZmY2ZTQyJywgZW5kQ29sb3JzdHI9JyMwMDAwNDEnLEdyYWRpZW50VHlwZT0xICk7XG4gICAgfVxuICAgIFxuICAgICY6YmVmb3JlIHtcbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgIHRvcDowO1xuICAgICAgICByaWdodDowO1xuICAgICAgICBib3R0b206MDtcbiAgICAgICAgbGVmdDowO1xuICAgICAgICBjb250ZW50OicnO1xuICAgICAgICB6LWluZGV4Oi0xO1xuICAgIH1cbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDgwcHgpO1xuICAgICAgICBtYXgtd2lkdGg6MTM2MHB4O1xuICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgbWluLWhlaWdodDoyOTBweDtcbiAgICAgICAgei1pbmRleDoxMDtcbiAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgIH1cbiAgICBcbiAgICAuaW5uZXIge1xuICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgIHRvcDo1MCU7XG4gICAgICAgIHdpZHRoOjcwJTtcbiAgICAgICAgbWF4LXdpZHRoOjkwMHB4O1xuICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7XG4gICAgfVxuICAgIC5pbm5lcl9jb250ZW50IHtcbiAgICAgICAgXG4gICAgfVxuICAgIFxuICAgIGgxIHtcbiAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgd2lkdGg6NTAlO1xuICAgICAgICBtYXJnaW4tYm90dG9tOjA7XG4gICAgICAgIGZvbnQtc2l6ZTogMmVtO1xuICAgICAgICBsaW5lLWhlaWdodDoxLjExZW07XG4gICAgICAgIGZvbnQtZmFtaWx5OiAkc3NhbnM7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgIGNvbG9yOiRvcmFuZ2U7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6NHB4O1xuICAgIH1cbiAgICBcbiAgICAuc3ViaGVhZGluZyB7XG4gICAgICAgIG1hcmdpbjowO1xuICAgICAgICBmb250LXNpemU6MS4yMmVtO1xuICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH1cbn1cblxuI2hlcm8ge1xuICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgIGhlaWdodDo1MjBweDtcbiAgICBtaW4taGVpZ2h0OjUyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6JGJsdWU7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6Y292ZXI7XG4gICAgei1pbmRleDoxNTtcbiAgICBcbiAgICAmOmJlZm9yZSB7XG4gICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICB0b3A6MDtcbiAgICAgICAgcmlnaHQ6MDtcbiAgICAgICAgYm90dG9tOjA7XG4gICAgICAgIGxlZnQ6MDtcbiAgICAgICAgY29udGVudDonJztcbiAgICAgICAgei1pbmRleDotMTtcbiAgICB9XG4gICAgXG4gICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgIC8qZGlzcGxheTpmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7Ki9cbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDgwcHgpO1xuICAgICAgICBtYXgtd2lkdGg6MTM2MHB4O1xuICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgbWluLWhlaWdodDo1MjBweDtcbiAgICAgICAgei1pbmRleDoxMDtcbiAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgfVxuICAgIFxuICAgIC5pbm5lciB7XG4gICAgICAgIC8qZGlzcGxheTpmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG4gICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIG1hcmdpbjowIGF1dG87Ki9cbiAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICB0b3A6NTAlO1xuICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUoLTUwJSwtNTAlKTtcbiAgICB9XG4gICAgLmlubmVyX2NvbnRlbnQge1xuICAgICAgICBcbiAgICB9XG4gICAgXG4gICAgaDEge1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgIG1hcmdpbjowIDAgMTIwcHg7XG4gICAgICAgIHBhZGRpbmc6MTBweCAyMHB4O1xuICAgICAgICBmb250LXNpemU6My41ZW07XG4gICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOjAuMWVtO1xuICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO1xuICAgICAgICBib3JkZXI6MnB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgXG4gICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICB0b3A6MTAwJTtcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0Oi0xcHg7XG4gICAgICAgICAgICB3aWR0aDoycHg7XG4gICAgICAgICAgICBoZWlnaHQ6OTBweDtcbiAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgIGxlZnQ6NTAlO1xuICAgICAgICAgICAgdG9wOmNhbGMoMTAwJSArIDkwcHgpO1xuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6LTZweDtcbiAgICAgICAgICAgIHdpZHRoOjEycHg7XG4gICAgICAgICAgICBoZWlnaHQ6MTJweDtcbiAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6NnB4O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIHAge1xuICAgICAgICBmb250LXNpemU6MS4xZW07XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIFxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmN0YV9ncm91cCB7XG4gICAgICAgIFxuICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMCA0MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIC5wb3N0X25vdGUge1xuICAgICAgICBtYXJnaW46MC43NWVtIDAgMCAwO1xuICAgICAgICBcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6JGJvbGQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4jbGF0ZXN0X25ld3Mge1xuICAgIGJvcmRlci10b3A6MXB4IHNvbGlkICRncmF5O1xuICAgIFxuICAgIC5jb250ZW50X3NlY3Rpb25faW5uZXIge1xuICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgIH1cbiAgICBcbiAgICAubG5fd3JhcCB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgd2lkdGg6OTAlO1xuICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgfVxuICAgIFxuICAgIC5sbl9sYWJlbCB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIG1hcmdpbjowO1xuICAgICAgICBwYWRkaW5nOjMwcHggMjBweCAzMHB4IDA7XG4gICAgICAgIGZvbnQtc2l6ZToxLjIyZW07XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgIHRleHQtYWxpZ246cmlnaHQ7XG4gICAgfVxuICAgIFxuICAgIC5sbl9saW5rIHtcbiAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIG1hcmdpbjowO1xuICAgICAgICBwYWRkaW5nOjMwcHggMzBweCAzMHB4IDA7XG4gICAgICAgIGZvbnQtc2l6ZToxLjIyZW07XG4gICAgICAgIGxpbmUtaGVpZ2h0OjEuMTVlbTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOm5vbmU7XG4gICAgICAgIGNvbG9yOiR3aGl0ZTtcbiAgICAgICAgXG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICByaWdodDoxMHB4O1xuICAgICAgICAgICAgdG9wOmNhbGMoNTAlICsgMnB4KTtcbiAgICAgICAgICAgIHdpZHRoOiAwOyBcbiAgICAgICAgICAgIGhlaWdodDogMDsgXG4gICAgICAgICAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA2cHggMCA2cHggMTBweDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgJG9yYW5nZTtcbiAgICAgICAgICAgIGNvbnRlbnQ6Jyc7XG4gICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlWSgtNTAlKTtcbiAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHJpZ2h0OjBweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuI2FsZXJ0X2JhciB7XG4gICAgYm9yZGVyLXRvcDoxcHggc29saWQgJGdyYXk7XG4gICAgXG4gICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgfVxuICAgIFxuICAgIC5hbGVydF9iYXJfd3JhcCB7XG4gICAgICAgIHdpZHRoOjUwJTtcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgcGFkZGluZzozMHB4IDA7XG4gICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICBcbiAgICAgICAgKiB7XG4gICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiRvcmFuZ2U7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4jaGVyb19zcyB7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgaGVpZ2h0OjUyMHB4O1xuICAgIG1pbi1oZWlnaHQ6NTIwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjokcHVycGxlX2Rhcms7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246cmlnaHQgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTphdXRvIDEwMCU7XG4gICAgei1pbmRleDoxNTtcbiAgICBcbiAgICAuY29udGVudF9zZWN0aW9uX2lubmVyIHtcbiAgICAgICAgLypkaXNwbGF5OmZsZXg7XG4gICAgICAgIGFsaWduLWl0ZW1zOmNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OmxlZnQ7Ki9cbiAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICBtaW4taGVpZ2h0OjUyMHB4O1xuICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgIHotaW5kZXg6MTA7XG4gICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICB9XG4gICAgXG4gICAgLmlubmVyIHtcbiAgICAgICAgZGlzcGxheTpmbGV4O1xuICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDpsZWZ0O1xuICAgICAgICB3aWR0aDo2MCU7XG4gICAgICAgIGhlaWdodDoxMDAlO1xuICAgIH1cbiAgICAuaW5uZXJfY29udGVudCB7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICAuc3NfbG9nbyB7XG4gICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgIG1hcmdpbjowIDAgMmVtO1xuICAgICAgICBtYXgtd2lkdGg6MjI1cHg7XG4gICAgfVxuICAgIFxuICAgIGgxIHtcbiAgICAgICAgbWFyZ2luOjAgMCAyZW07XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxuICAgIFxuICAgIHAge1xuICAgICAgICBmb250LXNpemU6MS4xZW07XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIFxuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLmN0YV9ncm91cCB7XG4gICAgICAgIFxuICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgIG1hcmdpbjowIDAgMCA0MHB4O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAjaGVyb19hbHQge1xuICAgICAgICBcbiAgICAgICAgJi5ibG9nLFxuICAgICAgICAmLnNlYXJjaCB7XG4gICAgICAgIFxuICAgICAgICAgICAgaDEge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgICAgICBoMSB7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICNoZXJvIHtcbiAgICAgICAgaGVpZ2h0OjUyMHB4O1xuICAgICAgICBtaW4taGVpZ2h0OjUyMHB4O1xuICAgICAgICBcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6NTIwcHg7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgaDEge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCA4MHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOjNlbTtcbiAgICAgICAgXG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjUwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgdG9wOmNhbGMoMTAwJSArIDUwcHgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBwIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgYnIge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuY3RhX2dyb3VwIHtcbiAgICAgICAgXG4gICAgICAgICAgICAuYnRuIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOjQwMHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjoyMHB4IGF1dG8gMDtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmZpcnN0LW9mLXR5cGUge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAjbGF0ZXN0X25ld3Mge1xuICAgICAgICBcbiAgICAgICAgLmxuX3dyYXAge1xuICAgICAgICAgICAgd2lkdGg6Y2FsYygxMDAlIC0gNDBweCk7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5sbl9saW5rIHtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuM2VtO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICNhbGVydF9iYXIge1xuICAgICAgICBcbiAgICAgICAgLmFsZXJ0X2Jhcl93cmFwIHtcbiAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgICNoZXJvX3NzIHtcbiAgICAgICAgaGVpZ2h0OmF1dG87XG4gICAgICAgIG1pbi1oZWlnaHQ6MDtcbiAgICBcbiAgICAgICAgLmNvbnRlbnRfc2VjdGlvbl9pbm5lciB7XG4gICAgICAgICAgICBtaW4taGVpZ2h0OjA7XG4gICAgICAgICAgICBwYWRkaW5nOjQwcHggMjBweDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaW5uZXIge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgI2hlcm8ge1xuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHdpZHRoOjkwJTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaDEge1xuICAgICAgICAgICAgZm9udC1zaXplOjNlbTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBcbiAgICAjYWxlcnRfYmFyIHtcbiAgICAgICAgXG4gICAgICAgIC5hbGVydF9iYXJfd3JhcCB7XG4gICAgICAgICAgICB3aWR0aDo3MCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgI2hlcm9fc3Mge1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOjE3MCUgdG9wO1xuICAgICAgICBcbiAgICAgICAgLmlubmVyIHtcbiAgICAgICAgICAgIHdpZHRoOjUwJTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogMTI2MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59IiwiLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKiogU0xJREVSUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLmltZ19nYWxsZXJ5X3NsaWRlciB7XG4gICAgbWFyZ2luOjQwcHggMCAwIDA7XG4gICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgIGhlaWdodDozMzBweDtcbiAgICBcbiAgICAqIHtcbiAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgIH1cbiAgICBcbiAgICBsaSB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAvL3dpZHRoOjIwMHB4O1xuICAgICAgICBoZWlnaHQ6MzMwcHg7XG4gICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgYmFja2dyb3VuZDpub25lO1xuICAgICAgICB6LWluZGV4OjEwMDA7XG4gICAgICAgIFxuICAgICAgICA+IC5pbm5lciB7XG4gICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIGhlaWdodDoxMDAlO1xuICAgICAgICAgICAgcGFkZGluZzowIDVweDtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpbWcge1xuICAgICAgICAgICAgaGVpZ2h0OjEwMCU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi50ZXN0X3NsaWRlciB7XG4gICAgbWFyZ2luLWxlZnQ6MCAhaW1wb3J0YW50O1xuICAgIFxuICAgICoge1xuICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XG4gICAgfVxuICAgIFxuICAgIC5zbGljay10cmFjayB7XG4gICAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6Y2VudGVyO1xuICAgIH1cbiAgICBcbiAgICAuc2xpY2stbGlzdCB7XG4gICAgICAgIHBhZGRpbmc6MCAhaW1wb3J0YW50O1xuICAgIH1cbiAgICBcbiAgICBsaSB7XG4gICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICBvdmVyZmxvdzpoaWRkZW47XG4gICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgei1pbmRleDoxMDAwO1xuICAgIH1cbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgLmltZ19nYWxsZXJ5X3NsaWRlciB7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICBtYXJnaW46NDBweCBhdXRvIDA7XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgIFxuICAgIFxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSBhbmQgKG1heC13aWR0aDogI3skYnBfZnVsbH0pIHtcbiAgICBcbiAgICBcbiAgICBcbn0iLCIvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiBGT1JNIFNUWUxFUyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiNjb250ZW50IHtcbiAgICAuZ2Zvcm1fd3JhcHBlciB7XG4gICAgICAgIHBhZGRpbmc6MTZweCAwO1xuICAgIFxuICAgICAgICAqIHtcbiAgICAgICAgICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuZ2Zvcm1fZmllbGRzIHtcbiAgICAgICAgICAgIG1hcmdpbjowICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICBwYWRkaW5nOjAgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGxpc3Qtc3R5bGU6bm9uZSAhaW1wb3J0YW50O1xuICAgICAgICBcbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMS4yNWVtO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjp0b3A7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpsZWZ0O1xuICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGU6bm9uZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIHotaW5kZXg6MTAwO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5tc2cge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOjIwcHg7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBsYWJlbCxcbiAgICAgICAgICAgICAgICAgICAgLmdmaWVsZF9sYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OjIwcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAmLmZsb2F0X2xhYmVsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5nZl9saXN0X2lubGluZSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206MC41ZW07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYucmV2ZWFsZWQge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOjJlbTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5nZmllbGRfaHRtbCB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206MmVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmdmX2xlZnRfdGhpcmQsXG4gICAgICAgICAgICAgICAgJi5nZl9taWRkbGVfdGhpcmQsXG4gICAgICAgICAgICAgICAgJi5nZl9yaWdodF90aGlyZCB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjMzLjQlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmdmX2xlZnRfdGhpcmQsXG4gICAgICAgICAgICAgICAgJi5nZl9taWRkbGVfdGhpcmQge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjE2cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYuZ2ZfcmlnaHRfdGhpcmQge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDozMy4yJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5nZl9sZWZ0X2hhbGYsXG4gICAgICAgICAgICAgICAgJi5nZl9yaWdodF9oYWxmIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6NTAlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmdmX2xlZnRfaGFsZiB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MTZweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5nZl9saXN0XzNjb2wge1xuICAgICAgICAgICAgICAgICAgICB1bC5nZmllbGRfcmFkaW8gbGkge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6MzMuMzMlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLm5vX2Zsb2F0IHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmdmaWVsZF9sYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjpzdGF0aWM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5pbml0X2Zsb2F0X2xhYmVsLFxuICAgICAgICAgICAgICAgICYuaW5pdF9zdGF0aWNfbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmdmaWVsZF9sYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDotMS4yZW07XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6YXV0bztcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MThweDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgICAgICAgICB6LWluZGV4Oi0xO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgLmdmaWVsZF9yZXF1aXJlZCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5pbml0X3N0YXRpY19sYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuZ2ZpZWxkX2xhYmVsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOnN0YXRpYztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmxvbmdfbGFiZWwge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAuZ2ZpZWxkX2xhYmVsLFxuICAgICAgICAgICAgICAgICAgICAuZ2lucHV0X2NvbXBsZXggbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS40ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICYuZmxvYXRfbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE0cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6bm9uZSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYuZ2Zvcm1faGlkZGVuIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYudHdvX2NvbF9hZGRyZXNzIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgLmdpbnB1dF9jb21wbGV4IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC5naW5wdXRfZnVsbC5hZGRyZXNzX2xpbmVfMSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC5naW5wdXRfZnVsbC5hZGRyZXNzX2xpbmVfMiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246dG9wO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOmNhbGMoNTAlIC0gOHB4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDEuMjVlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjA7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDoxMDI7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAuZ2lucHV0X2Z1bGwuYWRkcmVzc19saW5lXzIge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjE2cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuZ2ZpZWxkX2xhYmVsLFxuICAgICAgICAuZ2lucHV0X2NvbXBsZXggbGFiZWwge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgbGVmdDowO1xuICAgICAgICAgICAgdG9wOjA7XG4gICAgICAgICAgICB3aWR0aDoxMDAlO1xuICAgICAgICAgICAgLy9oZWlnaHQ6Mi42ZW07XG4gICAgICAgICAgICBoZWlnaHQ6MTAwJTtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiRzc2FucztcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgICAgICBmb250LXNpemU6MTAwJTtcbiAgICAgICAgICAgIGxldHRlci1zcGFjaW5nOjA7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDpjYWxjKDIuNmVtICsgMnB4KTtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgcGFkZGluZzowIDE2cHg7XG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgdHJhbnNpdGlvbjp0b3AgMC4zcywgcGFkZGluZyAwLjNzLCBmb250LXNpemUgMC4zcywgY29sb3IgMC4zcztcbiAgICAgICAgICAgIHotaW5kZXg6MTA2O1xuICAgICAgICAgICAgdXNlci1zZWxlY3Q6bm9uZTtcbiAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOm5vbmU7XG4gICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgICAgICBcbiAgICAgICAgICAgIC5nZmllbGRfcmVxdWlyZWQge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB0b3A6IC0wLjI1ZW07XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDgwJTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICYuZmxvYXRfbGFiZWwge1xuICAgICAgICAgICAgICAgIHRvcDotMS4zZW07XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE4cHg7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICB6LWluZGV4OjEwNjtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuZ2ZpZWxkX3JlcXVpcmVkIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuZ2ZpZWxkX2xhYmVsX2JlZm9yZV9jb21wbGV4IHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpzdGF0aWM7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjAgMCAxZW07XG4gICAgICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE4cHg7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuZ2ZpZWxkX3JlcXVpcmVkIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgfVxuICAgIFxuICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10sXG4gICAgICAgIGlucHV0W3R5cGU9J251bWJlciddLFxuICAgICAgICBpbnB1dFt0eXBlPSd0ZWwnXSxcbiAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIHBhZGRpbmc6MCAxNnB4O1xuICAgICAgICAgICAgYm9yZGVyOm5vbmU7XG4gICAgICAgICAgICBmb250LXNpemU6IDFlbTtcbiAgICAgICAgICAgIGhlaWdodDoyLjc4ZW07XG4gICAgICAgICAgICBsaW5lLWhlaWdodDoyLjc4ZW07XG4gICAgICAgICAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6MDtcbiAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgJHdoaXRlO1xuICAgICAgICAgICAgLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7XG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOmJvcmRlci1jb2xvciAwLjNzO1xuICAgICAgICBcbiAgICAgICAgICAgICY6Zm9jdXMsXG4gICAgICAgICAgICAmOnZhbGlkIHtcbiAgICAgICAgICAgICAgICBvdXRsaW5lOm5vbmU7XG4gICAgICAgICAgICAgICAgYm9yZGVyOm5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgaW5wdXRbdHlwZT0ndGV4dCddIHtcbiAgICAgICAgXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIGhlaWdodDoxMzBweDtcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuNTZlbTtcbiAgICAgICAgICAgIHBhZGRpbmc6OHB4IDE2cHg7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgaW5wdXRbdHlwZT0naGlkZGVuJ10ge1xuICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5maWVsZF9zdWJsYWJlbF9iZWxvdyB7XG4gICAgICAgIFxuICAgICAgICAgICAgLmdpbnB1dF9jb250YWluZXIgbGFiZWwge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTowLjc4ZW07XG4gICAgICAgICAgICAgICAgZm9udC1zdHlsZTppdGFsaWM7XG4gICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmdpbnB1dF9jb21wbGV4LmdpbnB1dF9jb250YWluZXIgbGFiZWwge1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgICAgICAgICAgZm9udC1zdHlsZTpub3JtYWw7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJi5mbG9hdF9sYWJlbCB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxOHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICAuaW5zdHJ1Y3Rpb24ge1xuICAgICAgICAgICAgcGFkZGluZzowIDE2cHg7XG4gICAgICAgICAgICBmb250LXNpemU6MC43OGVtO1xuICAgICAgICAgICAgZm9udC1zdHlsZTppdGFsaWM7XG4gICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5naW5wdXRfY29udGFpbmVyX3NlbGVjdCxcbiAgICAgICAgLmdpbnB1dF9jb250YWluZXJfdGV4dCxcbiAgICAgICAgLmdpbnB1dF9jb250YWluZXJfZW1haWwsXG4gICAgICAgIC5naW5wdXRfY29udGFpbmVyX3Bob25lLFxuICAgICAgICAuZ2lucHV0X2NvbnRhaW5lcl9kYXRlLFxuICAgICAgICAuZ2lucHV0X2NvbnRhaW5lcl93ZWJzaXRlLFxuICAgICAgICAuZ2lucHV0X2NvbnRhaW5lcl9udW1iZXIge1xuICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5naW5wdXRfY29udGFpbmVyX3RleHRhcmVhIHtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmdpbnB1dF9jb250YWluZXJfc2VsZWN0LFxuICAgICAgICAuZ2lucHV0X2NvbXBsZXggLmFkZHJlc3Nfc3RhdGUsXG4gICAgICAgIC5naW5wdXRfY29tcGxleCAuYWRkcmVzc19jb3VudHJ5IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgY3Vyc29yOnBvaW50ZXI7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgICAgIHotaW5kZXg6MTA1O1xuICAgICAgICBcbiAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgICAgICAgICAgICAgIHJpZ2h0OjE2cHg7XG4gICAgICAgICAgICAgICAgdG9wOjIwcHg7XG4gICAgICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcbiAgICAgICAgICAgICAgICB6LWluZGV4Oi0xO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMnB4OyBcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwcHg7IFxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50IHVybCgnLi4vLi4vaW1hZ2VzL3NlbGVjdC1jYXJldC5zdmcnKSBuby1yZXBlYXQgcmlnaHQgY2VudGVyO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtc2l6ZToxMDAlIGF1dG87XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgc2VsZWN0IHtcbiAgICAgICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgICAgICAgICAgb3V0bGluZTogMDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMTZweDtcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRub3JtYWw7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6Mi43OGVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czowO1xuICAgICAgICAgICAgICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAgICAgLW1vei11c2VyLXNlbGVjdDogLW1vei1ub25lO1xuICAgICAgICAgICAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gICAgICAgICAgICAgICAgLW1vei1hcHBlYXJhbmNlOiByYWRpby1jb250YWluZXI7XG4gICAgICAgICAgICAgICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTpwcmUtd3JhcDtcbiAgICAgICAgICAgICAgICB6LWluZGV4OjExMDtcbiAgICAgICAgICAgICAgICBjdXJzb3I6cG9pbnRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBzZWxlY3Q6Oi1tcy1leHBhbmQge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5naW5wdXRfY29udGFpbmVyX3JhZGlvIHtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmdmaWVsZF9yYWRpbyB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBtYXJnaW46MCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgXG4gICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDphdXRvICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246dG9wO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxMDAlICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxhYmVsIHsgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAvKmRpc3BsYXk6ZmxleDtcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczpjZW50ZXI7XG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OmNlbnRlcjsqL1xuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDVweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAwIDI1cHg7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxZW0gIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6Mi43OGVtO1xuICAgICAgICAgICAgICAgIG1heC13aWR0aDpub25lICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6Mi43OGVtO1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkc3NhbnM7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAgICAgICAgICAgICAgIC1tcy11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrICFpbXBvcnRhbnQ7XG4gICAgICAgIFxuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6M3B4O1xuICAgICAgICAgICAgICAgICAgICB0b3A6MThweDtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTRweDtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OjE0cHg7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6NTAlO1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiBpbnNldCAxNHB4IDE0cHggJGJsdWU7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IDAuMnMgdHJhbnNmb3JtIGVhc2UtaW4tb3V0O1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOjE1cHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjIwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDoyMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOjUwJTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAkYmx1ZTtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDonJztcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDotMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgaW5wdXRbdHlwZT0ncmFkaW8nXSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTowO1xuICAgICAgICAgICAgICAgIGN1cnNvcjpwb2ludGVyO1xuICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmNoZWNrZWQge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIH4gbGFiZWw6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5naW5wdXRfY29udGFpbmVyX2NoZWNrYm94IHtcbiAgICAgICAgICAgIGhlaWdodDoxMzBweDtcbiAgICAgICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgICAgICAgIHBhZGRpbmc6MjZweCAxNnB4IDE2cHg7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiR3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmdmaWVsZF9jaGVja2JveCB7XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICBtYXJnaW46MCAhaW1wb3J0YW50O1xuICAgICAgICAgICAgcGFkZGluZzowO1xuICAgICAgICAgICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgIC1tb3otdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgXG4gICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDMzLjMzMzMlIC0gMTVweCkgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBtYXJnaW46MCAwIDEwcHggMzBweDtcbiAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjp0b3A7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOm50aC1vZi10eXBlKDJuICsgMSkge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDowO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6MCAwIDAgMjRweDtcbiAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDoxNnB4O1xuICAgICAgICAgICAgICAgIGZvbnQtc3R5bGU6bm9ybWFsICFpbXBvcnRhbnQ7XG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAgICAgICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAgICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjAuNzhlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2RhcmsgIWltcG9ydGFudDtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6MDtcbiAgICAgICAgICAgICAgICAgICAgdG9wOjA7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjE2cHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDoxNnB4O1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogRm9udEF3ZXNvbWU7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjE2cHg7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOjJweDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRncmF5X2xpZ2h0O1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OidcXGYwMGMnO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGdyYXlfbGlnaHQ7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICBpbnB1dFt0eXBlPSdjaGVja2JveCddIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICBvcGFjaXR5OjA7XG4gICAgICAgICAgICAgICAgY3Vyc29yOnBvaW50ZXI7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmNoZWNrZWQge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB+IGxhYmVsOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL2JhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi9pbWFnZXMvY2hlY2ttYXJrLW9uLnBuZyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5ub19sYWJlbCB7XG4gICAgICAgICAgICAuZ2ZpZWxkX2xhYmVsIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAuZ2ZpZWxkX2NoZWNrYm94IGxhYmVsIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6MWVtO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOmFmdGVyIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246YWJzb2x1dGU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOjEwcHg7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDoxMHB4O1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAtMC4yNWVtO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDgwJTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICRwdXJwbGVfZGFyaztcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDonKic7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvKiBDT01QTEVYICovXG4gICAgICAgIC5naW5wdXRfY29tcGxleCB7XG4gICAgICAgICAgICB6LWluZGV4OjEwMTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmdpbnB1dF9sZWZ0LFxuICAgICAgICAgICAgLmdpbnB1dF9yaWdodCB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6Y2FsYyg1MCUgLSA4cHgpO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowIDAgMS4yNWVtO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgICAgICB6LWluZGV4OjEwMjtcbiAgICAgICAgICAgICAgICAvL2JvcmRlcjoxcHggc29saWQgJGxpZ2h0Ymx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLmdpbnB1dF9yaWdodCB7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MTZweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLyouYWRkcmVzc19zdGF0ZSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgbGFiZWwge1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4Oi0xO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0qL1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10sXG4gICAgICAgICAgICBpbnB1dFt0eXBlPSdudW1iZXInXSxcbiAgICAgICAgICAgIGlucHV0W3R5cGU9J3RlbCddLFxuICAgICAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmNoYXJsZWZ0LFxuICAgICAgICAuZ2lucHV0X2NvdW50ZXIge1xuICAgICAgICAgICAgZGlzcGxheTpub25lICFpbXBvcnRhbnQ7XG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIC5nZmllbGRfZXJyb3Ige1xuICAgICAgICAgICAgYm9yZGVyOm5vbmU7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlucHV0W3R5cGU9J3RleHQnXSxcbiAgICAgICAgICAgIHNlbGVjdCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgLnZhbGlkYXRpb25fZXJyb3Ige1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6JHNzYW5zO1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAzMHB4O1xuICAgICAgICAgICAgY29sb3I6ICRvcmFuZ2U7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiAkc2VtaWJvbGQ7XG4gICAgICAgICAgICBmb250LXNpemU6MWVtO1xuICAgICAgICAgICAgZm9udC1zdHlsZTppdGFsaWM7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDoxLjRlbTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC52YWxpZGF0aW9uX21lc3NhZ2Uge1xuICAgICAgICAgICAgbWFyZ2luOjAgMCAzMHB4O1xuICAgICAgICAgICAgcGFkZGluZzo1cHggMCAwIDE2cHg7XG4gICAgICAgICAgICBmb250LWZhbWlseTokc3NhbnM7XG4gICAgICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgIGZvbnQtc2l6ZToxNHB4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRub3JtYWw7XG4gICAgICAgICAgICBmb250LXN0eWxlOml0YWxpYztcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuNGVtO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAmLmluc3RydWN0aW9uIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICByaWdodDozMnB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDowO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG4gICAgICAgIC5nZm9ybV9jb25maXJtYXRpb25fd3JhcHBlciB7XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIH1cbiAgICAgICAgLmdmb3JtX2NvbmZpcm1hdGlvbl9tZXNzYWdlIHtcbiAgICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmLmdmb3JtX3ZhbGlkYXRpb25fZXJyb3Ige1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuZ2Zvcm1fYm9keSB1bCBsaS5nZmllbGQuZ2ZpZWxkX2Vycm9yOm5vdCguZ2ZfbGVmdF9oYWxmKTpub3QoLmdmX3JpZ2h0X2hhbGYpIHtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6MTAwJSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAuZ2Zvcm1fZm9vdGVyIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246Y2VudGVyO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAuZ2Zvcm1fYnV0dG9uIHtcbiAgICAgICAgICAgICAgICB3aWR0aDo1MCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLndoaXRlX2Zvcm0ge1xuICAgICAgICBcbiAgICAgICAgLmdmb3JtX3dyYXBwZXIge1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpbnB1dFt0eXBlPSd0ZXh0J10sXG4gICAgICAgICAgICBpbnB1dFt0eXBlPSdudW1iZXInXSxcbiAgICAgICAgICAgIGlucHV0W3R5cGU9J3RlbCddLFxuICAgICAgICAgICAgdGV4dGFyZWEge1xuICAgICAgICAgICAgICAgIGJvcmRlcjoxcHggc29saWQgJGdyYXk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpmb2N1cyxcbiAgICAgICAgICAgICAgICAmOnZhbGlkIHtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOjFweCBzb2xpZCAkZ3JheTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC5naW5wdXRfY29udGFpbmVyX3NlbGVjdCxcbiAgICAgICAgICAgIC5naW5wdXRfY29tcGxleCAuYWRkcmVzc19zdGF0ZSxcbiAgICAgICAgICAgIC5naW5wdXRfY29tcGxleCAuYWRkcmVzc19jb3VudHJ5IHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBzZWxlY3Qge1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6MXB4IHNvbGlkICRncmF5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuI2NvbnRlbnQgLmZvcmNlXzFjb2wge1xuICAgIFxuICAgIC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAmLmdmX2xlZnRfdGhpcmQsXG4gICAgICAgICYuZ2ZfbWlkZGxlX3RoaXJkLFxuICAgICAgICAmLmdmX3JpZ2h0X3RoaXJkLFxuICAgICAgICAmLmdmX2xlZnRfaGFsZixcbiAgICAgICAgJi5nZl9yaWdodF9oYWxmIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MCAhaW1wb3J0YW50O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAmLmdmX2xpc3RfM2NvbCB7XG4gICAgICAgICAgICB1bC5nZmllbGRfcmFkaW8gbGkge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuI2NvbnRlbnQgLmZvcm1fZW1iZWQucHVycGxlLWRhcmsge1xuICAgIFxuICAgIC5nZm9ybV9maWVsZHMge1xuICAgICAgICBcbiAgICAgICAgXG4gICAgICAgIC5nZmllbGRfbGFiZWwsXG4gICAgICAgIC5naW5wdXRfY29tcGxleCBsYWJlbCB7XG4gICAgICAgIFxuICAgICAgICAgICAgJi5mbG9hdF9sYWJlbCB7XG4gICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAuZ2ZpZWxkX3JlcXVpcmVkIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICYuZ2ZpZWxkX2xhYmVsX2JlZm9yZV9jb21wbGV4IHtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC5nZmllbGRfcmVxdWlyZWQge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbiAgICAuZm9ybV9mb290bm90ZSB7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxufVxuXG46Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgeyAvKiBDaHJvbWUvT3BlcmEvU2FmYXJpICovXG4gIGNvbG9yOiAkcHVycGxlX2Rhcms7XG59XG46Oi1tb3otcGxhY2Vob2xkZXIgeyAvKiBGaXJlZm94IDE5KyAqL1xuICBjb2xvcjogJHB1cnBsZV9kYXJrO1xufVxuOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7IC8qIElFIDEwKyAqL1xuICBjb2xvcjogJHB1cnBsZV9kYXJrO1xufVxuOi1tb3otcGxhY2Vob2xkZXIgeyAvKiBGaXJlZm94IDE4LSAqL1xuICBjb2xvcjogJHB1cnBsZV9kYXJrO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcbiAgICBcbiAgICAjY29udGVudCB7XG4gICAgICAgIC5nZm9ybV93cmFwcGVyIC5nZm9ybV9maWVsZHMgbGkge1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgJi5nZl9sZWZ0X3RoaXJkLFxuICAgICAgICAgICAgJi5nZl9taWRkbGVfdGhpcmQsXG4gICAgICAgICAgICAmLmdmX3JpZ2h0X3RoaXJkLFxuICAgICAgICAgICAgJi5nZl9sZWZ0X2hhbGYsXG4gICAgICAgICAgICAmLmdmX3JpZ2h0X2hhbGYge1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCUgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjAgIWltcG9ydGFudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICAmLmdmX2xpc3RfM2NvbCB7XG4gICAgICAgICAgICAgICAgdWwuZ2ZpZWxkX3JhZGlvIGxpIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufSIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIFBSSU1BUlkgTkFWICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNwcmltYXJ5LW5hdmlnYXRpb24ge1xuICAgIGZsb2F0OmxlZnQ7XG4gICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgd2lkdGg6Y2FsYygxMDAlIC0gMjAwcHgpO1xuICAgIG1hcmdpbi1sZWZ0OjI0cHg7XG4gICAgcGFkZGluZzowO1xuICAgIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcbiAgICBcbiAgICAubmF2LW1lbnUge1xuICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIHBhZGRpbmc6MDtcbiAgICAgICAgbGlzdC1zdHlsZTpub25lO1xuICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgIFxuICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uOnJlbGF0aXZlO1xuICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDAgLTRweDtcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UgMHM7XG4gICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjp0b3A7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOmxlZnQ7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgcGFkZGluZzowIDI0cHg7XG4gICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6ODBweDtcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJHNzYW5zO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToxZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOm5vbmU7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjpjZW50ZXI7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zczsgIFxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjpub25lO1xuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLnNjcm9sbGluZyAmIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6aG92ZXIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjokb3JhbmdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpob3ZlciA+IGEsXG4gICAgICAgICAgICAmOmZvY3VzID4gYSxcbiAgICAgICAgICAgICYuY3VycmVudC1tZW51LWl0ZW0gPiBhLFxuICAgICAgICAgICAgJi5jdXJyZW50LW1lbnUtYW5jZXN0b3IgPiBhLFxuICAgICAgICAgICAgJi5jdXJyZW50LXBvc3QtYW5jZXN0b3IgPiBhLFxuICAgICAgICAgICAgJi5jdXJyZW50LXBhZ2UtYW5jZXN0b3IgPiBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjokb3JhbmdlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmhvdmVyIC5zdWItbWVudSxcbiAgICAgICAgICAgICY6Zm9jdXMgLnN1Yi1tZW51IHtcbiAgICAgICAgICAgICAgICBsZWZ0OjA7XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcDowO1xuICAgICAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgICAgICYuZmxpcDpob3ZlciAuc3ViLW1lbnUsXG4gICAgICAgICAgICAmLmZsaXA6Zm9jdXMgLnN1Yi1tZW51IHtcbiAgICAgICAgICAgICAgICBsZWZ0OmF1dG87XG4gICAgICAgICAgICAgICAgcmlnaHQ6MDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdWwge1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOjEwMCU7XG4gICAgICAgICAgICBsZWZ0OiAtOTk5ZW07XG4gICAgICAgICAgICAvL2xlZnQ6MDtcbiAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgICAgICBtaW4td2lkdGg6MTAwJTtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgYmFja2dyb3VuZDokcHVycGxlX2Rhcms7XG4gICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICB6LWluZGV4OjEwMDA7XG4gICAgICAgICAgICBib3gtc2l6aW5nOmJvcmRlci1ib3g7ICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OmJsb2NrO1xuICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6JHB1cnBsZV9kYXJrO1xuICAgICAgICAgICAgICAgIG92ZXJmbG93OmhpZGRlbjtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNpemluZzpib3JkZXItYm94O1xuICAgICAgICAgICAgICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICAgICAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuM2VtO1xuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTokc3NhbnM7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiRub3JtYWw7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDphdXRvO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjE1cHggMjRweDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6JHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOm5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXRvcDoxcHggc29saWQgJHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTpub3dyYXA7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czowO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIC5zY3JvbGxpbmcgJiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlcixcbiAgICAgICAgICAgICAgICAgICAgJi5hY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgIC5uYXYtbWVudSBsaTpob3ZlciAmLFxuICAgICAgICAgICAgICAgICAgICAubmF2LW1lbnUgbGk6Zm9jdXMgJiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjokb3JhbmdlXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICYuY3VycmVudC1tZW51LWl0ZW0gYSxcbiAgICAgICAgICAgICAgICAmLmN1cnJlbnQtbWVudS1hbmNlc3RvciBhLFxuICAgICAgICAgICAgICAgICYuY3VycmVudC1wb3N0LWFuY2VzdG9yIGEsXG4gICAgICAgICAgICAgICAgJi5jdXJyZW50LXBhZ2UtYW5jZXN0b3IgYSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6aG92ZXIsXG4gICAgICAgICAgICAgICAgICAgICYuYWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICAubmF2LW1lbnUgbGk6aG92ZXIgJixcbiAgICAgICAgICAgICAgICAgICAgLm5hdi1tZW51IGxpOmZvY3VzICYge1xuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpmaXJzdC1vZi10eXBlIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9ib3JkZXI6bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyogTU9CSUxFIE5BViAqL1xuI3ByaW1hcnktbmF2aWdhdGlvbi1tb2JpbGUge1xuICAgIHdpZHRoOjEwMCU7XG4gICAgcGFkZGluZzowO1xuICAgIFxuICAgIC5uYXYtbWVudSB7XG4gICAgICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICAgICAgbWFyZ2luOjA7XG4gICAgICAgIHBhZGRpbmc6MzBweCAwO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICA+IC5tZW51LWl0ZW0taGFzLWNoaWxkcmVuIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPiBhIHtcbiAgICAgICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MnB4KTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjA7XG4gICAgICAgICAgICAgICAgLy9ib3JkZXItcmlnaHQ6MXB4IHNvbGlkICR3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgICAgICA+IC50b2dnbGUge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIGJvcmRlcjpub25lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBtYXJnaW46MCAwIDEwcHg7XG4gICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgID4gYSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246cmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246dG9wO1xuICAgICAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgICAgICAgICAgZm9udC1zaXplOjEuNWVtO1xuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAkc3NhbnM7XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6ICRzZW1pYm9sZDtcbiAgICAgICAgICAgICAgICBib3JkZXI6bm9uZTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjdweCA1MHB4IDdweCAwO1xuICAgICAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPiAudG9nZ2xlIHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgICAgICAgICAgICAgd2lkdGg6NDBweDtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOjA7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OjQwcHg7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDpub25lO1xuICAgICAgICAgICAgICAgIHRleHQtaW5kZW50Oi05OTk5cHg7XG4gICAgICAgICAgICAgICAgb3ZlcmZsb3c6aGlkZGVuO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246bGVmdDtcbiAgICAgICAgICAgICAgICBvdXRsaW5lOm5vbmU7XG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjphbGwgMC4zcztcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIHRvcDo1MCU7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwOyBcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAwOyBcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXdpZHRoOiA2cHggMCA2cHggMTBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAkb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OicnO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zaXRpb246YWxsIDAuM3M7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPiBzcGFuIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoxMDBweCAwIDAgMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTpyb3RhdGUoOTBkZWcpO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJjphZnRlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdWwge1xuICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgbGlzdC1zdHlsZTpub25lO1xuICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgcGFkZGluZzo2cHggMTVweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6bm9uZTtcbiAgICAgICAgICAgIGJvcmRlci10b3A6bm9uZTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLyp1bCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MzQlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSovXG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6JG5vcm1hbDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOjEuMjJlbTtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6MS4yZW07XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjowO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjVweCAwO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlIDBzO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJG9yYW5nZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmLmN1cnJlbnQtbWVudS1pdGVtIGEsXG4gICAgICAgICAgICAgICAgJi5jdXJyZW50LW1lbnUtYW5jZXN0b3IgYSxcbiAgICAgICAgICAgICAgICAmLmN1cnJlbnQtcG9zdC1hbmNlc3RvciBhLFxuICAgICAgICAgICAgICAgICYuY3VycmVudF9wYWdlX3BhcmVudCBhLFxuICAgICAgICAgICAgICAgICYuY3VycmVudF9wYWdlX2FuY2VzdG9yIGEsXG4gICAgICAgICAgICAgICAgJi5jdXJyZW50LXBhZ2UtYW5jZXN0b3IgYSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAkb3JhbmdlO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgPiAudG9nZ2xlIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTpub25lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLmN1cnJlbnQtbWVudS1pdGVtIGEsXG4gICAgICAgIC5jdXJyZW50LW1lbnUtYW5jZXN0b3IgYSxcbiAgICAgICAgLmN1cnJlbnQtcG9zdC1hbmNlc3RvciBhLFxuICAgICAgICAuY3VycmVudF9wYWdlX3BhcmVudCBhLFxuICAgICAgICAuY3VycmVudF9wYWdlX2FuY2VzdG9yIGEsXG4gICAgICAgIC5jdXJyZW50LXBhZ2UtYW5jZXN0b3IgYSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICAgICAgd2lkdGg6MTAwJTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5OTBweCkge1xuICAgIFxuICAgICNwcmltYXJ5LW5hdmlnYXRpb24ge1xuICAgICAgICBkaXNwbGF5Om5vbmU7XG4gICAgfVxuICAgICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIHtcbiAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogI3skYnBfc21hbGx9KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiA5OTBweCkge1xuICAgIFxuICAgICNwcmltYXJ5LW5hdmlnYXRpb24tbW9iaWxlIHtcbiAgICAgICAgXG4gICAgICAgIC5uYXYtbWVudSB7XG4gICAgICAgIFxuICAgICAgICAgICAgPiBsaSB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDotODBweDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogOTkxcHgpIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgICBcbiAgICBcbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIHtcbiAgICAgICAgXG4gICAgXG4gICAgICAgIC5uYXYtbWVudSB7XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6MC44M2VtO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMTRweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoxNXB4IDE0cHg7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTAxcHgpIGFuZCAobWF4LXdpZHRoOiAxMjYwcHgpIHtcbiAgICBcbiAgICAjcHJpbWFyeS1uYXZpZ2F0aW9uIHtcbiAgICAgICAgXG4gICAgXG4gICAgICAgIC5uYXYtbWVudSB7XG4gICAgICAgICAgICBcbiAgICAgICAgXG4gICAgICAgICAgICA+IGxpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOjAgMTVweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBsaSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzoxNXB4IDE1cHg7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufSIsIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuLyoqKioqIEdVVEVOQkVSRyBSRVNFVFMgLyBTVEFOREFSRCBOQUtFRCBCTE9DS1MgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiNjb250ZW50IGFydGljbGUge1xuICAgIFxuICAgIFxuICAgID4gaDEsXG4gICAgPiBoMixcbiAgICA+IGgzLFxuICAgID4gaDQsXG4gICAgPiBoNSxcbiAgICA+IGg2LFxuICAgID4gcCxcbiAgICA+IG9sLFxuICAgID4gdWwsXG4gICAgPiBocixcbiAgICA+IHNwYW4sXG4gICAgPiBhIHtcbiAgICAgICAgd2lkdGg6Y2FsYygxMDAlIC0gMTYwcHgpO1xuICAgICAgICBtYXgtd2lkdGg6MTIwMHB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6YXV0bztcbiAgICAgICAgbWFyZ2luLWxlZnQ6YXV0bztcbiAgICAgICAgXG4gICAgICAgIC5zaW5nbGUtcG9zdCAmIHtcbiAgICAgICAgICAgIHdpZHRoOjEwMCU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgdWwsIG9sIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6MjBweDtcbiAgICAgICAgXG4gICAgICAgIC5zaW5nbGUtcG9zdCAmIHtcbiAgICAgICAgICAgIHdpZHRoOmF1dG87XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLndwLWJsb2NrLWNvbHVtbnMge1xuICAgICAgICBkaXNwbGF5OmZsZXg7XG4gICAgICAgIGZsZXgtd3JhcDpub3dyYXA7XG4gICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDE2MHB4KTtcbiAgICAgICAgbWF4LXdpZHRoOjEyMDBweDtcbiAgICAgICAgbWFyZ2luOjAgYXV0bztcbiAgICAgICAgcGFkZGluZzowIDAgODBweCAwO1xuICAgICAgICBcbiAgICAgICAgLndwLWJsb2NrLWNvbHVtbiB7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MTAlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDoyMHB4O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAjeyRicF9zbWFsbH0pIHtcblxuICAgICNjb250ZW50IGFydGljbGUge1xuICAgIFxuICAgIFxuICAgICAgICA+IGgxLFxuICAgICAgICA+IGgyLFxuICAgICAgICA+IGgzLFxuICAgICAgICA+IGg0LFxuICAgICAgICA+IGg1LFxuICAgICAgICA+IGg2LFxuICAgICAgICA+IHAsXG4gICAgICAgID4gb2wsXG4gICAgICAgID4gdWwsXG4gICAgICAgID4gaHIsXG4gICAgICAgID4gc3BhbixcbiAgICAgICAgPiBhIHtcbiAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDQwcHgpO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIC53cC1ibG9jay1jb2x1bW5zIHtcbiAgICAgICAgICAgIGRpc3BsYXk6YmxvY2s7XG4gICAgICAgICAgICB3aWR0aDpjYWxjKDEwMCUgLSA0MHB4KTtcbiAgICAgICAgICAgIHBhZGRpbmc6MCAwIDQwcHggMDtcbiAgICAgICAgXG4gICAgICAgICAgICAud3AtYmxvY2stY29sdW1uIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OjA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIFxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQ4MHB4KSB7XG4gICAgXG4gICAgXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgIFxuICAgICNjb250ZW50IGFydGljbGUge1xuICAgICAgICBcbiAgICAgICAgLndwLWJsb2NrLWNvbHVtbnMge1xuICAgICAgICAgICAgZGlzcGxheTpibG9jaztcbiAgICAgICAgICAgIHdpZHRoOmNhbGMoMTAwJSAtIDE2MHB4KTtcbiAgICAgICAgICAgIHBhZGRpbmc6MCAwIDQwcHggMDtcbiAgICAgICAgXG4gICAgICAgICAgICAud3AtYmxvY2stY29sdW1uIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOjQwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6MDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBcbiAgICBcbiAgICBcbn1cblxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMDI1cHgpIGFuZCAobWF4LXdpZHRoOiAjeyRicF9mdWxsfSkge1xuICAgIFxuICAgIFxuICAgIFxufSJdfQ== */
