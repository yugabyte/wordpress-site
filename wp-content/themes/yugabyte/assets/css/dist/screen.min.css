@charset "UTF-8";.grid,.grid.extra_wide{max-width:1360px}.clearfix:after,.slick-track:after{clear:both}#main,#page,.col-1-1,.grid{width:100%}#page,html{height:100%}#content,#page,.content_section{position:relative}#content,.content_section.content_wrapper{z-index:10}.content_section.grad-dkpurple-blue,.content_section.grad-dkpurple-blue-flat{filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#000041', endColorstr='#2b59c3', GradientType=1 )}.wysiwyg .special_ol>li:first-child,ol>li:first-child{counter-reset:item}.ss_biz_tech_results .results.split>li,.to_cols_3>li{break-inside:avoid}#iubenda-cs-banner *,body{-webkit-text-size-adjust:100%}.has-white-color{color:#fff}.has-white-background-color{background-color:#fff}.has-offwhite-color{color:#eef1fa}.has-offwhite-background-color{background-color:#eef1fa}.has-gray_lightest-color{color:#f2f3f8}.has-gray_lightest-background-color{background-color:#f2f3f8}.has-gray_light-color{color:#e8e9f3}.has-gray_light-background-color{background-color:#e8e9f3}.has-gray-color{color:#707070}.has-gray-background-color{background-color:#707070}.has-gray_dark-color{color:#4d4647}.has-gray_dark-background-color{background-color:#4d4647}.has-nearlyblack-color{color:#141920}.has-black-color,body{color:#000}.has-nearlyblack-background-color{background-color:#141920}.has-black-background-color{background-color:#000}.has-purple-color{color:#332a66}.has-purple-background-color{background-color:#332a66}.has-purple_dark-color{color:#000041}.has-purple_dark-background-color{background-color:#000041}.has-orange-color{color:#ff6e42}.has-orange-background-color{background-color:#ff6e42}.has-green-color{color:#4ecd5f}.has-green-background-color{background-color:#4ecd5f}.has-blue-color{color:#2b59c3}.has-blue-background-color{background-color:#2b59c3}@font-face{font-family:"Hurme Geometric Sans_1 W01 Lt";src:url(../../fonts/5512873/3d08d9b7-c232-48fe-a7d6-2e237c86004a.woff2) format("woff2"),url(../../fonts/5512873/87da7095-d100-402f-ae33-579646446093.woff) format("woff")}.grid:after,[class*=grid],[class*=col-],[class*=mobile-]{box-sizing:border-box}[class*=col-]{float:left;min-height:1px;padding-right:20px}.grid-pad,[class*=col-] [class*=col-]:last-child{padding-right:0}.grid{min-width:708px;margin:0 auto}.grid.full{max-width:none}.grid:after{content:"";display:table;clear:both}.grid-pad{padding-top:0;padding-left:20px}.push-right{float:right!important}.col-2-3,.col-8-12{width:66.66%}.col-1-2,.col-6-12{width:50%}.col-1-3,.col-4-12{width:33.33%}.col-1-4,.col-3-12{width:25%}.col-1-5{width:20%}.col-1-6,.col-2-12{width:16.667%}.col-1-7{width:14.28%}.col-1-8{width:12.5%}.col-1-9{width:11.1%}.col-1-10{width:10%}.col-1-11{width:9.09%}.col-1-12{width:8.33%}.col-11-12{width:91.66%}.col-10-12{width:83.333%}.col-9-12{width:75%}.col-5-12{width:41.66%}.col-7-12{width:58.33%}.push-2-3,.push-8-12{margin-left:66.66%}.push-1-2,.push-6-12{margin-left:50%}.push-5-12{margin-left:41.66%}.push-1-3,.push-4-12{margin-left:33.33%}.push-1-4,.push-3-12{margin-left:25%}.push-1-5{margin-left:20%}.push-1-6,.push-2-12{margin-left:16.667%}.push-1-7{margin-left:14.28%}.push-1-8{margin-left:12.5%}.push-1-9{margin-left:11.1%}.push-1-10{margin-left:10%}.push-1-11{margin-left:9.09%}.push-1-12{margin-left:8.33%}.pull-2-3,.pull-8-12{margin-left:-66.66%}.pull-1-2,.pull-6-12{margin-left:-50%}.pull-5-12{margin-left:-41.66%}.pull-1-3,.pull-4-12{margin-left:-33.33%}.pull-1-4,.pull-3-12{margin-left:-25%}.pull-1-5{margin-left:-20%}.pull-1-6,.pull-2-12{margin-left:-16.667%}.pull-1-7{margin-left:-14.28%}.pull-1-8{margin-left:-12.5%}.pull-1-9{margin-left:-11.1%}.pull-1-10{margin-left:-10%}.pull-1-11{margin-left:-9.09%}.pull-1-12{margin-left:-8.33%}@media handheld,only screen and (max-width:767px){.grid{width:100%;min-width:0;margin-left:0;margin-right:0;padding-left:0;padding-right:0}.site-footer .grid{padding-left:10px;padding-right:10px}.site-footer .grid .grid{padding:0 20px}.grid.extra_wide{max-width:none;padding:0 40px}.site-header .grid.extra_wide{padding:0 10px}.site-footer .grid.extra_wide{padding:0}.grid.full{max-width:none;padding:0}[class*=col-]{width:auto;float:none;margin:0;padding-left:0;padding-right:0}[class*=col-] [class*=col-]{padding-right:0}[class*=mobile-col-]{float:left;margin:0;padding-left:0;padding-right:10px;padding-bottom:0}.mobile-col-1-1{width:100%}.mobile-col-2-3,.mobile-col-8-12{width:66.66%}.mobile-col-1-2,.mobile-col-6-12{width:50%}.mobile-col-1-3,.mobile-col-4-12{width:33.33%}.mobile-col-1-4,.mobile-col-3-12{width:25%}.mobile-col-1-5{width:20%}.mobile-col-1-6,.mobile-col-2-12{width:16.667%}.mobile-col-1-7{width:14.28%}.mobile-col-1-8{width:12.5%}.mobile-col-1-9{width:11.1%}.mobile-col-1-10{width:10%}.mobile-col-1-11{width:9.09%}.mobile-col-1-12{width:8.33%}.mobile-col-11-12{width:91.66%}.mobile-col-10-12{width:83.333%}.mobile-col-9-12{width:75%}.mobile-col-5-12{width:41.66%}.mobile-col-7-12{width:58.33%}}@media only screen and (min-width:768px) and (max-width:1024px){.grid,.tablet-col-1-1{width:100%}.grid{min-width:0;margin-left:0;margin-right:0;padding-left:20px;padding-right:10px}.grid.even_pad{padding-right:20px}.grid.full{max-width:none;padding:0}.site-footer .grid,.site-header .grid{padding:0}.tablet-push-left{float:left!important}[class*=tablet-col-]{float:left;margin:0;padding-left:0;padding-right:10px;padding-bottom:0}.even_pad [class*=tablet-col-]{padding-right:0}#footer_cta [class*=tablet-col-],.hero [class*=tablet-col-]{float:none;margin:0 auto}.tablet-col-2-3,.tablet-col-8-12{width:66.66%}.tablet-col-1-2,.tablet-col-6-12{width:50%}.tablet-col-1-3,.tablet-col-4-12{width:33.33%}.tablet-col-1-4,.tablet-col-3-12{width:25%}.tablet-col-1-5{width:20%}.tablet-col-1-6,.tablet-col-2-12{width:16.667%}.tablet-col-1-7{width:14.28%}.tablet-col-1-8{width:12.5%}.tablet-col-1-9{width:11.1%}.tablet-col-1-10{width:10%}.tablet-col-1-11{width:9.09%}.tablet-col-1-12{width:8.33%}.tablet-col-11-12{width:91.66%}.tablet-col-10-12{width:83.333%}.tablet-col-9-12{width:75%}.tablet-col-5-12{width:41.66%}.tablet-col-7-12{width:58.33%}.tablet-push-2-3,.tablet-push-8-12{margin-left:66.66%}.tablet-push-1-2,.tablet-push-6-12{margin-left:50%}.tablet-push-5-12{margin-left:41.66%}.tablet-push-1-3,.tablet-push-4-12{margin-left:33.33%}.tablet-push-1-4,.tablet-push-3-12{margin-left:25%}.tablet-push-1-5{margin-left:20%}.tablet-push-1-6,.tablet-push-2-12{margin-left:16.667%}.tablet-push-1-7{margin-left:14.28%}.tablet-push-1-8{margin-left:12.5%}.tablet-push-1-9{margin-left:11.1%}.tablet-push-1-10{margin-left:10%}.tablet-push-1-11{margin-left:9.09%}.tablet-push-1-12{margin-left:8.33%}}@media only screen and (min-width:1025px) and (max-width:1360px){.grid{width:100%;min-width:0;margin-left:0;margin-right:0;padding-left:20px;padding-right:10px}.grid.full{max-width:none;padding:0}.grid.even_pad{padding-right:20px}.site-header .grid{padding-left:0;padding-right:0;margin:0 auto}.site-footer .grid{padding-left:20px;padding-right:20px}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,p.cite,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}#alm-filters-resourcessearchfilter .alm-filter--textfield,.lever_jobs #lever-jobs-filter .jobs_filter_wrap select,body{font-family:"Source Sans Pro",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}body{height:auto!important;min-height:100%;font-weight:400;font-size:18px;line-height:1.45em;background:#fff}#page{margin:0 auto}#main{margin-top:81px;background:#fff;transition:margin .3s}.gated_landing #main{margin:0!important}#primary{float:left;width:50%;box-sizing:border-box;padding:0 30px 0 0}#primary.full{float:none;width:100%;border:none;padding:0}.archive #primary,.search #primary,.single-post #primary{width:72%;padding:0}#secondary{float:right;width:50%;padding:0 70px;box-sizing:border-box}.archive #secondary,.search #secondary,.single-post #secondary{width:28%;padding:0 50px}#content{width:100%;margin:0 auto;background:0 0;box-sizing:border-box;overflow:hidden}#content>article>.gform_wrapper{padding-top:0;width:calc(100% - 160px);max-width:1200px;margin:0 auto 80px}.single-post #content>article{padding-left:60px}.content_section{width:100%;text-align:left}.content_section.light-blue{background-color:#eef1fa}.content_section.gray_light{background-color:#e8e9f3}.content_section.light-gray{background-color:#f2f3f8}.content_section.blue{background-color:#2b59c3}.content_section.orange{background-color:#ff6e42}.content_section.purple{background-color:#332a66}.content_section.gray-light{background-color:#e8e9f3}.content_section.purple-dark{background-color:#000041}.content_section.white{background-color:#fff}.content_section.grad-dkpurple-blue{background:#000041;background:linear-gradient(45deg,#000041 0,#2b59c3 100%)}.content_section.grad-dkpurple-blue-flat{background:#000041;background:linear-gradient(90deg,#000041 0,#2b59c3 100%)}.content_section.invert>*{color:#fff}.content_section_inner{width:calc(100% - 80px);max-width:1360px;margin:0 auto;padding:60px 0;text-align:left;box-sizing:border-box;background-color:transparent}.content_section_inner.full{width:100%;max-width:none}.content_section_inner.narrow{width:75%;max-width:calc(1360px * .75)}.content_section_inner.narrower{width:65%;max-width:calc(1360px * .65)}.wysiwyg{text-align:left}.wysiwyg.narrow{width:80%;margin:0 auto}.wysiwyg.narrower{width:65%;margin:0 auto}@media screen and (max-width:767px){#content>article>.gform_wrapper{width:calc(100% - 40px);margin:0 auto 40px}#main,#primary{margin:0}.single-post #content>article{padding-left:0}#primary{float:none;width:100%;padding:40px 0}#secondary,.archive #primary,.archive #secondary,.search #primary,.search #secondary,.single-post #primary,.single-post #secondary{padding:0;width:100%}#secondary{float:none;margin-top:0}.content_section_inner{padding-top:60px;padding-bottom:30px}.content_section_inner,.content_section_inner.narrow,.content_section_inner.narrower{width:100%;padding-left:20px;padding-right:20px}}@media screen and (max-width:480px){.content_section_inner,.content_section_inner.narrow,.content_section_inner.narrower{width:100%;padding-left:20px;padding-right:20px}}@media screen and (min-width:768px) and (max-width:1024px){.single-post #content>article{padding-left:0}#secondary{width:50%;padding:0 40px}.archive #secondary,.search #secondary,.single-post #secondary{width:28%;padding:0 0 0 30px}}@media screen and (min-width:768px) and (max-width:1360px){.content_section_inner.narrow,.content_section_inner.narrower,.wysiwyg.narrow,.wysiwyg.narrower{width:85%}}@media screen and (max-width:1024px){body.mobile_nav_open{overflow:hidden}#site-inner{position:relative}}#mobile_nav_toggle{display:none;position:absolute;right:0;top:5px;width:70px;height:50px;margin:0 auto;cursor:pointer;outline:0;background:0 0;z-index:10010;transition:all .3s}#mobile_nav_toggle.open{top:5px}#mobile_nav_toggle .inner{position:absolute;right:0;top:16px;width:24px;height:21px;transform:rotate(0);transition:.5s ease-in-out}#mobile_nav_toggle span{display:block;position:absolute;height:2px;width:100%;background:#fff;opacity:1;left:0;transform:rotate(0);transition:.25s ease-in-out}.header_right,.site-header,.site-title{transition:all .3s linear}#mobile_nav_toggle.open span{background:#fff}#mobile_nav_toggle span:nth-child(1){top:0}#mobile_nav_toggle span:nth-child(2),#mobile_nav_toggle span:nth-child(3){top:9px}#mobile_nav_toggle span:nth-child(4){top:18px}#mobile_nav_toggle.open span:nth-child(1),#mobile_nav_toggle.open span:nth-child(4){top:9px;width:0%;left:50%}#mobile_nav_toggle.open span:nth-child(2){transform:rotate(45deg)}#mobile_nav_toggle.open span:nth-child(3){transform:rotate(-45deg)}#mobile_nav_tray,.site-header{position:fixed;width:100%;background:#000041}#mobile_nav_tray{display:none;top:60px;bottom:0;height:calc(100vh - 60px);padding:20px 20px 140px;box-sizing:border-box;overflow:scroll;z-index:10000}.site-header{left:0;top:0;border-bottom:1px solid #fff;height:80px;z-index:1000}.site-header .grid-pad{padding-top:0}.site-header.scrolling{height:80px}.gated_landing .site-header{display:none}.header_inner{position:relative;width:calc(100% - 80px);height:100%;margin:0 auto;box-sizing:border-box}.scrolling .site-title,.site-title{margin:26px 0 0}.site-title{float:left;display:block;width:160px;max-width:100%;height:auto;z-index:1000;box-sizing:border-box;vertical-align:top}.site-title>a,.site-title>a img{display:block;width:100%}.site-title>a:hover{text-decoration:none}.header_right{margin:0;z-index:1000}.home .scrolling .header_right,.scrolling .header_right{margin-top:0}@media only screen and (max-width:990px){#mobile_nav_toggle{display:block}}@media only screen and (min-width:768px) and (max-width:990px){#mobile_nav_toggle{top:15px}#mobile_nav_tray{top:80px;height:calc(100vh - 80px);padding:20px 40px 140px}}@media only screen and (max-width:767px){.site-header{position:relative;height:60px}.header_inner{width:calc(100% - 40px)}.scrolling .site-title,.site-title{margin-top:17px}}.site-footer{position:relative;background:#fff}.site-footer #gated_landing_footer.footer_inner{display:none}.site-footer .logo{display:block;width:calc(100% - 60px);max-width:200px;height:auto;margin:0 0 40px;z-index:1000;box-sizing:border-box;vertical-align:middle}.site-footer .logo img{display:block;width:100%}.site-footer .footer_inner{position:relative;width:calc(100% - 80px);height:100%;margin:0 auto;padding:60px 0;box-sizing:border-box}.site-footer .footer_inner .grid{min-width:0}.site-footer #menu-footer-nav{display:-ms-flexbox;display:flex;-ms-flex-flow:row;flex-flow:row}.site-footer #menu-footer-nav>li{display:inline-block;width:100%;box-sizing:border-box;padding-right:30px}.site-footer #menu-footer-nav>li a{display:block;padding:10px 0;color:#000;font-size:1em;font-weight:400;line-height:1.45em;text-decoration:none;transition:all .3s}.site-footer #menu-footer-nav>li a:hover{color:#ff6e42}.site-footer #menu-footer-nav>li>a{padding:0 0 30px;line-height:1.1em;font-size:1.22em;font-weight:600;text-transform:uppercase;letter-spacing:2px}.site-footer #menu-footer-nav>li.nolink>a,.site-footer #menu-footer-nav>li.nolink>a:hover{color:#000;cursor:default}.site-footer #menu-footer-nav li li.current-menu-ancestor>a,.site-footer #menu-footer-nav li li.current-menu-item>a,.site-footer #menu-footer-nav li li.current-page-ancestor>a,.site-footer #menu-footer-nav li li.current-post-ancestor>a,.site-footer #menu-footer-nav li li:focus>a,.site-footer #menu-footer-nav li li:hover>a{color:#ff6e42}.site-footer blockquote,.site-footer cite,.site-footer p{color:#000}.site-footer blockquote.copyright,.site-footer cite.copyright,.site-footer p.copyright{display:inline-block;margin:0;font-size:.9em;vertical-align:middle;line-height:1.45em;color:#332a66}.site-footer blockquote.copyright a,.site-footer cite.copyright a,.site-footer p.copyright a{color:#332a66}.site-footer blockquote.copyright a:hover,.site-footer cite.copyright a:hover,.site-footer p.copyright a:hover{color:#ff6e42}.site-footer blockquote a,.site-footer cite a,.site-footer p a{color:#000}.site-footer blockquote a:hover,.site-footer cite a:hover,.site-footer p a:hover{color:#ff6e42}.site-footer .social_cont{margin:0 0 40px}.site-footer .social{display:inline-block;position:relative;width:38px;height:38px;margin:0 0 0 10px;border:2px solid #000041;border-radius:50px;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#000}.site-footer .social.first{margin-left:0}.site-footer .social.gh{background:#fff}.site-footer .social.gh svg{top:17px}.site-footer .social.gh svg .icon,.site-footer .social.gh:hover svg .icon{fill:#fff}.site-footer .social.gh:hover svg .bg{fill:#ff6e42}.site-footer .social svg{display:block;position:absolute;left:50%;top:50%;margin:-20px 0 0;height:40px;transition:all .2s;transform:translateX(-50%)}.site-footer .social svg .icon{transition:all .3s;fill:#000041}.site-footer .social svg .bg{transition:all .3s}.site-footer .social:hover{border-color:#ff6e42}.site-footer .social:hover svg .icon{fill:#ff6e42}.gated_landing .site-footer #gated_landing_footer.footer_inner{display:block;background:#f2f3f8;width:100%}.gated_landing .site-footer #gated_landing_footer.footer_inner blockquote,.gated_landing .site-footer #gated_landing_footer.footer_inner cite,.gated_landing .site-footer #gated_landing_footer.footer_inner p{display:inline-block;margin:0 20px;font-size:.9em;vertical-align:middle;line-height:1.45em;color:#332a66}.gated_landing .site-footer #gated_landing_footer.footer_inner blockquote a,.gated_landing .site-footer #gated_landing_footer.footer_inner cite a,.gated_landing .site-footer #gated_landing_footer.footer_inner p a{color:#332a66}.gated_landing .site-footer #gated_landing_footer.footer_inner blockquote a:hover,.gated_landing .site-footer #gated_landing_footer.footer_inner cite a:hover,.gated_landing .site-footer #gated_landing_footer.footer_inner p a:hover{color:#ff6e42}.gated_landing .site-footer #default_footer.footer_inner{display:none}@media only screen and (max-width:767px){.site-footer .logo{margin:0 auto 40px}.site-footer .footer_inner{width:calc(100% - 40px)}.site-footer #menu-footer-nav{display:block}.site-footer #menu-footer-nav>li{display:block;padding:0;text-align:center}.site-footer #menu-footer-nav .sub-menu{margin:0 0 40px}.site-footer #menu-footer-nav li li a{padding:3px 0}.site-footer blockquote.copyright,.site-footer cite.copyright,.site-footer p.copyright{display:block;text-align:center}.site-footer .social_cont{margin:0 auto 40px;text-align:center}}@media screen and (max-width:480px){.gated_landing .site-footer #gated_landing_footer.footer_inner blockquote,.gated_landing .site-footer #gated_landing_footer.footer_inner cite,.gated_landing .site-footer #gated_landing_footer.footer_inner p{display:block;margin:0 0 20px}.gated_landing .site-footer #gated_landing_footer.footer_inner blockquote:last-of-type,.gated_landing .site-footer #gated_landing_footer.footer_inner cite:last-of-type,.gated_landing .site-footer #gated_landing_footer.footer_inner p:last-of-type{margin:0}.gated_landing .site-footer #default_footer.footer_inner{display:none}}@media screen and (min-width:768px) and (max-width:1024px){.site-footer .social_cont{margin:0 20px 40px 0}.site-footer .social{width:28px;height:28px;margin:0 0 10px 10px}.site-footer .social.gh svg{top:13px}.site-footer .social svg{margin:-12px 0 0;height:24px}}.grid>div.flush_right>.cont{width:calc(100% + 20px);margin-right:-20px}.grid>div.flush_left>.cont{width:calc(100% + 20px);margin-left:-20px}.grid>div.flush_left_right{padding-right:0}.grid>div.flush_left_right>.cont{width:calc(100% + 20px + 20px);margin-left:-20px;margin-right:-20px}.img_cont.wide_content .cont .inner_content{padding:0}.img_cont.wide_content .cont h2{padding-right:60px}.img_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.img_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.img_cont .cont{-ms-flex-order:-1;order:-1}.img_cont .cont .inner_content{padding:0 60px}.img_cont .img{position:relative}.img_cont .img .inner_content{float:right;position:relative;margin:0 auto;width:100%;overflow:hidden;padding:0 60px;box-sizing:border-box;z-index:15}.img_cont .img img{display:block;width:100%}.img_cont .img .zoom_cont{position:relative;width:100%;height:100%;overflow:hidden}.img_cont .img .zoom_cont .hover_prompt{position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,65,.6);background-image:url(../../images/mag-glass-fat-white.svg);background-repeat:no-repeat;background-position:center center;background-size:120px auto;transition:opacity .3s;opacity:0}.img_cont .img .zoom_cont .hover_prompt.kill{display:none}.img_cont .img .zoom_cont img{display:block;width:100%;height:auto}.img_cont .img .zoom_cont.zoomable:hover .hover_prompt{opacity:1}.img_cont.flip .cont{-ms-flex-order:1;order:1}@media screen and (max-width:767px){.img_cont .cont .inner_content,.img_cont .img .inner_content{padding:0}.img_cont .vert_align .grid{display:block}.img_cont.wide_content .cont h2{padding-right:0}.img_cont .img{margin:0 0 40px}.img_cont .img img{width:auto;max-width:100%}}@media only screen and (min-width:768px) and (max-width:1024px){.img_cont.wide_content .cont .inner_content{padding:0}.img_cont.wide_content .cont h2{padding-right:60px}.img_cont .cont .inner_content{padding:0 30px 0 0}.img_cont .img .inner_content{padding:0}.img_cont .img .zoom_cont{position:relative;width:100%;height:100%;overflow:hidden}.img_cont .img .zoom_cont .hover_prompt{position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,65,.6);background-image:url(../../images/mag-glass-fat-white.svg);background-repeat:no-repeat;background-position:center center;background-size:120px auto;transition:opacity .3s;opacity:0}.img_cont .img .zoom_cont .hover_prompt.kill{display:none}.img_cont .img .zoom_cont img{display:block;width:100%;height:auto}.img_cont .img .zoom_cont.zoomable:hover .hover_prompt{opacity:1}.img_cont.flip .cont .inner_content{padding:0 0 0 30px}}.fw_cta .social_wrap a svg .bg,.team_grid .team .social a svg .bg{opacity:0}.cta_buckets .cta{padding:0 40px}.cta_buckets .btn{margin-bottom:0}@media screen and (max-width:767px){.cta_buckets .cta{margin:0 0 60px;padding:0}}@media only screen and (min-width:768px) and (max-width:1024px){.cta_buckets .cta{margin-bottom:60px}}.team_grid .team{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;list-style:none;margin:80px 0 0;margin-left:0!important;padding:0}.team_grid .team .gridblock{width:calc(33.33% - 14px);margin:0 0 60px 20px}.team_grid .team .gridblock:first-of-type{margin-left:0!important}.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:0}.team_grid .team .inner{margin:0;padding:0 10%;text-align:center}.team_grid .team .inner .headshot{display:inline-block;position:relative;height:180px;width:180px;border-radius:100px;overflow:hidden;border:3px solid #ff6e42;margin:0 auto 40px}.team_grid .team .inner .headshot img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.team_grid .team .inner blockquote,.team_grid .team .inner cite,.team_grid .team .inner p{margin:0 0 .75em;color:#141920;font-family:"Source Sans Pro",sans-serif}.team_grid .team .social a{display:inline-block;position:relative;width:32px;height:33px;margin:0 0 0 10px;border:none;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#000}.team_grid .team .social a.first,.team_grid .team .social a:only-of-type{margin-left:0}.team_grid .team .social a svg{display:block;position:absolute;left:50%;top:50%;margin:0;width:32px;height:33px;transition:all .2s;transform:translate(-50%,-50%)}.team_grid .team .social a svg .icon{transition:all .3s;fill:#000041}.team_grid .team .social a:hover svg .icon{fill:#ff6e42}@media screen and (max-width:767px){.team_grid .team .gridblock{width:90%;max-width:480px;margin:0 auto 60px}.team_grid .team .gridblock:first-of-type,.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:auto!important}.team_grid .team .inner .headshot{margin:0 auto 30px}}@media only screen and (min-width:768px) and (max-width:1024px){.team_grid .team .gridblock{width:calc(50% - 20px)}.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:20px}.team_grid .team .gridblock:nth-of-type(2n+1){margin-left:0}}.logo_grid .logos{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;list-style:none;margin:80px 0 60px;margin-left:0!important;padding:0}.logo_grid .logos .gridblock{width:calc(25% - 20px);height:96px;margin:0 0 0 20px}.logo_grid .logos .gridblock:first-of-type{margin-left:0!important}.logo_grid .logos .gridblock:nth-of-type(4n+1){margin-left:0}.logo_grid .logos .inner{display:table;margin:0;width:100%;height:100%;text-align:center}.logo_grid .logos .inner .logo{display:table-cell;position:relative;vertical-align:middle;height:100%;width:90%;margin:0 auto}.logo_grid .logos .inner .logo img{display:inline-block;width:auto;max-height:96px;max-width:100%;margin:0 auto;vertical-align:middle}.logo_grid .logos.three .gridblock{width:calc(25% - 60px);margin:0 0 0 80px}.logo_grid .logos.three .gridblock:nth-of-type(4n+1){margin-left:60px}@media screen and (max-width:767px){.logo_grid .logos{margin:60px 0 30px}.logo_grid .logos .gridblock{width:calc(50% - 40px);margin:20px 0 20px 40px}.logo_grid .logos .gridblock:nth-of-type(2n+1),.logo_grid .logos .gridblock:nth-of-type(4n+1){margin-left:0}.logo_grid .logos.three .gridblock{width:100%;max-width:300px;margin:0 auto 20px}.logo_grid .logos.three .gridblock:first-of-type{margin-left:auto!important}.logo_grid .logos.three .gridblock:nth-of-type(4n+1){margin-left:auto}}@media only screen and (min-width:768px) and (max-width:1024px){.logo_grid .logos.three .gridblock{width:calc(33.3333% - 60px)}}.fw_cta .head_wrap{width:70%;margin:0 auto 60px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.fw_cta .head_wrap h2{-ms-flex:0 0 calc(100% - 400px);flex:0 0 calc(100% - 400px);margin:0 0 40px;padding-left:40px;border-left:2px solid #fff;box-sizing:border-box;text-align:left}.fw_cta .head_wrap .logos_group{-ms-flex:0 0 400px;flex:0 0 400px;text-align:center}.fw_cta .head_wrap .logos_group .logo{display:inline-block;margin:0 70px 40px 0}.fw_cta .head_wrap .logos_group .logo img{display:block;height:auto;max-height:50px}.fw_cta h2{margin:0 0 .75em;text-transform:none;letter-spacing:0;font-weight:600;color:#fff}.fw_cta h2.standard{font-weight:400;color:#ff6e42;text-transform:uppercase;letter-spacing:4px}.fw_cta h2.lined{margin:0 0 1.5em;text-transform:uppercase}.fw_cta h2.lined:after{background:#fff}.fw_cta blockquote,.fw_cta cite,.fw_cta p{margin:0 0 2.25em;color:#fff}.fw_cta blockquote span,.fw_cta cite span,.fw_cta p span{color:#ff6e42}.testimonial *,.testimonial blockquote,.testimonial cite{color:#fff}.fw_cta .social_wrap{margin-bottom:40px}.fw_cta .social_wrap a{display:inline-block;position:relative;width:44px;height:45px;margin:0 0 0 20px;border:none;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#fff}.fw_cta .social_wrap a.first{margin-left:0}.fw_cta .social_wrap a svg{display:block;position:absolute;left:50%;top:50%;margin:0;width:44px;height:45px;transition:all .2s;transform:translate(-50%,-50%)}.fw_cta .social_wrap a svg .icon{transition:all .3s;fill:#fff}.fw_cta .social_wrap a:hover svg .icon{fill:#ff6e42}.fw_cta .ctas_wrap .btn{margin:0 0 10px 40px}.fw_cta .ctas_wrap .btn:first-of-type{margin-left:0}@media screen and (max-width:767px){.fw_cta .head_wrap{width:100%}.fw_cta .head_wrap h2{-ms-flex:1 0 60%;flex:1 0 60%;padding-left:20px;border-left:1px solid #fff}.fw_cta .head_wrap .logos_group{-ms-flex:0 0 40%;flex:0 0 40%}.fw_cta .head_wrap .logos_group .logo{margin:0 30px 30px 0}.fw_cta .head_wrap .logos_group .logo img{max-height:30px}.fw_cta blockquote br,.fw_cta cite br,.fw_cta p br{display:none}.fw_cta .ctas_wrap .btn{margin:0 10px 20px}.fw_cta .ctas_wrap .btn:first-of-type{margin-left:10px}}.logos_cont .cont .inner,.logos_cont .logos .inner_content{padding:0 60px}@media only screen and (min-width:768px) and (max-width:1024px){.fw_cta .head_wrap{width:100%}}.logos_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.logos_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.logos_cont .cont{-ms-flex-order:-1;order:-1}.logos_cont .cont .inner_content{position:relative;padding:60px;background:#eef1fa}.logos_cont .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #eef1fa;content:''}.logos_cont .cont.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #eef1fa transparent transparent}.logos_cont .logos_stagger li .logo{float:left;display:inline-block;width:auto;max-width:40%;margin-bottom:20px}.logos_cont .logos_stagger li .logo img{display:block;width:100%}.logos_cont .logos_stagger li:nth-child(even) .logo{float:right}.logos_cont .logos_stagger li:last-of-type .logo{margin-bottom:0}@media screen and (max-width:767px){.logos_cont .vert_align .grid{display:block;-ms-flex-align:center;align-items:center}.logos_cont .logos{margin:0 0 80px}.logos_cont .cont .inner,.logos_cont .logos .inner_content{padding:0}.logos_cont .cont .inner_content{padding:30px}.logos_cont .cont .inner_content:after,.logos_cont .cont.flip .inner_content:after{right:auto;left:100px;top:-40px;border-width:0 24px 40px;border-color:transparent transparent #eef1fa}}@media only screen and (min-width:768px) and (max-width:1024px){.logos_cont .logos .inner_content{padding:0;width:100%}.logos_cont .cont .inner{padding:0 60px 0 0}.logos_cont .cont .inner_content{padding:40px}.logos_cont .cont.flip .inner{padding:0 0 0 60px}.logos_cont .logos_stagger{margin-left:0!important}.logos_cont .logos_stagger li .logo{float:none;display:block;width:100%;max-width:200px;margin:0 auto 30px}.logos_cont .logos_stagger li:nth-child(even) .logo{float:none}}@media only screen and (min-width:1025px) and (max-width:1360px){.logos_cont .cont .inner{padding:0 60px 0 0}.logos_cont .cont.flip .inner{padding:0 0 0 60px}}.test_cont .cont .inner_content,.test_cont .test .inner{padding:0 60px}.test_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.test_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.test_cont .test{-ms-flex-order:-1;order:-1}.test_cont .test .inner_content{position:relative;padding:60px;background:#fff}.test_cont .test .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff;content:''}.test_cont .test.flip{-ms-flex-order:1;order:1}.test_cont .test.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}@media screen and (max-width:767px){.test_cont .cont .inner_content,.test_cont .test .inner{padding:0}.test_cont .vert_align .grid{display:block}.test_cont .test{margin:0 0 80px}.test_cont .test .inner_content{padding:30px}.test_cont .test .inner_content:after,.test_cont .test.flip .inner_content:after{right:auto;left:100px;top:auto;bottom:-40px;border-width:40px 24px 0;border-color:#fff transparent transparent}}@media only screen and (min-width:768px) and (max-width:1024px){.test_cont .cont .inner_content{padding:0}.test_cont .test .inner{padding:0 60px 0 0}.test_cont .test .inner_content{padding:40px}.test_cont .test.flip .inner{padding:0 0 0 60px}.test_cont .test.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}}.testimonial{background:#2b59c3}.testimonial .content_section_inner{padding-top:100px;padding-bottom:160px}.testimonial h3{margin-bottom:2em}.testimonial .img img{display:block;width:100%}.icon_label_grid .content_section_inner{padding:100px 0 20px}.icon_label_grid .intro{width:70%;margin:0 auto 80px}.icon_label_grid h3{color:#000041;text-transform:none;letter-spacing:1px}.icon_label_grid .icons{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top;margin:0 auto}.icon_label_grid .icons .bucket{width:33.33%;margin:0 auto 80px;padding:0 30px;box-sizing:border-box;text-align:center}.icon_label_grid .icons .inner{height:100%}.icon_label_grid .icons .icon{display:block;width:120px;height:120px;margin:0 auto 50px;background:center bottom no-repeat;background-size:90% auto}.icon_label_grid .icons blockquote,.icon_label_grid .icons cite,.icon_label_grid .icons p{margin:1em 0 0}@media screen and (max-width:767px){.icon_label_grid .content_section_inner{padding:60px 20px 20px}.icon_label_grid .intro{width:100%}.icon_label_grid .icons .bucket{width:100%;max-width:400px;margin:0 auto 40px;padding:0 10px}.icon_label_grid .icons .inner{display:block}.icon_label_grid .icons blockquote,.icon_label_grid .icons cite,.icon_label_grid .icons p{margin:1em 0 0}.icon_label_grid .icons .icon{margin:0 auto 30px}}@media only screen and (min-width:768px) and (max-width:1024px){.icon_label_grid .intro{width:80%}}.values_tenets h2.lined_left:after{background:#fff}.values_tenets blockquote,.values_tenets cite,.values_tenets h5,.values_tenets h6,.values_tenets li,.values_tenets p{color:#fff}.values_tenets h3,.values_tenets h4{color:#ff6e42}.values_tenets h5{margin:0 0 .75em}.values_tenets .tenets{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:left;justify-content:left;-ms-flex-align:start;align-items:flex-start;margin:80px 0 0}.values_tenets .tenets .bucket{width:50%;margin:0 0 50px;padding:0;box-sizing:border-box}.values_tenets .tenets .bucket:nth-of-type(even){padding:0 0 0 60px}.values_tenets .tenets .bucket:nth-of-type(odd){padding:0 60px 0 0}@media screen and (max-width:767px){.values_tenets .tenets{display:block}.values_tenets .tenets .bucket{width:100%}.values_tenets .tenets .bucket:nth-of-type(even),.values_tenets .tenets .bucket:nth-of-type(odd){padding:0}}.blog_picker h3{color:#000041;text-transform:none;letter-spacing:1px}.blog_picker .featured_posts{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;margin:80px 0 50px;margin-left:0!important}.blog_picker .item{position:relative;float:left;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#fff}.blog_picker .item:nth-of-type(3n+1){margin-left:0}.blog_picker .item .top{position:relative;z-index:12;background:#fff}.blog_picker .item .top .inner{padding:40px;height:230px;box-sizing:border-box;background:center center no-repeat #2b59c3;background-size:cover}.blog_picker .item .btm{background:0 0;z-index:11}.blog_picker .item .btm .inner{position:relative;padding:30px 40px 80px 20px}.blog_picker .item .btm h4{margin:0 0 .75em;font-weight:400;color:#000;text-transform:none;letter-spacing:0}.blog_picker .item .btm blockquote,.blog_picker .item .btm cite,.blog_picker .item .btm p{margin:0}.blog_picker .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){.blog_picker .featured_posts{display:block}.blog_picker .item{float:none;width:100%;margin:0 0 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.blog_picker .item{float:none;width:100%;max-width:600px;margin:0 auto 40px}.blog_picker .item:nth-of-type(3n+1){margin-left:auto}}.wys .inner{margin:0 auto;width:100%}.narrow_wys .inner{margin:0 auto;width:70%;max-width:900px}.inset_right_col .content_section_inner{width:80%}.inset_right_col .left .inner{padding-right:70px}.inset_right_col .right .inner{background:#f2f3f8;padding:36px 36px 10px}.inset_right_col .right h4{font-size:1.11em;letter-spacing:1px}.inset_right_col .right ul{margin:0 0 1.56em 20px}.inset_right_col .right ul li{color:#141920}.inset_right_col .right a{text-decoration:underline}.inset_right_col.light-gray .right .inner{background:#fff}@media screen and (max-width:767px){.inset_right_col .content_section_inner,.narrow_wys .inner{width:100%}.inset_right_col .left{margin:0 0 40px}.inset_right_col .left .inner{padding-right:0}}@media only screen and (min-width:768px) and (max-width:1024px){.narrow_wys .inner{width:90%}}.skinny_cta{background:#000041}.skinny_cta .content_section_inner{padding-top:30px;padding-bottom:30px}.skinny_cta .vert_align{width:70%;margin:0 auto}.skinny_cta .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;height:100%}.skinny_cta .cont{padding-right:60px}.skinny_cta .cont.solo{padding:60px 0 30px}.skinny_cta .cont blockquote,.skinny_cta .cont cite,.skinny_cta .cont p{font-size:1.22em}.skinny_cta .cont *{color:#fff}.skinny_cta .ct{text-align:center}.skinny_cta .ct .btn{margin:0}.skinny_cta.light-blue .cont *,.skinny_cta.light-gray .cont *{color:#000}.skinny_cta.flip .cont{padding-right:0;padding-left:60px}@media screen and (max-width:767px){.skinny_cta .vert_align{width:100%}.skinny_cta .cont{padding-right:0}.skinny_cta.flip .cont{padding-left:0}}@media only screen and (min-width:768px) and (max-width:1024px){.skinny_cta .vert_align{width:100%}}.form_embed.purple-dark h2{margin:0 0 .75em;text-transform:none;letter-spacing:0;color:#fff}.form_embed.purple-dark h2:after{display:none}.form_embed.alt_layout{background-color:#000041!important;background-repeat:no-repeat;background-position:center center;background-size:cover}.form_embed.alt_layout h2{position:relative;display:inline-block;margin:0 0 1em;padding:10px 20px;font-size:2.22em;font-weight:400;letter-spacing:.1em;color:#ff6e42;text-transform:uppercase;border:2px solid #fff}.form_embed.alt_layout h2:after{display:none}.form_embed.alt_layout blockquote,.form_embed.alt_layout cite,.form_embed.alt_layout p{color:#fff}.form_embed.alt_layout blockquote.desc,.form_embed.alt_layout cite.desc,.form_embed.alt_layout p.desc{display:inline-block;margin:0 0 30px;padding:0 0 0 30px;border-left:2px solid #ff6e42;text-align:left;font-size:1.22em}.form_embed .narrow_form{width:50%;margin:0 auto}@media screen and (max-width:767px){.form_embed.alt_layout blockquote.desc,.form_embed.alt_layout cite.desc,.form_embed.alt_layout p.desc{font-size:1em}.form_embed.alt_layout blockquote br,.form_embed.alt_layout cite br,.form_embed.alt_layout p br{display:none}.form_embed .narrow_form{width:100%}}.icon_cont_list .intro{width:70%;margin:0 auto 80px}.icon_cont_list .icon_cont_blocks{margin-left:0!important}.icon_cont_list .icon_cont_blocks .bucket{display:block;background:0 0;margin-bottom:100px}.icon_cont_list .icon_cont_blocks .bucket:last-of-type{margin-bottom:0}.icon_cont_list .icon_cont_blocks .inner{height:100%;box-sizing:border-box}.icon_cont_list .icon_cont_blocks .icon{float:left;width:28%}.icon_cont_list .icon_cont_blocks .icon img{display:block;width:130px;margin:0 auto}.icon_cont_list .icon_cont_blocks .cont{float:left;width:72%}.icon_cont_list .icon_cont_blocks h3{text-align:left;color:#000041;text-transform:none;font-size:1.67em;font-weight:600;letter-spacing:1px}.icon_cont_list .icon_cont_blocks.two_up{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center}.icon_cont_list .icon_cont_blocks.two_up .inner{padding:96px 96px 80px}.icon_cont_list .icon_cont_blocks.two_up .bucket{display:inline-block;vertical-align:top;width:calc(50% - 40px);margin:0 0 40px 40px;background:#f2f3f8}.icon_cont_list .icon_cont_blocks.two_up .bucket:nth-of-type(2n+1){margin-left:0}.icon_cont_list .icon_cont_blocks.two_up .vert_align{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin:0 0 60px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:140px;height:140px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 140px);margin:0 0 0 20px;box-sizing:border-box;text-align:left;color:#000041;text-transform:none;font-size:2em;font-weight:600;letter-spacing:1px}.icon_cont_list .icon_cont_blocks.two_up .inner_content{height:100%}.icon_cont_list .icon_cont_blocks.two_up .inner_content li{color:#141920}.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:50px}.icon_cont_list .icon_cont_blocks.two_up.variant .inner_content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;text-align:center}.icon_cont_list .icon_cont_blocks.two_up.variant .icon_wrap{display:-ms-flexbox;display:flex;-ms-flex:0 0 140px;flex:0 0 140px;margin:auto;width:100%}.icon_cont_list .icon_cont_blocks.two_up.variant .cont_wrap{-ms-flex:1 0 calc(100% - 140px);flex:1 0 calc(100% - 140px)}.icon_cont_list .icon_cont_blocks.two_up.variant .icon{float:none;display:block;margin:auto;width:auto;max-width:90%;height:auto;max-height:120px}.icon_cont_list .icon_cont_blocks.two_up.variant blockquote,.icon_cont_list .icon_cont_blocks.two_up.variant cite,.icon_cont_list .icon_cont_blocks.two_up.variant p{margin-bottom:0}.icon_cont_list .icon_cont_blocks.two_up.variant h3{width:80%;margin:0 auto 30px;text-align:center;color:#000;text-transform:uppercase;letter-spacing:3px;font-size:1.22em;font-weight:600}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket{display:inline-block;vertical-align:top;width:calc(50% - 60px);margin:0 0 60px 60px;background:#fff;border-radius:8px;box-shadow:0 0 20px rgba(0,0,0,.16)}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket:nth-of-type(2n+1){margin-left:0}@media screen and (max-width:767px){.icon_cont_list .intro{width:100%;margin:0 auto 60px}.icon_cont_list .intro blockquote br,.icon_cont_list .intro cite br,.icon_cont_list .intro p br{display:none}.icon_cont_list .icon_cont_blocks .bucket{margin-bottom:60px}.icon_cont_list .icon_cont_blocks .icon{float:none;width:100%}.icon_cont_list .icon_cont_blocks .icon img{display:block;width:130px;margin:0 0 30px}.icon_cont_list .icon_cont_blocks .cont{float:none;width:100%}.icon_cont_list .icon_cont_blocks.two_up .inner{padding:40px 40px 20px}.icon_cont_list .icon_cont_blocks.two_up .bucket{display:block;width:100%;margin:0 0 40px}.icon_cont_list .icon_cont_blocks.two_up .bucket:nth-of-type(2n+1){margin-left:0}.icon_cont_list .icon_cont_blocks.two_up .vert_align{margin:0 0 40px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:80px;height:80px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 100px);margin:0 0 0 20px;font-size:1.5em}.icon_cont_list .icon_cont_blocks.two_up.variant .icon_wrap{-ms-flex:0 0 140px;flex:0 0 140px}.icon_cont_list .icon_cont_blocks.two_up.variant .cont_wrap{-ms-flex:1 0 calc(100% - 140px);flex:1 0 calc(100% - 140px)}.icon_cont_list .icon_cont_blocks.two_up.variant .icon{max-height:110px}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket{display:block;width:100%;max-width:540px;margin:0 auto 40px}.icon_cont_list .icon_cont_blocks.two_up.variant .bucket:nth-of-type(2n+1){margin-left:auto}}@media only screen and (min-width:768px) and (max-width:1024px){.icon_cont_list .icon_cont_blocks.two_up .inner,.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:30px}.icon_cont_list .intro{width:90%}.icon_cont_list .icon_cont_blocks .bucket{margin-bottom:80px}.icon_cont_list .icon_cont_blocks.two_up .vert_align{margin:0 0 30px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:60px;height:60px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 70px);margin-left:10px;font-size:1.25em}}@media only screen and (min-width:1025px) and (max-width:1360px){.icon_cont_list .icon_cont_blocks.two_up .inner{padding:60px 60px 50px}.icon_cont_list .icon_cont_blocks.two_up .vert_align .icon{width:110px;height:110px}.icon_cont_list .icon_cont_blocks.two_up .vert_align h3{width:calc(100% - 100px);font-size:1.5em}.icon_cont_list .icon_cont_blocks.two_up.variant .inner{padding:50px}.icon_cont_list .icon_cont_blocks.two_up.variant .icon_wrap{-ms-flex:0 0 120px;flex:0 0 120px}.icon_cont_list .icon_cont_blocks.two_up.variant .cont_wrap{-ms-flex:1 0 calc(100% - 120px);flex:1 0 calc(100% - 120px)}.icon_cont_list .icon_cont_blocks.two_up.variant .icon{max-height:100px}}.happy_customers .hc_test .cont,.happy_customers .hc_test .logo{padding:0 50px 0 0}.image_rows .intro{margin-bottom:60px}.image_rows .zoom_row h3{margin:0 0 2em;font-size:1.67em;font-weight:600;color:#000041;text-transform:none;letter-spacing:0}.image_rows .zoom_images{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:start;align-items:flex-start;margin-bottom:60px}.image_rows .zoom_images .zoom_cont{position:relative;width:33.333%;height:470px;overflow:hidden}.image_rows .zoom_images .zoom_cont .hover_prompt{position:absolute;top:0;right:0;bottom:0;left:0;background-color:rgba(0,0,65,.6);background-image:url(../../images/mag-glass-fat-white.svg);background-repeat:no-repeat;background-position:center center;background-size:120px auto;transition:opacity .3s;opacity:0}.image_rows .zoom_images .zoom_cont .hover_prompt.kill{display:none}.image_rows .zoom_images .zoom_cont img{display:block;width:auto;height:100%}.image_rows .zoom_images .zoom_cont.zoomable:hover .hover_prompt{opacity:1}@media screen and (max-width:767px){.image_rows .zoom_row h3{margin:0 0 1em}.image_rows .zoom_images{display:block}.image_rows .zoom_images .zoom_cont{width:100%;height:auto}.image_rows .zoom_images .zoom_cont .hover_prompt{display:none}.image_rows .zoom_images .zoom_cont img{display:block;width:100%;max-width:400px;margin:0 auto;height:auto}}@media only screen and (min-width:768px) and (max-width:1024px){.image_rows .zoom_images .zoom_cont{height:300px}.image_rows .zoom_images .zoom_cont img{width:100%;height:auto}}.happy_customers .hc_test{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.happy_customers .hc_test .logo .inner{display:table;height:100%}.happy_customers .hc_test .logo .inner_inner{display:table-cell;vertical-align:middle}.happy_customers .hc_test .logo img{display:block;width:100%}.happy_customers .hc_test .cont .inner_content{padding:70px 70px 30px 100px;background:#eef1fa;text-align:left;box-sizing:border-box}.happy_customers .hc_test .quote{position:relative}.happy_customers .hc_test .mark{position:absolute;left:-40px;top:-20px;width:40px;height:40px;color:#1F1FDD;font-size:3.61em;line-height:40px;text-align:left;font-weight:600}.happy_customers .hc_test .cite_wrap{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:left;justify-content:left}.happy_customers .hc_test .cite_wrap blockquote,.happy_customers .hc_test .cite_wrap cite,.happy_customers .hc_test .cite_wrap p{margin:0}.happy_customers .hc_test .headshot{-ms-flex:0 0 112px;flex:0 0 112px;width:112px;height:112px;margin:0 30px 0 0;border-radius:60px;overflow:hidden;border:1px solid #000041;background:center center no-repeat #fff;background-size:cover}.happy_customers.light-blue .hc_text .cont .inner,.happy_customers.light-gray .hc_text .cont .inner{background:#fff}.happy_customers .logos{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;list-style:none;margin:80px 0;padding:0}.happy_customers .logos .gridblock{width:16.667%;padding:0 35px}.happy_customers .logos .inner{margin:0;text-align:center}.happy_customers .logos .inner .logo{display:inline-block;position:relative;height:70px;width:100%;margin:0 auto}.happy_customers .logos .inner .logo img{position:absolute;left:50%;top:50%;display:block;width:auto;max-height:100%;max-width:100%;transform:translate(-50%,-50%)}@media screen and (max-width:767px){.happy_customers .hc_test{display:block;margin-top:30px}.happy_customers .hc_test .logo{margin:0 0 20px;padding:0}.happy_customers .hc_test .logo .inner{width:100%}.happy_customers .hc_test .logo img{width:auto;max-width:200px;margin:0 auto}.happy_customers .hc_test .cont{padding:0 40px}.happy_customers .hc_test .cont .inner_content{padding:50px 40px 30px 50px}.happy_customers .hc_test .headshot{-ms-flex:0 0 60px;flex:0 0 60px;width:60px;height:60px;margin:0 20px 0 0}.happy_customers .logos{margin:40px 0}.happy_customers .logos .gridblock{-ms-flex:1 0 50%;flex:1 0 50%;width:auto;padding:0 20px}}@media only screen and (min-width:768px) and (max-width:1024px){.happy_customers .hc_test .cont,.happy_customers .hc_test .logo{padding:0 20px 0 0}.happy_customers .hc_test .cont .inner_content{padding:40px 40px 20px 70px}.happy_customers .hc_test .mark{position:absolute;left:-40px;top:-20px;width:40px;height:40px;color:#1F1FDD;font-size:3.61em;line-height:40px;text-align:left;font-weight:600}.happy_customers .hc_test .headshot{-ms-flex:0 0 60px;flex:0 0 60px;width:60px;height:60px}.happy_customers .logos .gridblock{width:33.3333%;margin:0 0 30px;padding:0 20px}}.metrics_cont .cont .inner,.metrics_cont .metrics .inner_content{padding:0 60px}.metrics_cont{background-repeat:no-repeat;background-position:center center;background-size:100% auto}.metrics_cont .vert_align{margin-bottom:80px}.metrics_cont .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.metrics_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.metrics_cont .vert_align.last{margin-bottom:0}.metrics_cont .cont{-ms-flex-order:-1;order:-1}.metrics_cont .cont .inner_content{position:relative;padding:60px;background:#fff}.metrics_cont .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff;content:''}.metrics_cont .cont.flip{-ms-flex-order:1;order:1}.metrics_cont .cont.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}.metrics_cont .metrics_grid li{display:inline-block;width:calc(50% - 40px);margin:30px 20px;text-align:center}.metrics_cont .metrics_grid li img{display:block;width:60%;margin:0 auto}.metrics_cont .metrics_grid li .metric{display:block;margin:.25em 0;font-size:3.33em;line-height:1.3em;font-weight:600;color:#000041}.metrics_cont .metrics_grid li .metric_label{display:block;margin:0;font-size:1.22em;font-weight:400}@media screen and (max-width:767px){.metrics_cont .vert_align .grid{display:block}.metrics_cont .metrics .inner_content{padding:0}.metrics_cont .cont .inner{display:block;padding:0}.metrics_cont .cont .inner_content{padding:30px}.metrics_cont .cont .inner_content:after,.metrics_cont .cont.flip .inner_content:after{right:auto;left:100px;top:-40px;border-width:0 24px 40px;border-color:transparent transparent #fff;content:''}.metrics_cont .metrics_grid{margin:0 0 80px!important}.metrics_cont .metrics_grid li{display:inline-block;width:calc(50% - 10px);margin:20px 5px;text-align:center}.metrics_cont .metrics_grid li img{display:block;width:50%;margin:0 auto}.metrics_cont .metrics_grid li .metric{display:block;margin:0 0 .25em;font-size:2.33em;line-height:1.3em;font-weight:600;color:#000041}.metrics_cont .metrics_grid li .metric_label{display:block;margin:0;font-size:1em;font-weight:400}}@media only screen and (min-width:768px) and (max-width:1024px){.metrics_cont .metrics .inner_content{-ms-flex:1 0 100%;flex:1 0 100%;padding:0}.metrics_cont .cont .inner{padding:0 60px 0 0}.metrics_cont .cont .inner_content{padding:40px}.metrics_cont .cont.flip .inner{padding:0 0 0 60px}.metrics_cont .metrics_grid{margin-left:0!important}.metrics_cont .metrics_grid li{display:block;width:100%;margin:30px 0}.metrics_cont .metrics_grid li img{width:60%;max-width:200px;margin:0 auto}.metrics_cont .metrics_grid li .metric{margin:0;font-size:3em}.metrics_cont .metrics_grid li .metric_label{font-size:1em}}.yb_is_for h2.lined{margin:0 0 2.5em}.yb_is_for .contentbuckets{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start}.yb_is_for .contentbuckets .bucket{-ms-flex:0 0 calc(33.3333% - 22px);flex:0 0 calc(33.3333% - 22px);width:calc(33.3333% - 22px);margin:0 0 0 33px;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}.yb_is_for .contentbuckets .bucket:first-of-type{margin-left:0}.yb_is_for .contentbuckets .img{height:250px;background:center top no-repeat #000041;background-size:cover}.yb_is_for .contentbuckets .cont{height:calc(100% - 250px)}.yb_is_for .contentbuckets .cont .inner{background:#eef1fa;border:1px dashed #000041;border-top:none;height:100%;padding:70px 50px 30px 80px;text-align:left;box-sizing:border-box}.yb_is_for .contentbuckets .cont h4{width:calc(100% + 30px);margin-left:-30px;padding:0 0 0 50px;box-sizing:border-box;letter-spacing:2px}.yb_is_for .contentbuckets .cont h4:before{top:-2px}.yb_is_for .contentbuckets .cont .wysiwyg li{color:#000}.yb_is_for .contentbuckets .cont .wysiwyg li:before{left:-20px;width:6px;height:6px;border-radius:3px}@media screen and (max-width:767px){.yb_is_for .contentbuckets{display:block}.yb_is_for .contentbuckets .bucket{width:100%;margin:0 0 40px}.yb_is_for .contentbuckets .cont .inner{padding:40px 30px 20px 50px}}@media only screen and (min-width:768px) and (max-width:1024px){.yb_is_for .contentbuckets{display:block}.yb_is_for .contentbuckets .bucket{display:block;width:100%;max-width:800px;margin:0 auto 30px}.yb_is_for .contentbuckets .bucket:first-of-type{margin-left:auto}.yb_is_for .contentbuckets .img{height:300px}.yb_is_for .contentbuckets .inner_content{height:auto!important}}.link_groups .lists_wrap{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:start;align-items:flex-start;padding:0 60px}.link_groups .lists_wrap .bucket{width:calc(33.3333% - 40px);margin:0 0 0 60px}.link_groups .lists_wrap .bucket:first-of-type{margin-left:0}.link_groups .lists_wrap .head{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;padding:20px 50px;border:1px solid #000041;background:#eef1fa}.link_groups .lists_wrap .head .icon{-ms-flex:0 0 70px;flex:0 0 70px}.link_groups .lists_wrap .head .icon img{display:block;width:100%}.link_groups .lists_wrap .head h4{-ms-flex:1 0 calc(100% - 90px);flex:1 0 calc(100% - 90px);margin:0 0 0 20px;text-align:left;text-transform:none;letter-spacing:0}.link_groups .lists_wrap .links{margin:0!important;padding:0;border:1px dashed #000041;border-top:none}.link_groups .lists_wrap .links li{border-top:1px dashed #000041}.link_groups .lists_wrap .links li:first-of-type{border:none}.link_groups .lists_wrap .links a{display:block;position:relative;padding:26px 30px 26px 50px;text-align:left;font-size:1em;line-height:30px;color:#141920}.link_groups .lists_wrap .links a:hover{color:#141920}.link_groups .lists_wrap .links a:hover .arrow{margin-left:16px}.link_groups .lists_wrap .links span{display:inline-block;vertical-align:middle}.link_groups .lists_wrap .links .arrow{width:0;height:0;margin:10px 0 0 8px;border-style:solid;border-width:4px 0 4px 7px;border-color:transparent transparent transparent #ff6e42;transform:translateY(-50%);transition:all .3s}.link_groups .lists_wrap .links .link_icon{margin-right:10px}.link_groups .lists_wrap .links .link_icon img{vertical-align:middle}@media screen and (max-width:767px){.link_groups .lists_wrap{display:block;padding:0}.link_groups .lists_wrap .bucket{width:100%;margin:0 0 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.link_groups .lists_wrap{padding:0}.link_groups .lists_wrap .bucket{width:calc(33.3333% - 20px);margin:0 0 0 30px}.link_groups .lists_wrap .head{padding:20px 10px}.link_groups .lists_wrap .head .icon{-ms-flex:0 0 30px;flex:0 0 30px}.link_groups .lists_wrap .head h4{-ms-flex:1 0 calc(100% - 40px);flex:1 0 calc(100% - 40px);margin-left:10px}.link_groups .lists_wrap .links a{padding:16px 10px;font-size:.8em}}.accordion_simple .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.accordion_simple .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;height:100%}.accordion_simple .acc .inner_content{-ms-flex-positive:1;flex-grow:1;padding:0 60px}.accordion_simple .cont .inner{padding:0 60px}.accordion_simple .cont .inner_content{position:relative;padding:60px;background:#fff}.accordion_simple .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff;content:''}.accordion_simple .accordion{margin:0!important;padding:0;list-style:none}.accordion_simple .accordion>li{display:block;list-style:none;margin:0;padding:0;border-bottom:1px dashed #000041}.accordion_simple .accordion>li:before{display:none}.accordion_simple .accordion .acc_heading{position:relative;margin:0;text-transform:none;font-weight:600;letter-spacing:0;color:#000041}.accordion_simple .accordion .acc_heading>a{display:inline-block;position:relative;width:100%;margin:0;padding:36px 10px;color:#000041;vertical-align:middle;text-decoration:none;box-sizing:border-box}.accordion_simple .accordion .acc_heading.active>a,.accordion_simple .accordion .acc_heading>a:hover{color:#ff6e42}.accordion_simple .accordion .acc_heading>a .inner{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.accordion_simple .accordion .acc_heading span{line-height:1.2em;-ms-flex:0 0 calc(100% - 100px);flex:0 0 calc(100% - 100px)}.accordion_simple .accordion .acc_heading .acc_icon{-ms-flex:0 0 46px;flex:0 0 46px;width:46px;margin:0 15px 0 0}.accordion_simple .accordion .acc_heading .acc_icon img{vertical-align:middle}.accordion_simple .accordion .acc_heading .toggle{position:absolute;right:10px;top:36px;display:inline-block;width:21px;height:46px;padding:0;vertical-align:middle;box-sizing:border-box;background:url(../../images/accordion-toggle.svg) center center no-repeat;background-size:100% auto;transform-origin:center;transition:all .3s}.accordion_complex .cont_right ul li,.accordion_simple .accordion .acc_content .inner ul li{color:#000}.accordion_simple .accordion .acc_heading.active .toggle{transform:rotate(180deg)}.accordion_simple .accordion .acc_content{display:none}.accordion_simple .accordion .acc_content .inner{display:block;padding:0 0 30px 72px;box-sizing:border-box}.accordion_simple .accordion .acc_content .inner ul{margin-top:0}.accordion_simple .accordion .acc_content .inner ul li:before{width:6px;height:6px;border-radius:3px}.accordion_simple .accordion .acc_content blockquote,.accordion_simple .accordion .acc_content cite,.accordion_simple .accordion .acc_content p{margin-bottom:.5em}@media screen and (max-width:767px){.accordion_simple .acc .inner_content,.accordion_simple .cont .inner{padding:0}.accordion_simple .vert_align .grid{display:block}.accordion_simple .cont{margin-bottom:60px}.accordion_simple .cont .inner_content{padding:30px}.accordion_simple .cont .inner_content:after{right:auto;left:100px;top:auto;bottom:-40px;border-width:40px 24px 0;border-color:#fff transparent transparent}.accordion_simple .accordion .acc_heading>a{padding:20px 10px;font-size:18px;line-height:1.2em}.accordion_simple .accordion .acc_heading .toggle{top:20px}.accordion_simple .accordion .acc_content .inner{display:block;padding:0 0 0 72px;box-sizing:border-box}}@media only screen and (min-width:768px) and (max-width:1024px){.accordion_simple .vert_align .grid{display:block}.accordion_simple .acc .inner_content,.accordion_simple .cont .inner{padding:0}.accordion_simple .cont .inner_content{padding:40px}.accordion_simple .cont .inner_content:after{right:auto;left:100px;top:auto;bottom:-40px;border-width:40px 24px 0;border-color:#fff transparent transparent}.accordion_simple .accordion{margin:60px 0 0!important}}.accordion_complex .intro{width:70%;margin:0 auto 80px;text-align:center}.accordion_complex .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:0 60px}.accordion_complex .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.accordion_complex .cont_right .inner_content{-ms-flex-positive:1;flex-grow:1;padding:0 60px}.accordion_complex .cont_right ul{margin-top:0}.accordion_complex .cont_right ul li:before{width:6px;height:6px;border-radius:3px}.accordion_complex .cont_left{padding:0 0 0 60px!important}.accordion_complex .cont_left .inner{position:relative;padding:0;-webkit-clip-path:polygon(93% 0,93% 100px,100% 122px,93% 144px,93% 100%,0 100%,0 0);clip-path:polygon(93% 0,93% 100px,100% 122px,93% 144px,93% 100%,0 100%,0 0);background:#ff6e42}.accordion_complex .cont_left .inner:before{position:absolute;left:1px;top:1px;width:calc(100% - 2px);height:calc(100% - 2px);background:#fff;-webkit-clip-path:polygon(93% 0,93% 100px,calc(100% - 1px) 121px,93% 142px,93% 100%,0 100%,0 0);clip-path:polygon(93% 0,93% 100px,calc(100% - 1px) 121px,93% 142px,93% 100%,0 100%,0 0);content:''}.accordion_complex .cont_left .inner_content{position:relative;padding:100px 120px 70px 80px}.accordion_complex .accordion_wrap{position:relative;margin:60px 0 0;padding-top:100px}.accordion_complex .accordion_wrap:before{position:absolute;left:50%;top:40px;transform:translateX(-50%);width:40%;height:10px;border-bottom:1px dashed #000041;content:''}.accordion_complex .accordion{margin:0!important;padding:0;list-style:none}.accordion_complex .accordion>li{display:block;list-style:none;margin:0;padding:0;border-bottom:1px dashed #000041}.accordion_complex .accordion>li:before{display:none}.accordion_complex .accordion .acc_heading{position:relative;margin:0;text-transform:none;font-weight:600;letter-spacing:0;color:#000041}.accordion_complex .accordion .acc_heading>a{display:block;position:relative;width:100%;margin:0;padding:60px 10% 60px 100px;color:#000;vertical-align:middle;text-decoration:none;box-sizing:border-box}.accordion_complex .accordion .acc_heading>a:hover{color:#ff6e42}.accordion_complex .accordion .acc_heading>a:before{position:absolute;left:40px;top:60px;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}.accordion_complex .accordion .acc_heading>a .inner{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.accordion_complex .accordion .acc_heading span{display:inline-block;vertical-align:middle}.accordion_complex .accordion .acc_heading .h{-ms-flex:0 0 30%;flex:0 0 30%;margin:0;font-size:1em;line-height:1.45em;font-weight:600;text-transform:uppercase;letter-spacing:3px}.accordion_complex .accordion .acc_heading .sh{-ms-flex:1 0 70%;flex:1 0 70%;margin-left:20px;font-size:.82em;font-weight:400;line-height:1.5em;color:#000}.accordion_complex .accordion .acc_heading .toggle{position:absolute;right:10px;top:50%;display:inline-block;width:21px;height:46px;padding:0;vertical-align:middle;box-sizing:border-box;background:url(../../images/accordion-toggle.svg) center center no-repeat;background-size:100% auto;transform:translateY(-50%);transform-origin:center;transition:all .3s}.accordion_complex .accordion .acc_heading.active>a{color:#ff6e42}.accordion_complex .accordion .acc_heading.active .toggle{transform:translateY(-50%) rotate(180deg)}.accordion_complex .accordion .acc_content{display:none}.accordion_complex .accordion .acc_content .inner{display:block;padding:0 0 30px calc(30% + 60px);box-sizing:border-box}.accordion_complex .accordion .acc_content .inner ul{margin-top:0}.accordion_complex .accordion .acc_content .inner ul li{color:#000}.accordion_complex .accordion .acc_content .inner ul li:before{width:6px;height:6px;border-radius:3px}.accordion_complex .accordion .acc_content blockquote,.accordion_complex .accordion .acc_content cite,.accordion_complex .accordion .acc_content p{margin-bottom:.5em}@media screen and (max-width:767px){.accordion_complex .accordion_wrap:before,.accordion_complex .intro{width:100%}.accordion_complex .vert_align .grid{display:block;padding:0}.accordion_complex .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.accordion_complex .cont_right .inner_content{padding:0}.accordion_complex .cont_left{margin:0 0 40px;padding:0!important}.accordion_complex .cont_left .inner{-webkit-clip-path:polygon(100% 0,100% calc(100% - 40px),144px calc(100% - 40px),122px 100%,100px calc(100% - 40px),0 calc(100% - 40px),0 0);clip-path:polygon(100% 0,100% calc(100% - 40px),144px calc(100% - 40px),122px 100%,100px calc(100% - 40px),0 calc(100% - 40px),0 0)}.accordion_complex .cont_left .inner:before{-webkit-clip-path:polygon(100% 0,100% calc(100% - 40px),142px calc(100% - 40px),121px calc(100% - 1px),100px calc(100% - 40px),0 calc(100% - 40px),0 0);clip-path:polygon(100% 0,100% calc(100% - 40px),142px calc(100% - 40px),121px calc(100% - 1px),100px calc(100% - 40px),0 calc(100% - 40px),0 0)}.accordion_complex .cont_left .inner_content{padding:60px}.accordion_complex .accordion_wrap{top:0;margin:0}.accordion_complex .accordion .acc_heading>a{padding:20px 50px 20px 60px}.accordion_complex .accordion .acc_heading>a:before{left:10px;top:20px}.accordion_complex .accordion .acc_heading span,.accordion_complex .accordion .acc_heading>a .inner{display:block}.accordion_complex .accordion .acc_heading .sh{margin-left:0}.accordion_complex .accordion .acc_content .inner{padding:0 0 0 60px}}@media only screen and (min-width:768px) and (max-width:1024px){.accordion_complex .intro{width:90%}.accordion_complex .vert_align .grid{padding:0}.accordion_complex .cont_right .inner_content{padding:0 0 0 60px}.accordion_complex .cont_left{padding:0!important}.accordion_complex .cont_left .inner_content{padding:70px 70px 40px}.accordion_complex .accordion_wrap:before{width:60%}.accordion_complex .accordion .acc_heading>a:before{top:50%;transform:translateY(-50%)}.accordion_complex .accordion .acc_heading .sh{-ms-flex:1 0 calc(70% - 60px);flex:1 0 calc(70% - 60px)}}@media only screen and (min-width:1025px) and (max-width:1360px){.accordion_complex .intro{width:80%}.accordion_complex .vert_align .grid{padding:0}}.contrib_journey .cont_wrap{padding:0 60px}.contrib_journey .cont_wrap>.btn{margin-bottom:0}.contrib_journey .intro{width:70%;margin:0 auto 80px}.contrib_journey .contentbuckets{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;margin-bottom:60px}.contrib_journey .contentbuckets .bucket{width:calc(33.3333% - 40px);margin:0 0 0 60px;background:0 0;filter:drop-shadow(0 0 .4rem rgba(0, 0, 0, .3))}.contrib_journey .contentbuckets .bucket:first-of-type{margin-left:0}.contrib_journey .contentbuckets .bucket .notched{height:100%;-webkit-clip-path:polygon(0 0,42% 0,50% 24px,58% 0,100% 0,100% 100%,0 100%);clip-path:polygon(0 0,42% 0,50% 24px,58% 0,100% 0,100% 100%,0 100%);background:#fff}.contrib_journey .contentbuckets .inner{background:#fff;border-top:none;padding:60px;text-align:center}.contrib_journey .contentbuckets .inner .wysiwyg{text-align:center}.contrib_journey .contentbuckets .inner img{max-width:50%}@media screen and (max-width:767px){.contrib_journey .cont_wrap{padding:0}.contrib_journey .intro{width:100%}.contrib_journey .contentbuckets{display:block}.contrib_journey .contentbuckets .bucket{width:100%;margin:0 0 40px}.contrib_journey .contentbuckets .inner{padding:30px}}@media only screen and (min-width:768px) and (max-width:1024px){.contrib_journey .cont_wrap{padding:0}.contrib_journey .intro{width:90%}.contrib_journey .contentbuckets{display:block}.contrib_journey .contentbuckets .bucket{width:100%;max-width:500px;margin:0 auto 60px}.contrib_journey .contentbuckets .bucket:first-of-type{margin-left:auto}.contrib_journey .contentbuckets .inner{padding:40px}}.lever_jobs #lever-jobs-filter{padding-right:40px}.lever_jobs #lever-jobs-filter .jobs_filter_wrap{margin-bottom:20px}.lever_jobs #lever-jobs-filter .jobs_filter_wrap h3{position:relative;margin:0 0 1em;color:#000;font-size:1.22em;font-weight:600;text-transform:none;letter-spacing:0}.lever_jobs #lever-jobs-filter .jobs_filter_wrap h3:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%) rotate(0);transition:all .3s}.lever_jobs #lever-jobs-filter .jobs_filter_wrap select{margin:0;padding:10px 10px 10px 16px;font-size:1em;font-weight:400;line-height:1.3em;outline:0;color:#000;width:100%;background:#ff6e42;border-radius:0;border:1px solid #707070;-webkit-user-select:none;-ms-user-select:none;user-select:none;-webkit-appearance:none;appearance:none;white-space:pre-wrap;z-index:110;cursor:pointer;background-color:rgba(255,110,66,0);transition:all .3s}.lever_jobs #lever-jobs-filter .jobs_filter_wrap select.active,.lever_jobs #lever-jobs-filter .jobs_filter_wrap select:hover{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}.lever_jobs #lever-jobs-filter .jobs_filter_wrap select::-ms-expand{display:none}.lever_jobs #jobs_list ul{margin:0;padding:0;list-style:none!important}.lever_jobs #jobs_list ul li{padding:5px 0}.lever_jobs #jobs_list ul li a{display:block;padding:6px 30px;box-shadow:0 0 0 rgba(0,0,0,.3);text-decoration:none;transition:all .3s;color:#000;background:#fff;z-index:6}.lever_jobs #jobs_list ul li a h4{margin:0;line-height:1.1em;color:#ff6e42}.lever_jobs #jobs_list ul li a span{display:inline-block;vertical-align:middle;color:#000}.lever_jobs #jobs_list ul li a span.team{font-weight:700}.lever_jobs #jobs_list ul li a:hover{box-shadow:0 0 10px rgba(0,0,0,.3)}.inline_cta{margin-bottom:40px;width:100%}.inline_cta.test{padding:60px;background:#f2f3f8}.inline_cta.test .meta .headshot{display:inline-block;position:relative;height:114px;width:114px;border-radius:100px;overflow:hidden;border:1px solid #000041;margin:0 auto 40px}.inline_cta.test .meta .headshot img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.inline_cta.test .meta blockquote,.inline_cta.test .meta cite,.inline_cta.test .meta p{margin:0}.inline_cta.test .quote .inner{padding:0 40px}.inline_cta.test .quote img{display:block;width:50%;max-width:300px;margin:0 0 40px}.inline_cta.test .quote blockquote,.inline_cta.test .quote cite,.inline_cta.test .quote p{margin:0}@media screen and (max-width:767px){.inline_cta.test{padding:30px}.inline_cta.test .meta .headshot{margin-bottom:10px}.inline_cta.test .quote{margin:0 0 40px}.inline_cta.test .quote .inner{padding:0}.inline_cta.test .quote img{margin:0 auto 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.inline_cta.test{padding:40px}.inline_cta.test .quote .inner{padding:0 0 0 40px}.inline_cta.test .quote img{width:70%}}#alm-filters-eventsfilter,#alm-filters-resourcesfilter,#alm-filters-ssfilter,#alm-filters-ybnewsfilter{padding-right:40px}#alm-filters-eventsfilter .alm-filter,#alm-filters-resourcesfilter .alm-filter,#alm-filters-ssfilter .alm-filter,#alm-filters-ybnewsfilter .alm-filter{margin-bottom:20px}#alm-filters-eventsfilter .alm-filter ul,#alm-filters-resourcesfilter .alm-filter ul,#alm-filters-ssfilter .alm-filter ul,#alm-filters-ybnewsfilter .alm-filter ul{margin:0 0 30px;padding:0;list-style:none;background:#fff;border:1px solid #707070}#alm-filters-eventsfilter .alm-filter ul>li,#alm-filters-resourcesfilter .alm-filter ul>li,#alm-filters-ssfilter .alm-filter ul>li,#alm-filters-ybnewsfilter .alm-filter ul>li{display:none;margin:0;padding:0;list-style:none}#alm-filters-eventsfilter .alm-filter ul>li:first-of-type,#alm-filters-resourcesfilter .alm-filter ul>li:first-of-type,#alm-filters-ssfilter .alm-filter ul>li:first-of-type,#alm-filters-ybnewsfilter .alm-filter ul>li:first-of-type{display:block!important}#alm-filters-eventsfilter .alm-filter ul>li:first-of-type .alm-filter--link.init,#alm-filters-resourcesfilter .alm-filter ul>li:first-of-type .alm-filter--link.init,#alm-filters-ssfilter .alm-filter ul>li:first-of-type .alm-filter--link.init,#alm-filters-ybnewsfilter .alm-filter ul>li:first-of-type .alm-filter--link.init{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}#alm-filters-eventsfilter .alm-filter ul>li:first-of-type .alm-filter--link.off,#alm-filters-resourcesfilter .alm-filter ul>li:first-of-type .alm-filter--link.off,#alm-filters-ssfilter .alm-filter ul>li:first-of-type .alm-filter--link.off,#alm-filters-ybnewsfilter .alm-filter ul>li:first-of-type .alm-filter--link.off{background-color:#ff6e42;background-color:rgba(255,110,66,0)}#alm-filters-eventsfilter .alm-filter ul>li:last-of-type,#alm-filters-resourcesfilter .alm-filter ul>li:last-of-type,#alm-filters-ssfilter .alm-filter ul>li:last-of-type,#alm-filters-ybnewsfilter .alm-filter ul>li:last-of-type{margin:0}#alm-filters-eventsfilter .alm-filter ul>li .alm-filter--link,#alm-filters-resourcesfilter .alm-filter ul>li .alm-filter--link,#alm-filters-ssfilter .alm-filter ul>li .alm-filter--link,#alm-filters-ybnewsfilter .alm-filter ul>li .alm-filter--link{display:block;padding:10px 10px 10px 15px;font-size:1em;color:#000;line-height:1.3em;outline:0;cursor:pointer;background-color:#ff6e42;background-color:rgba(255,110,66,0);transition:all .3s}#alm-filters-eventsfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-eventsfilter .alm-filter ul>li .alm-filter--link:hover,#alm-filters-resourcesfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-resourcesfilter .alm-filter ul>li .alm-filter--link:hover,#alm-filters-ssfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-ssfilter .alm-filter ul>li .alm-filter--link:hover,#alm-filters-ybnewsfilter .alm-filter ul>li .alm-filter--link.active,#alm-filters-ybnewsfilter .alm-filter ul>li .alm-filter--link:hover{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}#alm-filters-eventsfilter .alm-filter--title h3,#alm-filters-resourcesfilter .alm-filter--title h3,#alm-filters-ssfilter .alm-filter--title h3,#alm-filters-ybnewsfilter .alm-filter--title h3{position:relative;margin:0 0 1em;color:#000;font-size:1.22em;font-weight:600;text-transform:none;letter-spacing:0}#alm-filters-eventsfilter .alm-filter--title h3:after,#alm-filters-resourcesfilter .alm-filter--title h3:after,#alm-filters-ssfilter .alm-filter--title h3:after,#alm-filters-ybnewsfilter .alm-filter--title h3:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%) rotate(0);transition:all .3s}#alm-filters-eventsfilter .alm-filter--title h3.open:after,#alm-filters-resourcesfilter .alm-filter--title h3.open:after,#alm-filters-ssfilter .alm-filter--title h3.open:after,#alm-filters-ybnewsfilter .alm-filter--title h3.open:after{transform:translateY(-50%) rotate(90deg)}#alm-filters-eventsfilter .alm-filters-edit,#alm-filters-resourcesfilter .alm-filters-edit,#alm-filters-ssfilter .alm-filters-edit,#alm-filters-ybnewsfilter .alm-filters-edit{display:none}#alm-filters-resourcessearchfilter{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:42px;overflow:hidden;border:1px solid #000;border-radius:24px}#alm-filters-resourcessearchfilter .alm-filter{width:260px}#alm-filters-resourcessearchfilter .alm-filters--controls{width:60px}#alm-filters-resourcessearchfilter .alm-filter--textfield{width:100%;height:42px;line-height:42px;font-size:1em;padding:0 20px;box-sizing:border-box;border:none;-webkit-appearance:none;color:#000;background:0 0}#alm-filters-resourcessearchfilter .alm-filter--textfield:focus,#alm-filters-resourcessearchfilter .alm-filter--textfield:valid{outline:0;border:none}#alm-filters-resourcessearchfilter .alm-filters--button{position:relative;width:60px;height:42px;text-indent:-9999px;overflow:hidden;background:#fff;border:none;border-radius:0;transition:all .3s;cursor:pointer}#alm-filters-resourcessearchfilter .alm-filters--button:hover{background:#ff6e42}#alm-filters-resourcessearchfilter .alm-filters--button:focus{outline:0}#alm-filters-resourcessearchfilter .alm-filters--button:before{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;content:'';background:url(../../images/search-mag-glass.svg) center center no-repeat;background-size:20px auto}#alm-filters-resourcessearchfilter .alm-filters-edit{display:none}.alm-btn-wrap{opacity:0;visibility:hidden;text-align:center}#events-list .alm-btn-wrap,#ybnews-list .alm-btn-wrap,.alm-btn-wrap #resources-list{opacity:1;visibility:visible}.alm-btn-wrap .btn{margin:0}#resources-list .alm-btn-wrap .btn,#ybnews-list .alm-btn-wrap .btn{background:#ff6e42!important;color:#fff!important}#resources-list .alm-btn-wrap .btn:hover,#ybnews-list .alm-btn-wrap .btn:hover{background:#2b59c3!important}.alm-layouts .alm-listing{margin:0!important}@media screen and (max-width:767px){#alm-filters-eventsfilter,#alm-filters-resourcesfilter,#alm-filters-ssfilter,#alm-filters-ybnewsfilter{padding-right:0}#alm-filters-resourcessearchfilter .alm-filter{-ms-flex:1 0 260px;flex:1 0 260px;width:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#alm-filters-eventsfilter,#alm-filters-resourcesfilter,#alm-filters-ssfilter,#alm-filters-ybnewsfilter{padding-right:10px}#alm-filters-eventsfilter .alm-filter--title h3,#alm-filters-resourcesfilter .alm-filter--title h3,#alm-filters-ssfilter .alm-filter--title h3,#alm-filters-ybnewsfilter .alm-filter--title h3{font-size:1em}#alm-filters-eventsfilter .alm-filter--title h3:after,#alm-filters-resourcesfilter .alm-filter--title h3:after,#alm-filters-ssfilter .alm-filter--title h3:after,#alm-filters-ybnewsfilter .alm-filter--title h3:after{right:0}}#success_stories{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#success_stories #success-stories-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#success_stories #success-stories-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#success_stories #success-stories-list .item{position:relative;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#f2f3f8}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:0}#success_stories #success-stories-list .item>a{display:block;color:#000}#success_stories #success-stories-list .item>a:hover .top img{transform:translate3d(0,0,0) scale(1.1)}#success_stories #success-stories-list .item>a:hover .read_more{color:#ff6e42}#success_stories #success-stories-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff}#success_stories #success-stories-list .item .top .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;padding:40px;height:230px;box-sizing:border-box}#success_stories #success-stories-list .item .top img{display:block;width:100%;max-width:300px;margin:0 auto;transform:translate3d(0,0,0);transition:transform .3s}#success_stories #success-stories-list .item .top .vertical{position:absolute;left:0;bottom:5px;display:block;padding:5px;width:100%;font-size:.78em;color:#707070;line-height:1.25em;box-sizing:border-box;text-align:center}#success_stories #success-stories-list .item .btm{background:0 0;z-index:11}#success_stories #success-stories-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#success_stories #success-stories-list .item .btm blockquote,#success_stories #success-stories-list .item .btm cite,#success_stories #success-stories-list .item .btm p{margin:0}#success_stories #success-stories-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){#success_stories{width:calc(100% - 40px)}#success_stories #success-stories-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#success_stories #success-stories-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#success_stories #success-stories-list .item{width:100%;max-width:540px;margin:0 auto 40px}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:auto}#success_stories #success-stories-list .item .top .inner{height:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#success_stories #success-stories-list .item{width:calc(50% - 20px)}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:40px}#success_stories #success-stories-list .item:nth-of-type(2n+1){margin-left:0}}#yb_events{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#yb_events #events-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#yb_events #events-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#yb_events #events-list li.item{padding:48px 24px;border-bottom:1px solid rgba(112,112,112,.35);box-sizing:border-box}#yb_events #events-list li.item .img{float:left;width:30%}#yb_events #events-list li.item .img a{display:block}#yb_events #events-list li.item .img img{display:block;width:100%}#yb_events #events-list li.item .cont{float:left;width:70%;box-sizing:border-box;padding:0 0 0 50px}#yb_events #events-list li.item .cont.full{float:none;width:100%}#yb_events #events-list li.item h4{margin:0 0 .25em;color:#ff6e42;text-transform:none;letter-spacing:0}#yb_events #events-list li.item h4 a{color:#ff6e42}#yb_events #events-list li.item h4 a:hover{color:#2b59c3}#yb_events #events-list li.item blockquote.meta,#yb_events #events-list li.item cite.meta,#yb_events #events-list li.item p.meta{margin:0 0 36px}#yb_events #events-list li.item blockquote .date,#yb_events #events-list li.item cite .date,#yb_events #events-list li.item p .date{font-weight:700}.mu_groups_list{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;margin:80px 0 0;margin-left:0!important}.mu_groups_list>li{width:33.33%;margin:0 0 50px;padding:0 50px;box-sizing:border-box;text-align:left}.mu_groups_list>li>a{display:block}.mu_groups_list>li>a:hover img{transform:scale(1.05) rotate(.02deg)}.mu_groups_list>li>a:hover h4{color:#ff6e42}.mu_groups_list>li .img{margin:0 0 10px;overflow:hidden}.mu_groups_list>li img{display:block;width:100%;transition:all .3s;transform-origin:center center}.mu_groups_list>li h4{margin:0;transition:all .3s}@media screen and (max-width:767px){#yb_events{width:calc(100% - 40px)}#yb_events #events-list li.item{max-width:480px;margin:0 auto}#yb_events #events-list li.item .img{float:none;width:100%;margin:0 0 40px}#yb_events #events-list li.item .cont{float:none;width:100%;padding:0}.mu_groups_list{display:block}.mu_groups_list>li{width:100%;margin:0 0 40px;padding:0}}@media only screen and (min-width:768px) and (max-width:1024px){.mu_groups_list>li{padding:0 30px}}#yb_news{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#yb_news #ybnews-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#yb_news #ybnews-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#yb_news #ybnews-list .item{position:relative;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#f2f3f8}#yb_news #ybnews-list .item:nth-of-type(3n+1){margin-left:0}#yb_news #ybnews-list .item>a{display:block;color:#000}#yb_news #ybnews-list .item>a:hover .top img,#yb_news #ybnews-list .item>a:hover .top.pr .inner{transform:translate3d(0,0,0) scale(1.1)}#yb_news #ybnews-list .item>a:hover .read_more{color:#ff6e42}#yb_news #ybnews-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff;overflow:hidden}#yb_news #ybnews-list .item .top.pr .inner{display:block;padding:0;background:center top no-repeat #fff;background-size:cover;transform:translate3d(0,0,0);transition:transform .3s}#yb_news #ybnews-list .item .top .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;padding:40px;height:230px;box-sizing:border-box}#yb_news #ybnews-list .item .top img{display:block;width:100%;transform:translate3d(0,0,0);transition:transform .3s}#yb_news #ybnews-list .item .top .vertical{position:absolute;left:0;bottom:5px;display:block;padding:5px;width:100%;font-size:.78em;color:#707070;line-height:1.25em;box-sizing:border-box;text-align:center}#yb_news #ybnews-list .item .btm{background:0 0;z-index:11}#yb_news #ybnews-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#yb_news #ybnews-list .item .btm blockquote,#yb_news #ybnews-list .item .btm cite,#yb_news #ybnews-list .item .btm p{margin:0}#yb_news #ybnews-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){#yb_news{width:calc(100% - 40px)}#yb_news #ybnews-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#yb_news #ybnews-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#yb_news #ybnews-list .item{width:100%;max-width:400px;margin:0 auto 40px}#yb_news #ybnews-list .item:nth-of-type(3n+1){margin-left:auto}#yb_news #ybnews-list .item .top .inner{height:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#resources #resources-list .item,#yb_news #ybnews-list .item{width:calc(50% - 20px)}#resources #resources-list .item .top .inner,#yb_news #ybnews-list .item .top .inner{height:180px}#resources #resources-list .item:nth-of-type(3n+1){margin-left:40px}#resources #resources-list .item:nth-of-type(2n+1){margin-left:0}#yb_news #ybnews-list .item:nth-of-type(3n+1){margin-left:40px}#yb_news #ybnews-list .item:nth-of-type(2n+1){margin-left:0}}#resources,#resources_search{width:calc(100% - 80px);margin:0 auto}#resources_search{padding:36px 0}#resources_search .right{text-align:right}#resources_search .right .inner_content{-ms-flex-pack:end;justify-content:flex-end}#resources_search .inner_content{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}#resources_search h3{margin:0;color:#000041;font-size:1.67em;line-height:44px;font-weight:400;text-transform:none;letter-spacing:0}#resources{padding:60px 0}#resources #resources-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#resources #resources-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#resources #resources-list .item{position:relative;width:calc(33.3333% - 27px);margin:0 0 70px 40px;z-index:10;background:#fff}#resources #resources-list .item:nth-of-type(3n+1){margin-left:0}#resources #resources-list .item>a{display:block;color:#000}#resources #resources-list .item>a:hover .top .inner{transform:translate3d(0,0,0) scale(1.1)}#resources #resources-list .item>a:hover .read_more{color:#ff6e42}#resources #resources-list .item .type_label{display:inline-block;position:absolute;left:0;top:-34px;width:120px;height:34px;line-height:34px;text-transform:uppercase;letter-spacing:1px;color:#000;font-weight:600;text-align:center;border-top-left-radius:10px;border-top-right-radius:10px;background:#fff}#resources #resources-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff;overflow:hidden}#resources #resources-list .item .top .inner{display:block;padding:0;height:230px;box-sizing:border-box;background:center top no-repeat #fff;background-size:cover;transform:translate3d(0,0,0);transition:transform .3s}#resources #resources-list .item .btm{background:0 0;z-index:11}#resources #resources-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#resources #resources-list .item .btm blockquote,#resources #resources-list .item .btm cite,#resources #resources-list .item .btm p{margin:0}#resources #resources-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}@media screen and (max-width:767px){#resources_search{width:calc(100% - 40px);padding:20px 0}#resources_search .inner_content{display:block}#resources{width:calc(100% - 40px);padding:0}#resources #resources-list{margin-top:60px}#resources #resources-list .item{width:100%;max-width:400px;margin:0 auto 70px}#resources #resources-list .item:nth-of-type(3n+1){margin-left:auto}#resources #resources-list .item .top .inner{height:260px}}@media only screen and (min-width:768px) and (max-width:1024px){#resources #resources-list .item{width:calc(50% - 20px)}#resources #resources-list .item:nth-of-type(3n+1){margin-left:40px}#resources #resources-list .item:nth-of-type(2n+1){margin-left:0}#resources #resources-list .item .top .inner{height:180px}}.archive .item,.search .item{padding:28px 0 28px 60px;border-bottom:1px solid #e8e9f3}.archive .thumb,.search .thumb{display:block;overflow:hidden;margin:0 0 10px}.archive .thumb:hover .img,.search .thumb:hover .img{transform:scale(1.05) rotate(.02deg)}.archive .img,.search .img{height:200px;min-height:200px;background:center center no-repeat #2b59c3;background-size:cover;transform-origin:center center;transition:all .3s}.archive .meta_cats,.search .meta_cats{margin:0;line-height:1.3em}.archive .list_cont,.search .list_cont{padding-left:36px}.archive .list_cont h3,.search .list_cont h3{margin:0 0 1em;font-size:1.33em;font-weight:700;text-transform:none;letter-spacing:0}.archive .list_cont h3 a,.search .list_cont h3 a{color:#ff6e42}.archive .list_cont h3 a:hover,.search .list_cont h3 a:hover{color:#000}.archive .list_cont blockquote,.archive .list_cont cite,.archive .list_cont p,.search .list_cont blockquote,.search .list_cont cite,.search .list_cont p{margin:0 0 1em}.archive .byline,.search .byline{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center;margin:0 0 1em}.archive .byline .headshot,.search .byline .headshot{width:46px;height:46px;border:1px solid #000041;margin-right:15px;border-radius:25px;overflow:hidden;background:center top no-repeat #000041;background-size:cover}.archive .byline blockquote,.archive .byline cite,.archive .byline p,.search .byline blockquote,.search .byline cite,.search .byline p{margin:0;line-height:1.3em}.archive .byline blockquote span,.archive .byline cite span,.archive .byline p span,.search .byline blockquote span,.search .byline cite span,.search .byline p span{font-weight:600}.archive .byline blockquote a,.archive .byline cite a,.archive .byline p a,.search .byline blockquote a,.search .byline cite a,.search .byline p a{color:#000;text-decoration:none}#contact_panels #contact_tabs a:hover,.archive .byline blockquote a:hover,.archive .byline cite a:hover,.archive .byline p a:hover,.search .byline blockquote a:hover,.search .byline cite a:hover,.search .byline p a:hover{color:#ff6e42}#yb_social_bar{width:100%;background:0 0;margin:0 0 30px;padding:30px 0;border-bottom:1px solid #e8e9f3;overflow:hidden;z-index:1000;transition:all .5s}.archive #yb_social_bar{padding:0;border:none}#yb_social_bar a{display:inline-block;width:16px;height:16px;margin:0 10px 0 0;background:#707070;transition:all .3s}#yb_social_bar a:hover{background:#ff6e42}#yb_social_bar a:hover img{opacity:1}#yb_social_bar .addtoany_list a,#yb_social_bar .widget .addtoany_list a{padding:0}.single-post .rp4wp-related-posts{display:none}.single-post #related h4{margin:1em 0;text-transform:none;letter-spacing:0}.single-post #related .rp4wp-related-posts{display:block}.single-post #related .rp4wp-posts-list{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start}.single-post #related .rp4wp-posts-list li{width:calc(33.3333% - 14px);margin:0 0 0 20px}.single-post #related .rp4wp-posts-list li:first-of-type{margin:0}.single-post #related .thumb{display:block;overflow:hidden;margin:0 0 10px}.single-post #related .thumb:hover .img{transform:scale(1.05) rotate(.02deg)}.single-post #related .img{height:200px;min-height:200px;background:center center no-repeat #2b59c3;background-size:cover;transform-origin:center center;transition:all .3s}.single-post #related h5{margin:0;font-weight:400}@media screen and (max-width:767px){.archive .img,.search .img,.single-post #related .img{height:260px;min-height:260px}.archive .item,.search .item{max-width:480px;margin:0 auto;padding:28px}.archive .meta_cats a,.search .meta_cats a{display:inline-block;margin:0 0 30px}.archive .list_cont,.search .list_cont{padding-left:0}#yb_social_bar{margin:0}.single-post #related .rp4wp-posts-list{display:block;width:100%;margin-bottom:80px!important}.single-post #related .rp4wp-posts-list li{width:100%;max-width:480px;margin:0 auto 40px}.single-post #related .rp4wp-posts-list li:first-of-type{margin:0 auto 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.archive .img,.search .img,.single-post #related .img{height:120px;min-height:120px}.archive .item,.search .item{padding:28px 0}.archive .list_cont,.search .list_cont{padding-left:26px}}#contact_panels #contact_tabs .tabs_wrap{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:start;align-items:flex-start;margin-bottom:30px}#contact_panels #contact_tabs .tab{-ms-flex:0 0 30%;flex:0 0 30%;border-bottom:1px solid #707070}#contact_panels #contact_tabs a{display:block;position:relative;color:#000041;font-size:1.56em;font-weight:400;line-height:2.4em;overflow:hidden;cursor:pointer;outline:0;transition:all .3s}#contact_panels #contact_tabs a:after{position:absolute;left:0;bottom:-4px;width:100%;height:4px;background:#000041;content:'';transition:all .3s}#contact_panels #contact_tabs a.active:after{transform:translateY(-4px)}#contact_panels .contact_cont{display:none;opacity:0;visibility:hidden;transition:opacity .3s}#contact_panels .contact_cont.active{display:block;opacity:1;visibility:visible}#contact_panels .contact_cont#SalesC .form_embed h2{font-size:2.33em;color:#000041;text-transform:none;margin:0 0 40px;letter-spacing:0}#contact_panels .sales_locs{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}#contact_panels .sales_locs .bucket{-ms-flex:0 0 33.333%;flex:0 0 33.333%;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}#contact_panels .sales_locs h4{margin:0;font-size:1em;letter-spacing:2px}@media screen and (max-width:767px){#contact_panels #contact_tabs .tab{-ms-flex:0 0 50%;flex:0 0 50%}#contact_panels #contact_tabs a{font-size:1em}#contact_panels .contact_cont#SalesC .form_embed h2{font-size:1.5em}#contact_panels .sales_locs{display:block}#contact_panels .sales_locs .bucket{width:100%;max-width:400px;margin:0 auto 40px}}#page.gated_landing #content{overflow:visible}#page.gated_landing #form_col{margin-top:-160px}#page.gated_landing #form_col .inner{padding:36px;border-radius:10px;background:#eef1fa}#page.gated_landing #form_col .cont{margin-top:-170px}#page.gated_landing #form_col .form_footnote{width:80%;margin:2em auto 0;font-size:.8em;text-align:center}#page.gated_landing #pre_gate_label{border-top-left-radius:10px;border-top-right-radius:10px;box-shadow:inset 0 0 0 1px #ff6e42;overflow:hidden;background:#ff6e42}#page.gated_landing #pre_gate_label.alt_bg{box-shadow:inset 0 0 0 1px #2b59c3;background:#2b59c3}#page.gated_landing #pre_gate_label h3{margin:0;padding:6px;height:calc(100% - 2px);text-align:center;color:#fff;font-weight:400;font-size:1.67em;text-transform:none;letter-spacing:0;line-height:1.27em;border-top-left-radius:10px;border-top-right-radius:10px;overflow:hidden}#page.gated_landing #pre_gate_asset{border:1px solid #fff;border-top:none}#page.gated_landing #pre_gate_asset img{display:block;width:100%}#page.gated_landing #content .gform_wrapper{padding-bottom:0;margin-bottom:0}@media screen and (max-width:767px){#page.gated_landing #cont_col{margin-bottom:180px}#page.gated_landing #form_col{margin-top:0}#page.gated_landing #form_col .cont{margin-top:-170px}}@media only screen and (min-width:768px) and (max-width:1024px){#page.gated_landing #cont_col{margin-bottom:180px}#page.gated_landing #form_col{margin-top:0}#page.gated_landing #form_col .cont{margin-top:-170px}}@media only screen and (min-width:1025px) and (max-width:1360px){#page.gated_landing .content_section_inner{width:100%}#page.gated_landing #form_col .inner{padding:36px 20px}}.ss_aag .vert_align .grid{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.ss_aag .data{padding:0 0 0 40px;border-left:1px solid #707070}.ss_aag .data .results ul{margin:50px 0 0;margin-left:0!important}.ss_aag .data .results .lg_text{margin:0;color:#ff6e42;font-size:2.22em;line-height:1.2em}.ss_aag .data .results .desc{margin:0 0 1.75em}.ss_aag .data .results.four .lg_text{line-height:1.4em;font-size:1.67em}.ss_aag .data .results.four .desc{margin:0 0 1.25em}.ss_aag .data .notes .label{color:#ff6e42}.ss_aag .data .notes ul{margin-top:50px;margin-left:0!important}.ss_aag .data .notes ul li{position:relative;margin:0 0 60px;font-size:1.22em;line-height:1.3em;color:#000}.ss_aag .data .notes ul li:after{position:absolute;left:0;top:calc(100% + 30px);width:35px;height:2px;background:#000041;content:''}.ss_aag .icon_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:start;align-items:flex-start}.ss_aag .icon_buckets .bucket{text-align:left;width:33.33%;padding:0 80px 0 0;box-sizing:border-box}.ss_aag .icon_buckets .icon{display:block;width:92px;margin:0 0 30px}.ss_aag .icon_buckets .icon img{display:block;width:100%}@media screen and (max-width:767px){.ss_aag .data .notes ul li:after,.ss_aag .data h4.lined_left:after,.ss_aag h2.lined_left:after{left:50%;transform:translateX(-50%)}.ss_aag .data .notes ul,.ss_aag .data .results ul,.ss_aag .data h4,.ss_aag .data h4.lined_left,.ss_aag h2.lined_left{text-align:center}.ss_aag .vert_align .grid{display:block}.ss_aag .data{padding:40px 0 0;border:none;border-top:1px solid #707070}.ss_aag .icon_buckets{display:block;margin:0 0 40px}.ss_aag .icon_buckets .bucket{width:80%;margin:0 auto;padding:0;text-align:center}.ss_aag .icon_buckets .icon{margin:0 auto 30px}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_aag .data .results .lg_text{font-size:2em}.ss_aag .icon_buckets .bucket{padding:0 30px 0 0}}.ss_biz_tech_results .list_col h2.lined{margin:0 0 3em}.ss_biz_tech_results .list_col h2.lined_left{margin:0 0 2.5em}.ss_biz_tech_results .list_col .inner_content{padding:0 50px 0 0}.ss_biz_tech_results .results{margin-left:0!important}.ss_biz_tech_results .results.split{column-count:2;column-gap:60px}.ss_biz_tech_results .results>li{position:relative;margin:0 0 60px;padding:0 0 0 60px}.ss_biz_tech_results .results>li:before{position:absolute;left:0;top:0;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}.ss_biz_tech_results .results>li:last-of-type{margin:0}@media screen and (max-width:767px){.ss_biz_tech_results .list_col{margin:0 0 60px}.ss_biz_tech_results .list_col h2.lined_left{text-align:center}.ss_biz_tech_results .list_col h2.lined_left:after{left:50%;transform:translateX(-50%)}.ss_biz_tech_results .list_col .inner_content{padding:0 40px}.ss_biz_tech_results .results.split{column-count:auto;column-gap:normal}}.ss_challenges .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_challenges .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.ss_challenges .icon .inner_content{width:100%;padding:0}.ss_challenges .icon img{display:block;width:100%;max-width:200px;margin:0}.ss_challenges .cont{-ms-flex-order:-1;order:-1}.ss_challenges .cont .inner{padding:0 100px 0 60px}.ss_challenges .cont .inner_content{position:relative;padding:80px;background:#eef1fa}.ss_challenges .cont .inner_content:after{position:absolute;right:-40px;top:calc(50% - 24px);width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #eef1fa;content:''}.ss_challenges .cont .inner_content ul{margin-left:0!important}.ss_challenges .cont .inner_content ul li{color:#000;margin:0 0 1.5em}@media screen and (max-width:767px){.ss_challenges .grid{display:block}.ss_challenges .icon{margin:0 0 80px}.ss_challenges .icon img{margin:0 auto}.ss_challenges .cont .inner{padding:0}.ss_challenges .cont .inner_content{padding:40px}.ss_challenges .cont .inner_content:after{position:absolute;right:calc(50% - 24px);top:-40px;border-width:0 24px 40px;border-color:transparent transparent #eef1fa}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_challenges .cont .inner{padding:0 100px 0 0}.ss_challenges .cont .inner_content{padding:40px}}.ss_cont_rows{text-align:left}.ss_cont_rows .vert_align{margin-bottom:80px}.ss_cont_rows .vert_align.last{margin:0}.ss_cont_rows .vert_align .inner{display:table;height:100%;width:100%}.ss_cont_rows .vert_align .inner_content{display:table-cell;height:100%;width:100%;vertical-align:middle}.ss_cont_rows .vert_align:last-of-type{margin-top:0}.ss_cont_rows .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.ss_cont_rows .img{-ms-flex-order:-1;order:-1}.ss_cont_rows .img.push-right{-ms-flex-order:1;order:1}.ss_cont_rows .img .vid_cont{border:1px solid #000}.ss_cont_rows .img .img_cont{display:block;min-height:300px;background:center center no-repeat #fff;background-size:cover;border:1px solid #000}.ss_cont_rows .cont .inner_content{padding:0 0 0 80px}.ss_cont_rows .cont .inner_content.flip{padding:0 80px 0 0}@media screen and (max-width:767px){.ss_cont_rows .grid{display:block}.ss_cont_rows .vert_align{margin-bottom:40px}.ss_cont_rows .cont .inner_content,.ss_cont_rows .cont .inner_content.flip{padding:0}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_cont_rows .img .img_cont{min-height:200px}.ss_cont_rows .cont .inner_content{padding:0 0 0 50px}.ss_cont_rows .cont .inner_content.flip{padding:0 50px 0 0}}.ss_db_reqs .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_db_reqs .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.ss_db_reqs .icon .inner_content{width:100%;padding:0}.ss_db_reqs .icon img{display:block;width:100%;max-width:200px;margin:0}.ss_db_reqs .cont .inner{padding:0 60px 0 100px}.ss_db_reqs .cont .inner_content{position:relative;padding:80px 100px;background:#eef1fa}.ss_db_reqs .cont .inner_content:after{position:absolute;left:-40px;top:calc(50% - 24px);width:0;height:0;border-style:solid;border-width:24px 40px 24px 0;border-color:transparent #eef1fa transparent transparent;content:''}.ss_img_cont .img,.ss_test .test_bg{position:relative}.ss_db_reqs .cont .inner_content ul{margin-left:0}.ss_db_reqs .cont .inner_content ul li{color:#000;margin:0 0 .25em}@media screen and (max-width:767px){.ss_db_reqs .grid{display:block}.ss_db_reqs .icon{margin:0 0 80px}.ss_db_reqs .icon img{margin:0 auto}.ss_db_reqs .cont .inner{padding:0}.ss_db_reqs .cont .inner_content{padding:40px 60px}.ss_db_reqs .cont .inner_content:after{left:calc(50% - 24px);top:-40px;border-width:0 24px 40px;border-color:transparent transparent #eef1fa}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_db_reqs .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.ss_db_reqs .cont .inner{padding:0 0 0 100px}.ss_db_reqs .cont .inner_content{padding:40px 60px}}.ss_img_cont h3{margin:0 0 1em;font-size:2.33em;text-transform:none;letter-spacing:0;color:#000041}.ss_img_cont h3 a{text-decoration:underline;color:#2b59c3}.ss_img_cont h3 a:hover{color:#ff6e42;text-decoration:none}.ss_img_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_img_cont .grid{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.ss_img_cont .cont .inner_content{padding:0 60px}.ss_img_cont .img .inner_content{position:relative;margin:0 auto;z-index:15}.ss_img_cont .img img{display:block;width:100%}@media screen and (max-width:767px){.ss_img_cont h3{font-size:1.25em}.ss_img_cont .grid{display:block}.ss_img_cont .cont .inner_content{padding:0}.ss_img_cont .img{margin:0 0 40px}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_img_cont h3{font-size:2em}.ss_img_cont .cont .inner_content{padding:0 0 0 40px}}.ss_tech_results .metric_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top}.ss_tech_results .metric_buckets .bucket{width:25%;padding:0 10px;box-sizing:border-box;text-align:center}.ss_tech_results .metric_buckets .lg_text{margin:0 0 .5em;font-size:3.33em;color:#000041;line-height:1;font-variant:small-caps}@media screen and (max-width:767px){.ss_tech_results .metric_buckets{-ms-flex-wrap:wrap;flex-wrap:wrap}.ss_tech_results .metric_buckets .bucket{-ms-flex:0 0 50%;flex:0 0 50%;width:auto;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}}.ss_test{padding:100px 0}.page .ss_test{padding-bottom:160px}.ss_test .test_bg{padding:100px 44px 160px;border:1px dashed #000041;background:#eef1fa}.ss_test .test_bg .cites_cont,.ss_test .test_bg:before{position:absolute;transform:translate(-50%,-50%);left:50%}.ss_test .test_bg:before{top:0;width:108px;height:108px;padding-right:15px;border-radius:60px;border:1px dashed #000041;background:#fff;font-size:6.67em;line-height:154px;text-align:center;font-style:italic;color:#000041;box-sizing:border-box;content:'“'}.ss_test .test_bg .cite,.ss_test .test_bg .quote{padding:0 56px}.ss_test .test_bg .quote.single{text-align:center}.ss_test .test_bg .quote blockquote,.ss_test .test_bg .quote cite,.ss_test .test_bg .quote p{margin:0;font-size:1.33em;line-height:1.5em;font-style:italic}.ss_test .test_bg .cites_cont{top:100%;width:calc(100% - 88px)}.ss_test .test_bg .cite .inner{padding:30px 70px;border:1px solid #000;background:#fff}.ss_test .test_bg .cite .inner_content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{-ms-flex:0 0 112px;flex:0 0 112px;width:112px;height:112px;margin:0 30px 0 0;border-radius:60px;overflow:hidden;border:2px solid #ff6e42;background:center center no-repeat #fff;background-size:cover}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{margin:0;font-weight:700}.ss_test .test_bg .cite blockquote span,.ss_test .test_bg .cite cite span,.ss_test .test_bg .cite p span{display:block;font-weight:400}@media screen and (max-width:767px){.ss_test{padding:40px 0 100px}.page .ss_test{padding-bottom:100px}.ss_test .test_bg{padding:70px 20px 120px}.ss_test .test_bg .quote{padding:0 20px}.ss_test .test_bg .quote:first-of-type{margin-bottom:40px}.ss_test .test_bg .quote blockquote,.ss_test .test_bg .quote cite,.ss_test .test_bg .quote p{font-size:1em}.ss_test .test_bg .cites_cont{width:100%}.ss_test .test_bg .cite .inner{max-width:260px;margin:10px auto;padding:10px}.ss_test .test_bg .cite .inner_content{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{-ms-flex:0 0 40px;flex:0 0 40px;width:40px;height:40px;margin:0 10px 0 0}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{-ms-flex:0 0 calc(100% - 50px);flex:0 0 calc(100% - 50px);font-size:.89em;line-height:1.2em}}@media only screen and (min-width:768px) and (max-width:1024px){.ss_test .test_bg{position:relative;padding:100px 44px 160px;border:1px dashed #000041;background:#eef1fa}.ss_test .test_bg .cites_cont,.ss_test .test_bg:before{position:absolute;left:50%;transform:translate(-50%,-50%)}.ss_test .test_bg:before{top:0;width:108px;height:108px;padding-right:15px;border-radius:60px;border:1px dashed #000041;background:#fff;font-size:6.67em;line-height:154px;text-align:center;font-style:italic;color:#000041;box-sizing:border-box;content:'“'}.ss_test .test_bg .cite,.ss_test .test_bg .quote{padding:0 20px}.ss_test .test_bg .quote.single{text-align:center}.ss_test .test_bg .quote blockquote,.ss_test .test_bg .quote cite,.ss_test .test_bg .quote p{margin:0;font-size:1.33em;line-height:1.5em;font-style:italic}.ss_test .test_bg .cites_cont{top:100%;width:calc(100% - 88px)}.ss_test .test_bg .cite .inner{padding:20px;border:1px solid #000;background:#fff}.ss_test .test_bg .cite .inner_content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{-ms-flex:0 0 80px;flex:0 0 80px;width:80px;height:80px;margin:0 20px 0 0}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{-ms-flex:1 0 calc(100% - 100px);flex:1 0 calc(100% - 100px)}}h1,h2,h3,h4,h5,h6{line-height:1.25em;font-family:"Source Sans Pro",sans-serif}.ss_yb_solution h2.lined{margin-bottom:2em}.ss_yb_solution .icon_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:start;align-items:flex-start}.ss_yb_solution .icon_buckets .bucket{-ms-flex:1 0 25%;flex:1 0 25%;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch;padding:0 10px;box-sizing:border-box;text-align:center}.ss_yb_solution .icon_buckets .icon{display:-ms-flexbox;display:flex;width:112px;height:112px;margin:0 auto 20px}.ss_yb_solution .icon_buckets .icon img{display:block;width:100%}@media screen and (max-width:767px){.ss_yb_solution .icon_buckets{-ms-flex-wrap:wrap;flex-wrap:wrap}.ss_yb_solution .icon_buckets .bucket{-ms-flex:0 0 50%;flex:0 0 50%;width:auto;-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}}* ::selection{background:#ff6e42}hr{height:1px;background:#2b59c3;border:none;margin:24px 0}a{text-decoration:none;transition:all .3s;color:#2b59c3}a:hover{color:#ff6e42}h1,h2,h3,h4,h5,h6{margin:0 0 .5em;font-weight:400;color:#2b59c3}h1.large_margin,h2.large_margin,h3.large_margin,h4.large_margin,h5.large_margin,h6.large_margin{margin:0 0 1em}h1{font-family:"Source Sans Pro",sans-serif;font-size:3.89em;line-height:1.05em}h1.midlong{font-size:2.78em}h1.long{font-size:2.22em}#hero_ss h1{font-size:1.78em;line-height:1.375em}h2{font-size:2em;font-weight:400;color:#ff6e42;text-transform:uppercase;letter-spacing:4px}.read_more,h4{font-weight:600}h2.large_purple{font-size:2.33em;letter-spacing:0;text-transform:none;color:#000041}h2.lined,h2.lined_left{position:relative;margin-bottom:1.5em}h2.lined:after,h2.lined_left:after{position:absolute;left:50%;top:calc(100% + 20px);width:75px;height:2px;background:#000041;content:'';transform:translateX(-50%)}h2.lined.alt,h2.lined_left.alt{margin:0 0 .75em;text-transform:none;letter-spacing:0;color:#fff}h2.lined.alt:after,h2.lined_left.alt:after{background:#fff}h3.lined:after,h3.lined_left:after,h4.lined:after,h4.lined_left:after{width:75px;height:2px;background:#000041;content:''}h2.lined_left:after{left:0;transform:none}h2.title_case{text-transform:none!important;letter-spacing:0!important}h3{color:#ff6e42;font-size:1.5em;text-transform:uppercase;letter-spacing:3px}h3.lined,h3.lined_left{position:relative;margin-bottom:1.5em}h3.lined:after,h3.lined_left:after{position:absolute;left:50%;top:calc(100% + 20px);transform:translateX(-50%)}h3.lined_left:after{left:0;transform:none}h3.title_case{text-transform:none!important;letter-spacing:0!important}h4{margin:0 0 .5em;color:#000;font-family:"Source Sans Pro",sans-serif;font-size:1.22em;line-height:1.45em;text-transform:uppercase;letter-spacing:3px}b,h5,strong{font-weight:700}h4.lined,h4.lined_left{position:relative;margin-bottom:1.5em}h5,h6{margin:0;font-size:1em}h4.lined:after,h4.lined_left:after{position:absolute;left:50%;top:calc(100% + 12px);transform:translateX(-50%)}h4.lined_left:after{left:0;transform:none}h4.checkmark{position:relative;padding:0 0 0 60px}h4.checkmark:before{position:absolute;left:0;top:-5px;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}h4.title_case{text-transform:none!important;letter-spacing:0!important}h5{}sub,sup{vertical-align:baseline;position:relative;top:-.55em;line-height:0;font-size:60%}sub{top:.55em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg p{font-size:1em}.wysiwyg blockquote .btn,.wysiwyg cite .btn,.wysiwyg p .btn{margin-bottom:0!important}.wysiwyg ol,.wysiwyg ul{margin:1em 0 1.56em 20px;list-style:decimal}.wysiwyg ul{padding:0;list-style:disc}.wysiwyg ol li,.wysiwyg ul li{display:list-item;margin-bottom:.25em;font-size:1em;line-height:1.45em;color:#707070}.wysiwyg ol li{list-style:decimal}.wysiwyg ul li{position:relative;list-style:none}.wysiwyg ul li:before{position:absolute;left:-20px;top:.5em;width:8px;height:8px;content:'';border-radius:4px;background:#2b59c3}.single-post #content ul li,blockquote{position:relative}.wysiwyg a{text-decoration:underline;color:#2b59c3}.wysiwyg a:hover{color:#ff6e42}.wysiwyg .btn a:hover,.wysiwyg a.btn:hover{color:#fff}.wysiwyg blockquote:last-of-type span.intro,.wysiwyg cite:last-of-type span.intro,.wysiwyg p:last-of-type span.intro,.wysiwyg.plast blockquote:last-of-type,.wysiwyg.plast cite:last-of-type,.wysiwyg.plast p:last-of-type{margin:0}.wysiwyg.plast blockquote:first-of-type,.wysiwyg.plast cite:first-of-type,.wysiwyg.plast p:first-of-type{margin-bottom:1.56em}.wysiwyg.plast blockquote:only-of-type,.wysiwyg.plast cite:only-of-type,.wysiwyg.plast p:only-of-type{margin:0}.wysiwyg #iubenda_policy ul li:before{display:none}.single-post #content ol,.single-post #content ul{margin:1em 0 1.56em 20px;list-style:decimal}.single-post #content ul{padding:0;list-style:disc}.single-post #content ol li,.single-post #content ul li{display:list-item;margin-bottom:.25em;font-size:1em;line-height:1.45em;color:#000}.single-post #content ol li{list-style:decimal}.single-post #content ul li:before{display:none}.wysiwyg .special_ol li,ol li{display:block}blockquote,cite,p,p.cite{margin-bottom:1.56em;line-height:1.56em}blockquote b,blockquote strong,cite b,cite strong,p b,p strong,p.cite b,p.cite strong{font-family:"Source Sans Pro",sans-serif}blockquote.footnote,cite.footnote,p.footnote{font-size:.8em;font-style:italic}blockquote,blockquote.cite,cite,cite.cite,p.cite{font-size:1.4em;line-height:1.5em;font-style:italic;color:#000}em,i{font-style:italic}blockquote{font-weight:400;margin:0 0 2em;padding:0;border:none;text-align:left}blockquote blockquote,blockquote cite,blockquote p,blockquote p.cite{margin:0}.wysiwyg blockquote{margin:0 0 2em;padding:0}blockquote.cite,cite,cite.cite,p.cite{font-weight:700;margin-bottom:1.56em}.wysiwyg blockquote.cite,.wysiwyg cite,.wysiwyg cite.cite,.wysiwyg p.cite{margin:0}.wysiwyg .special_ol>li:before,ol>li:before{content:counters(item,".") ". ";margin-right:100%;right:10px}blockquote.cite span,cite span,cite.cite span,p.cite span{display:block;font-weight:400}img{vertical-align:bottom}.wysiwyg img{max-width:100%;height:auto}.screen-reader-text{clip:rect(1px,1px,1px,1px);position:absolute;top:10px;left:10px;font-family:"Source Sans Pro",sans-serif;font-size:.89em;font-weight:400;color:#2b59c3;z-index:10000;opacity:0;transition:opacity .2s}.play_btn,.play_btn:after,.read_more{transition:all .3s}.site-navigation .screen-reader-text{left:auto;right:10px}.screen-reader-text:focus{clip:auto;opacity:1}.wysiwyg .tab_indent_wrap{padding-left:36px}.wysiwyg .special_ol>li{position:relative;counter-increment:item}.wysiwyg .special_ol>li:before{position:absolute}ol>li{counter-increment:item;position:relative}ol>li:before{position:absolute}#iubenda_policy hr{border-color:#2b59c3;background:0 0}@media screen and (max-width:767px){h2,h3,h4{letter-spacing:1px}h2 br,h3 br,h4 br,h5 br,h6 br{display:none}h1{font-size:1.5em}h1.midlong{font-size:1.25em}h1.long{font-size:1.1em}#hero_ss h1,h2,h3{font-size:1.25em}h4{font-size:1.15em}blockquote.cite,cite,cite.cite,p.cite{font-size:1em}}@media screen and (min-width:768px) and (max-width:1024px){h2,h3{letter-spacing:2px}h1{font-size:3.5em}h1.midlong{font-size:3.25em}h1.long{font-size:2.75em}#hero_ss h1,h2{font-size:1.5em}h3{font-size:1.25em}}@media print{@page{margin:.5in}*{-webkit-print-color-adjust:exact;print-color-adjust:exact;outline:0}body,html{color:#000!important;background:#fff!important;width:7.5in!important;overflow:hidden;margin:0;padding:0}.bg-img,blockquote,img,pre,table{page-break-inside:avoid}dl,ol,ul{page-break-before:avoid}}.btn a,.wp-block-button__link,a span.btn,a.btn,button.btn,button.gpnf-add-entry,input[type=image],input[type=submit],input[type=button]{display:inline-block;position:relative;margin:0 0 1.67em;padding:10px 20px;width:auto;background:#ff6e42!important;font-family:"Source Sans Pro",sans-serif;font-size:1.25em;font-weight:600;font-style:normal;line-height:1.4em!important;color:#fff!important;border:2px solid #ff6e42;border-radius:100px;text-decoration:none!important;text-transform:none;box-sizing:border-box;text-align:center;-webkit-appearance:none;transition:all .3s;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none}.btn a.offset,.wp-block-button__link.offset,a span.btn.offset,a.btn.offset,button.btn.offset,button.gpnf-add-entry.offset,input[type=image].offset,input[type=submit].offset,input[type=button].offset{margin-left:20px}.btn a.outline,.wp-block-button__link.outline,a span.btn.outline,a.btn.outline,button.btn.outline,button.gpnf-add-entry.outline,input[type=image].outline,input[type=submit].outline,input[type=button].outline{background:0 0!important;color:#ff6e42!important}.btn a.small,.wp-block-button__link.small,a span.btn.small,a.btn.small,button.btn.small,button.gpnf-add-entry.small,input[type=image].small,input[type=submit].small,input[type=button].small{padding:5px 10px;font-size:.9em}.btn a.small.sq,.wp-block-button__link.small.sq,a span.btn.small.sq,a.btn.small.sq,button.btn.small.sq,button.gpnf-add-entry.small.sq,input[type=image].small.sq,input[type=submit].small.sq,input[type=button].small.sq{padding:10px 40px 10px 15px}.btn a.small.sq:after,.wp-block-button__link.small.sq:after,a span.btn.small.sq:after,a.btn.small.sq:after,button.btn.small.sq:after,button.gpnf-add-entry.small.sq:after,input[type=image].small.sq:after,input[type=submit].small.sq:after,input[type=button].small.sq:after{right:15px;top:calc(50% + 1px)}.btn a.sq,.wp-block-button__link.sq,a span.btn.sq,a.btn.sq,button.btn.sq,button.gpnf-add-entry.sq,input[type=image].sq,input[type=submit].sq,input[type=button].sq{padding-right:40px;border-radius:0;border:2px solid #000041;background:0 0!important;color:#000041!important}.btn a.sq:after,.wp-block-button__link.sq:after,a span.btn.sq:after,a.btn.sq:after,button.btn.sq:after,button.gpnf-add-entry.sq:after,input[type=image].sq:after,input[type=submit].sq:after,input[type=button].sq:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%)}.btn a.sq:hover,.wp-block-button__link.sq:hover,a span.btn.sq:hover,a.btn.sq:hover,button.btn.sq:hover,button.gpnf-add-entry.sq:hover,input[type=image].sq:hover,input[type=submit].sq:hover,input[type=button].sq:hover{background:#000041!important;color:#ff6e42!important;border-color:#000041!important}.btn a:hover,.wp-block-button__link:hover,a span.btn:hover,a.btn:hover,button.btn:hover,button.gpnf-add-entry:hover,input[type=image]:hover,input[type=submit]:hover,input[type=button]:hover{color:#fff!important;border-color:#2b59c3!important;background:#2b59c3!important;text-decoration:none!important}input[type=submit]:focus,input[type=button]:focus{outline:0}.btn a.disabled,.btn a.disabled:hover,.wp-block-button__link.disabled,.wp-block-button__link.disabled:hover,a.btn.disabled,a.btn.disabled:hover,button.btn:disabled,button.btn:disabled:hover,button.gpnf-add-entry:disabled,button.gpnf-add-entry:disabled:hover,input[type=image]:disabled,input[type=image]:disabled:hover,input[type=submit]:disabled,input[type=submit]:disabled:hover,input[type=button]:disabled,input[type=button]:disabled:hover{cursor:default;color:#fff!important;background:#eef1fa!important;border-color:#eef1fa!important}.play_btn{display:block;position:absolute;left:50%;top:50%;margin:-48px 0 0 -48px;width:96px;height:96px;border-radius:48px;background:rgba(255,255,255,.8);opacity:1;visibility:visible;z-index:20;cursor:pointer}.play_btn.off,.slick-loading .slick-slide,.slick-loading .slick-track{visibility:hidden}.play_btn:after{position:absolute;left:23px;top:29px;margin:0;width:46px;height:38px;line-height:38px;text-align:center;color:#ff6e42;font-family:dashicons;content:'\f522';font-size:58px}.play_btn:hover{background:#fff}.play_btn:hover:after{color:#2b59c3}.play_btn.off{opacity:0}#header_cta,#header_cta_mobile{float:right;margin:18px 0 0 48px;padding:3px 15px;line-height:33px!important}#header_cta_mobile{float:left;margin:18px 0 0}.read_more{display:inline-block;position:relative;padding-right:40px;text-decoration:none;font-size:1.67em;line-height:1.333em;color:#000041}.read_more:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%)}.wp-block-buttons{width:100%;max-width:1360px;margin-right:auto;margin-left:auto}.wp-block-buttons .wp-block-button{margin-bottom:0;margin-right:20px}.wp-block-buttons .wp-block-button:last-child{margin-right:0}.wp-block-button__link{border-radius:0}@media screen and (max-width:990px){#header_cta{display:none}#header_cta_mobile{display:inline-block}}@media screen and (max-width:767px){.btn a,.wp-block-button__link,a span.btn,a.btn,button.btn,button.gpnf-add-entry,input[type=image],input[type=submit],input[type=button]{padding:6px 10px;font-size:1em}.play_btn{margin:-30px 0 0 -30px;width:60px;height:60px;border-radius:30px}.play_btn:after{left:13px;top:17px;width:30px;height:26px;line-height:26px;font-size:40px}.read_more{font-size:1em}}@media only screen and (min-width:991px) and (max-width:1360px){#header_cta{margin-left:18px}}#search_container,#search_container_mobile{float:right;width:220px;height:40px;margin:18px 0 0;border-radius:50px;border:1px solid #fff}#search_container form.search-form,#search_container_mobile form.search-form{width:100%;height:100%}#search_container label,#search_container_mobile label{float:left;width:calc(100% - 40px);height:100%;border-radius:50px;overflow:hidden}#search_container label input.search-field,#search_container_mobile label input.search-field{width:100%;height:100%;border:none;margin:0;padding:0 15px;box-sizing:border-box;font-size:.8em;font-weight:400;line-height:40px;background:0 0;color:#fff;-webkit-appearance:none}#search_container label input.search-field::-webkit-search-cancel-button,#search_container_mobile label input.search-field::-webkit-search-cancel-button{-webkit-appearance:none}#search_container label input.search-field::-ms-clear,#search_container_mobile label input.search-field::-ms-clear{display:none}#search_container button[type=submit]:focus,#search_container input:focus,#search_container_mobile button[type=submit]:focus,#search_container_mobile input:focus{outline:0}#search_container .search-submit,#search_container_mobile .search-submit{float:right;position:relative;width:40px;height:40px;margin:0;padding:0;border:none;box-shadow:none;background:0 0;text-indent:-9999px;overflow:hidden;cursor:pointer;border-radius:0 20px 20px 0}table td,table th,table tr{border-left:1px solid #707070}table td,table th,table tr:nth-child(even) td{background:#eef1fa}#search_container .search-submit:focus,#search_container_mobile .search-submit:focus{outline:0}#search_container .search-submit svg,#search_container_mobile .search-submit svg{display:block;position:absolute;left:10px;top:7px;width:20px;transition:all .2s}#search_container .search-submit svg #search-mag-glass,#search_container_mobile .search-submit svg #search-mag-glass{transition:all .2s;fill:#fff}#search_container .search-submit:hover svg #search-mag-glass,#search_container_mobile .search-submit:hover svg #search-mag-glass{fill:#ff6e42}#search_container ::-webkit-input-placeholder,#search_container_mobile ::-webkit-input-placeholder{color:#fff}#search_container :-moz-placeholder,#search_container_mobile :-moz-placeholder{color:#fff}#search_container ::-moz-placeholder,#search_container_mobile ::-moz-placeholder{color:#fff}#search_container :-ms-input-placeholder,#search_container_mobile :-ms-input-placeholder{color:#fff}#search_container_mobile{display:none;float:left;margin-left:20px}@media screen and (max-width:990px){#search_container{display:none}#search_container_mobile{display:block;width:160px}}@media screen and (min-width:991px) and (max-width:1260px){#search_container{width:calc(100% - 140px)}}table{border-collapse:collapse;border-spacing:0;width:100%;margin:1em 0;border:1px solid #707070;border-top:none;table-layout:auto}table td,table th{padding:1em}table th{background:#fff}table tr{border-top:1px solid #707070}table td:first-of-type{width:40%!important}.narrow_table table td:first-of-type{width:55%!important}.wysiwyg table{border:1px solid #eef1fa;border-top:none;table-layout:auto}.wysiwyg table td,.wysiwyg table th{border-left:1px solid #eef1fa;padding:1em;background:#fff}.wysiwyg table td:first-of-type,.wysiwyg table th:first-of-type{width:auto!important}.wysiwyg table tr{border-top:1px solid #eef1fa;border-left:1px solid #eef1fa}.wysiwyg table tr:nth-child(even) td{background:#fff}.wysiwyg table tr:first-of-type td{background:#eef1fa;font-weight:700;text-transform:uppercase}.wptb-shortcode-container.wptb-ph-element{position:absolute;top:0;right:0;bottom:0;left:0}.wptb-shortcode-container.wptb-ph-element wptb_shortcode_container_element>div{height:100%;width:100%}.content_section.ybtable .wptb-table-container{margin-bottom:20px}.content_section.ybtable .wptb-image-wrapper img{width:auto!important;display:block;margin:0 auto}.content_section.ybtable .table_footnote{margin:0 auto;width:70%;text-align:center}.info_tip{position:absolute;right:10px;top:50%;width:22px;height:22px;border-radius:11px;margin-top:-10px;background:url(../../images/info-tip-icon.svg) center center no-repeat #fff;background-size:cover;z-index:10}.info_tip:hover .tip{display:block}.info_tip .tip{display:none;position:absolute;left:calc(100% + 5px);top:-30px;width:400px;height:auto;border:1px solid #707070;background:#fff;z-index:10000}.pagination,ul.alm-paging{z-index:1;list-style:none}.info_tip .tip .inner{display:block;padding:18px 24px;color:#000;line-height:1.45em;font-size:.9em}@media screen and (max-width:767px){.content_section.ybtable .table_footnote{width:90%}.content_section.ybtable .wptb-table-container-matrix{overflow-y:scroll!important}.info_tip:hover .tip{display:none}.info_tip.showtip .tip{display:block}.info_tip .tip{width:200px;height:auto}}.widget{margin:0 0 20px;background:#eef1fa;border-radius:10px;overflow:hidden}.widget .inner{padding:30px 20px}.widget.widget_pplrpsts_popular_posts_widget .widget-title{position:relative;margin-bottom:2.5em;font-size:1.22em;font-weight:600}.widget.widget_pplrpsts_popular_posts_widget .widget-title:after{position:absolute;left:0;top:calc(100% + 20px);width:75px;height:2px;background:#000041;content:''}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts article{padding:0;border-top:1px solid #e8e9f3}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts article:first-of-type{border:none}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts h4{margin:0;font-size:1em;font-weight:400;text-transform:none;letter-spacing:0}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts h4 a{display:block;padding:10px 0;color:#141920}.widget.widget_pplrpsts_popular_posts_widget .rltdpstsplgn-popular-posts h4 a:hover{color:#ff6e42}.widget.widget_search{margin:0 0 30px!important}.widget.widget_search form.search-form{width:100%;height:40px;border-radius:50px;background:#fff;overflow:hidden}.widget.widget_search label{float:left;width:calc(100% - 40px);height:100%}.widget.widget_search label input.search-field{width:100%;height:40px;border:none;margin:0;padding:0 15px;box-sizing:border-box;font-size:.8em;font-weight:400;line-height:40px;background:0 0;color:#000;-webkit-appearance:none}.widget.widget_search label input.search-field::-webkit-search-cancel-button{-webkit-appearance:none}.widget.widget_search label input.search-field::-ms-clear{display:none}.widget.widget_search button[type=submit]:focus,.widget.widget_search input:focus{outline:0}.widget.widget_search .search-submit{float:right;position:relative;width:40px;height:40px;margin:0;padding:0;border:none;box-shadow:none;background:0 0;text-indent:-9999px;overflow:hidden;cursor:pointer;border-radius:0 20px 20px 0}.widget.widget_search .search-submit:focus{outline:0}.widget.widget_search .search-submit svg{display:block;position:absolute;left:10px;top:7px;width:20px;transition:all .2s}.widget.widget_search .search-submit svg #search-mag-glass{transition:all .2s;fill:#000}.widget.widget_search .search-submit:hover svg #search-mag-glass{fill:#ff6e42}.widget.widget_search ::-webkit-input-placeholder{color:#000}.widget.widget_search :-moz-placeholder{color:#000}.widget.widget_search ::-moz-placeholder{color:#000}.widget.widget_search :-ms-input-placeholder{color:#000}.widget_wrap{margin:30px 0;padding:30px 20px;background:#eef1fa;border-radius:10px;overflow:hidden}.widget_wrap .widget{margin:0 0 20px;background:0 0;border-radius:0}.blog_ctas .widget .inner{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center}.blog_ctas .widget .inner .icon{width:45%;height:100px;background:center center no-repeat;background-size:auto 50%}.blog_ctas .widget .inner h3{width:55%;font-size:1.22em;line-height:1.3em;color:#000041;font-weight:600;text-transform:none;letter-spacing:0}.blog_ctas .widget .inner h3 span{color:#ff6e42}@media only screen and (min-width:768px) and (max-width:1024px){.blog_ctas .widget .inner{display:block}.blog_ctas .widget .inner .icon{width:100%;margin:0 auto 20px;height:70px;background-size:auto 100%}.blog_ctas .widget .inner h3{width:100%}}.paging-navigation{text-align:center}.pagination{position:relative;display:inline-block;text-align:center;margin:0 auto;padding:48px 60px}.pagination:after,.pagination:before{position:absolute;left:0;top:50%;transform:translateY(-50%);width:40px;height:9px;background:url(../../images/pagination-arrow.svg) center center no-repeat;content:''}.pagination:after{left:auto;right:0;transform:translateY(-50%) rotate(180deg)}.pagination .page-numbers{display:inline-block;width:48px;height:48px;margin:0 10px;padding:13px 5px;box-sizing:border-box;border-radius:50px;color:#000;font-size:22px;line-height:22px;font-weight:600;border:1px solid #707070;border:none;box-shadow:inset 0 0 0 1px #707070;background:#f2f3f8;text-decoration:none;transition:all .3s ease}.pagination .page-numbers:focus,.pagination .page-numbers:hover{color:#222;background-color:#fff;box-shadow:inset 0 0 0 2px #ff6e42}.pagination .page-numbers:active{background-color:#fff;box-shadow:inset 0 0 0 2px #ff6e42}.pagination .page-numbers.current{background:#fff;box-shadow:inset 0 0 0 2px #ff6e42;color:#000;cursor:default;text-decoration:none}.pagination .page-numbers.dots{background:0 0;box-shadow:none;padding-right:0;padding-left:0;width:20px}.pagination .page-numbers.next,.pagination .page-numbers.prev{width:100px;font-size:18px;font-weight:400}ul.alm-paging{position:relative;display:inline-block;text-align:center;margin:0 auto;padding:48px 60px;opacity:0}ul.alm-paging:after,ul.alm-paging:before{position:absolute;left:0;top:50%;transform:translateY(-50%);width:40px;height:9px;background:url(../../images/pagination-arrow.svg) center center no-repeat;content:''}.alm-paging-wrap .alm-reveal,ul.alm-paging>li{position:relative}ul.alm-paging:after{left:auto;right:0;transform:translateY(-50%) rotate(180deg)}ul.alm-paging.empty{display:none}ul.alm-paging>li{background:0 0;overflow:hidden;list-style:none;padding:0;margin:0 10px;line-height:1;display:inline-block;vertical-align:top;font-size:1em}ul.alm-paging>li:after,ul.alm-paging>li:before{content:none}ul.alm-paging>li a{display:block;width:100px;height:48px;padding:15px;box-sizing:border-box;border-radius:50px;color:#000;font-weight:400;border:1px solid #707070;border:none;box-shadow:inset 0 0 0 1px #707070;background:#f2f3f8;text-decoration:none;transition:all .3s ease}ul.alm-paging>li a:active,ul.alm-paging>li a:focus,ul.alm-paging>li a:hover{background-color:#fff;box-shadow:inset 0 0 0 2px #ff6e42}ul.alm-paging>li a:focus,ul.alm-paging>li a:hover{color:#222}ul.alm-paging>li.num a{width:48px;font-size:22px;padding:13px 15px;font-weight:600}ul.alm-paging>li.disabled a{cursor:default!important;opacity:.3}ul.alm-paging>li.disabled a:focus,ul.alm-paging>li.disabled a:hover{color:#222;background-color:#f2f3f8;box-shadow:inset 0 0 0 1px #707070}ul.alm-paging>li.active a{background:#fff;box-shadow:inset 0 0 0 2px #ff6e42;color:#000;cursor:default;text-decoration:none}.ajax-load-more-wrap .alm-paging-content{transition:all .25s ease}.ajax-load-more-wrap.alm-loading .alm-paging-content{opacity:.5!important}.ajax-load-more-wrap.alm-paging.alm-is-filtering,.alm-paging-wrap .alm-paging-loading{background-color:rgba(255,255,255,.1);background-image:url(../../images/loading.svg);background-repeat:no-repeat;background-position:center center}.ajax-load-more-wrap.alm-loading .ajax-load-more-wrap.alm-is-filtering,.ajax-load-more-wrap.alm-loading.alm-paging .alm-paging-wrap{min-height:150px}.ajax-load-more-wrap.alm-is-filtering{background-color:transparent}.alm-paging-wrap .alm-paging-loading{display:block;opacity:0;visibility:hidden;position:absolute;top:0;left:0;width:100%;height:100%;z-index:9999;transition:all .25s ease}.alm-loading .alm-paging-wrap .alm-paging-loading{visibility:visible;opacity:1}@media screen and (max-width:767px){.pagination{padding:48px 30px;width:100%;box-sizing:border-box}.pagination:after,.pagination:before{width:20px;height:9px;background-size:100% auto}.pagination .page-numbers{display:inline-block;width:36px;height:36px;margin:0;padding:10px 5px;font-size:16px;line-height:16px}.pagination .page-numbers.next,.pagination .page-numbers.prev{width:80px;font-size:16px}ul.alm-paging{padding:48px 30px}ul.alm-paging:after,ul.alm-paging:before{width:20px;height:9px;background-size:100% auto}ul.alm-paging>li{margin:0 2px}ul.alm-paging>li a{width:80px;height:36px;padding:10px}ul.alm-paging>li.num a{width:36px;font-size:16px;padding:10px}}#hero_alt{position:relative;height:290px;min-height:290px;background-color:#2b59c3;background-repeat:no-repeat;background-position:center center;background-size:cover;z-index:15}#hero_alt.blog h1,#hero_alt.error h1,#hero_alt.search h1{width:70%;color:#fff;text-transform:none;letter-spacing:1px}#hero h1,#hero_alt h1{text-transform:uppercase}#hero_alt.blog .inner,#hero_alt.error .inner,#hero_alt.search .inner{position:absolute;left:60px;top:50%;width:calc(100% - 120px);max-width:none;transform:translateY(-50%)}#hero_alt .byline{display:-ms-flexbox;display:flex;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center;margin:1.5em 0 0}#hero_alt .byline .headshot{width:46px;height:46px;border:1px solid #000041;margin-right:15px;border-radius:25px;overflow:hidden;background:center top no-repeat #000041;background-size:cover}#hero_alt .byline blockquote,#hero_alt .byline cite,#hero_alt .byline p{margin:0;line-height:1.3em;color:#fff}#hero_alt .byline blockquote span,#hero_alt .byline cite span,#hero_alt .byline p span{font-weight:600}#hero_alt .byline blockquote a,#hero_alt .byline cite a,#hero_alt .byline p a{color:#fff;text-decoration:none}#hero_alt .byline blockquote a:hover,#hero_alt .byline cite a:hover,#hero_alt .byline p a:hover{color:#fff}#hero_alt.grad_orange_purpledark{background:#000041;background:linear-gradient(30deg,#ff6e42 0,#741782 50%,#000041 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff6e42', endColorstr='#000041', GradientType=1 )}#hero_alt.grad-dkpurple-blue{background:#000041;background:linear-gradient(45deg,#000041 0,#2b59c3 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#000041', endColorstr='#2b59c3', GradientType=1 )}#hero,#hero_gated{background-position:center center;background-size:cover}#hero,#hero_gated,#hero_ss{background-color:#000041;background-repeat:no-repeat}#hero_alt:before{position:absolute;top:0;right:0;bottom:0;left:0;content:'';z-index:-1}#hero_alt .content_section_inner{position:relative;width:calc(100% - 80px);max-width:1360px;height:100%;min-height:290px;z-index:10;text-align:left}#hero_alt .inner{position:absolute;left:50%;top:50%;width:70%;max-width:900px;transform:translate(-50%,-50%)}#hero_alt h1{display:block;width:50%;margin-bottom:0;font-size:2em;line-height:1.11em;font-family:"Source Sans Pro",sans-serif;font-weight:400;color:#ff6e42;letter-spacing:4px}#hero_alt .subheading{margin:0;font-size:1.22em;color:#fff}#hero h1,#hero_gated blockquote a,#hero_gated cite a,#hero_gated p a{color:#ff6e42}#hero_gated{position:relative;z-index:auto}#hero_gated .content_section_inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;position:relative;height:100%;padding:0;z-index:10}#hero_gated .inner{position:static;-ms-flex:0 0 100%;flex:0 0 100%;padding:60px 0}#hero_gated .logo{display:block;width:40%;max-width:220px;margin:0 0 80px 20px}#hero_gated h1{position:relative;display:inline-block;margin:0 0 20px;padding:20px;font-size:3.333em;font-weight:600;letter-spacing:.1em;color:#fff;border:2px solid #fff}#hero_gated blockquote,#hero_gated cite,#hero_gated p{padding-left:20px;color:#fff;font-size:1.333em;line-height:1.3em;font-weight:600}#hero_gated blockquote.tagline,#hero_gated cite.tagline,#hero_gated p.tagline{margin:0 0 .75em;text-transform:uppercase;color:#ff6e42;letter-spacing:3px}#hero_gated blockquote.subheading,#hero_gated cite.subheading,#hero_gated p.subheading{margin:0}#hero_gated blockquote a:hover,#hero_gated cite a:hover,#hero_gated p a:hover{color:#2b59c3}#hero{position:relative;z-index:15}#hero .content_section_inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;position:relative;width:calc(100% - 80px);max-width:1360px;height:100%;padding:0;z-index:10;text-align:center}#hero .inner{position:static;-ms-flex:0 0 70%;flex:0 0 70%;padding:60px 0}#hero h1:after,#hero h1:before{position:absolute;background:#fff;content:'';left:50%}#hero .jumbotron{margin:0}#hero .jumbotron .inner{-ms-flex:0 0 auto;flex:0 0 auto;padding:0;box-sizing:border-box}#hero h1{position:relative;display:inline-block;margin:0 0 120px;padding:10px 20px;font-size:3.5em;font-weight:400;letter-spacing:.1em;border:2px solid #fff}.home #hero h1{margin:0 0 .75em;padding:0;border:none;font-size:3em;line-height:1.3em;color:#fff;font-weight:700;text-transform:none;letter-spacing:0}.home #hero h1:after,.home #hero h1:before{display:none}#hero h1:before{top:100%;margin-left:-1px;width:2px;height:90px}#hero h1:after{top:calc(100% + 90px);margin-left:-6px;width:12px;height:12px;border-radius:6px}#hero blockquote,#hero cite,#hero p{font-size:1.1em;color:#fff}#hero blockquote.subheading,#hero cite.subheading,#hero p.subheading{margin:0}#hero blockquote a,#hero cite a,#hero p a{color:#ff6e42}#hero blockquote a:hover,#hero cite a:hover,#hero p a:hover{color:#2b59c3}#hero .cta_group{margin-top:30px}#hero .cta_group .btn{margin:0 0 0 40px}#hero .cta_group .btn:first-of-type{margin:0}#hero .post_note{margin:.75em 0 0}#hero .post_note a{color:#fff;font-weight:700}#hero .post_note a:hover{color:#ff6e42}#latest_news{border-top:1px solid #707070}#latest_news .content_section_inner{padding:0;text-align:center}#latest_news .ln_wrap{display:-ms-flexbox;display:flex;width:90%;margin:0 auto;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}#latest_news .ln_label{display:block;margin:0;padding:30px 20px 30px 0;font-size:1.22em;text-transform:uppercase;color:#ff6e42;text-align:right}#latest_news .ln_link{display:block;position:relative;margin:0;padding:30px 30px 30px 0;font-size:1.22em;line-height:1.15em;text-decoration:none;color:#fff}#latest_news .ln_link:after{position:absolute;right:10px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%);transition:all .3s}#latest_news .ln_link:hover{color:#ff6e42}#latest_news .ln_link:hover:after{right:0}#alert_bar{border-top:1px solid #707070}#alert_bar .content_section_inner{padding:0;text-align:center}#alert_bar .alert_bar_wrap{width:50%;margin:0 auto;padding:30px 0;text-align:center}#alert_bar .alert_bar_wrap *{color:#fff}#alert_bar .alert_bar_wrap a,#alert_bar .alert_bar_wrap a:hover,#hero_ss blockquote a,#hero_ss cite a,#hero_ss p a{color:#ff6e42}#hero_ss{position:relative;height:520px;min-height:520px;background-position:right center;background-size:auto 100%;z-index:15}#hero_ss .content_section_inner{position:relative;height:100%;min-height:520px;padding:0;z-index:10;text-align:left}#hero_ss .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:left;justify-content:left;width:60%;height:100%}#hero_ss .ss_logo{display:block;margin:0 0 2em;max-width:225px}#hero_ss h1{margin:0 0 2em;color:#fff}#hero_ss blockquote,#hero_ss cite,#hero_ss p{font-size:1.1em;color:#fff}#hero_ss blockquote a:hover,#hero_ss cite a:hover,#hero_ss p a:hover{color:#2b59c3}#hero_ss .cta_group .btn{margin:0 0 0 40px}#hero_ss .cta_group .btn:first-of-type{margin:0}@media screen and (max-width:767px){#hero_alt.blog h1,#hero_alt.search h1{width:100%}#hero_alt.blog .inner,#hero_alt.search .inner{left:0;width:100%}#hero_alt .content_section_inner{width:calc(100% - 40px)}#hero_alt .inner{width:100%}#hero_alt h1{width:100%;font-size:1.5em}#hero_gated .content_section_inner{padding:0 20px}#hero_gated .logo{width:80%}#hero_gated h1{font-size:2.25em}#hero_gated blockquote,#hero_gated cite,#hero_gated p{font-size:1em}#hero .content_section_inner{width:calc(100% - 40px)}#hero .inner{-ms-flex:0 0 100%;flex:0 0 100%}#hero h1{margin:0 0 80px;font-size:1.5em}#hero h1:before{height:50px}#hero h1:after{top:calc(100% + 50px)}#hero h1 br{display:none}.home #hero h1{font-size:2em}.home #hero h1 br{display:inline}#hero blockquote,#hero cite,#hero p{font-size:1em}#hero blockquote br,#hero cite br,#hero p br{display:none}#hero .cta_group .btn{display:block;width:100%;max-width:400px;margin:20px auto 0}#alert_bar .alert_bar_wrap,#latest_news .ln_wrap{width:calc(100% - 40px)}#hero .cta_group .btn:first-of-type{margin:0 auto}#latest_news .ln_link{font-size:1em;line-height:1.3em;text-align:left}#hero_ss{height:auto;min-height:0}#hero_ss .content_section_inner{min-height:0;padding:40px 20px}#hero_ss .inner{width:100%}}.slick-list,.slick-slider,.slick-track{position:relative;display:block}@media only screen and (max-width:480px){.home #hero h1{font-size:1.5em}}@media only screen and (min-width:768px) and (max-width:1024px){#hero_gated .logo{width:100%}#hero .inner{width:90%}#hero h1{font-size:3em}#alert_bar .alert_bar_wrap{width:70%}#hero_ss{background-position:170% top}#hero_ss .inner{width:50%}}.slick-slider{box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{transform:translate3d(0,0,0)}.slick-track{left:0;top:0;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-dots,.slick-next,.slick-prev{position:absolute;display:block;padding:0}.slick-loading .slick-list{background:url(../../images/loading.svg) center center no-repeat #fff}.slick-next,.slick-prev{height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;background:0 0;color:transparent;top:50%;transform:translate(0,-50%);border:none;outline:0;z-index:10}.img_gallery_slider li,.test_slider li{z-index:1000;background:0 0;position:relative}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{outline:0;background:0 0;color:transparent}.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{color:#2b59c3}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{position:absolute;top:50%;margin:-9px;width:20px;height:18px;line-height:18px;text-align:center;color:#ff6e42;font-family:dashicons;content:'\f522';font-size:26px;text-indent:0;transition:all .3s}.test_slider .slick-next,.test_slider .slick-prev{height:40px;width:31px}.test_slider .slick-next:before,.test_slider .slick-prev:before{position:absolute;left:0;top:0;margin:0;width:31px;height:40px;line-height:40px;text-align:center;color:#000041;content:'';background:url(../../images/slider-arrow-alt.svg);transition:all .3s}.slick-prev{left:-40px}[dir=rtl] .slick-prev{left:auto;right:-40px}.slick-prev:before{transform:rotate(180deg)}.slick-next{right:-40px}[dir=rtl] .slick-next{left:-40px;right:auto}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{bottom:-25px;list-style:none;text-align:center;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;height:20px;width:20px;margin:0 5px;padding:0;cursor:pointer}.slick-dots li button{border:0;background:0 0;display:block;height:20px;width:20px;outline:0;line-height:0;font-size:0;color:transparent;padding:5px;cursor:pointer}.slick-dots li button:focus,.slick-dots li button:hover{outline:0}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:"•";width:20px;height:20px;font-family:slick;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.img_gallery_slider{margin:40px 0 0;margin-left:0!important;height:330px}.img_gallery_slider *{box-sizing:border-box}.img_gallery_slider li{height:330px;overflow:hidden}.img_gallery_slider li>.inner{display:block;width:100%;height:100%;padding:0 5px;text-decoration:none}.img_gallery_slider li img{height:100%}.test_slider{margin-left:0!important}.test_slider *{box-sizing:border-box}.test_slider .slick-track{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.test_slider .slick-list{padding:0!important}.test_slider li{overflow:hidden}@media screen and (max-width:767px){.slick-prev{left:-20px}[dir=rtl] .slick-prev{left:auto;right:-20px}.test_slider .slick-prev{left:0}.slick-next{right:-20px}[dir=rtl] .slick-next{left:-20px;right:auto}.test_slider .slick-next{right:0}.img_gallery_slider{width:calc(100% - 40px);margin:40px auto 0}}#content .gform_wrapper{padding:16px 0}#content .gform_wrapper *{box-sizing:border-box}#content .gform_wrapper .gform_fields{margin:0!important;padding:0!important;list-style:none!important}#content .gform_wrapper .gform_fields li{position:relative;width:100%;margin:0 0 1.25em;padding:0;vertical-align:top;text-align:left;list-style:none!important;z-index:100}#content .gform_wrapper .gform_fields li.gf_left_half,#content .gform_wrapper .gform_fields li.gf_left_third,#content .gform_wrapper .gform_fields li.gf_middle_third{padding-right:16px}#content .gform_wrapper .gform_fields li.msg{margin-top:20px}#content .gform_wrapper .gform_fields li.msg .gfield_label,#content .gform_wrapper .gform_fields li.msg label{left:20px;width:calc(100% - 40px)}#content .gform_wrapper .gform_fields li.msg .gfield_label.float_label,#content .gform_wrapper .gform_fields li.msg label.float_label{left:0}#content .gform_wrapper .gform_fields li.gf_list_inline{margin-bottom:.5em}#content .gform_wrapper .gform_fields li.gfield_html,#content .gform_wrapper .gform_fields li.revealed{margin-bottom:2em}#content .gform_wrapper .gform_fields li.gf_left_third,#content .gform_wrapper .gform_fields li.gf_middle_third,#content .gform_wrapper .gform_fields li.gf_right_third{width:33.4%}#content .gform_wrapper .gform_fields li.gf_right_third{width:33.2%}#content .gform_wrapper .gform_fields li.gf_left_half,#content .gform_wrapper .gform_fields li.gf_right_half{width:50%}#content .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li{width:33.33%!important}#content .gform_wrapper .gform_fields li.no_float .gfield_label{position:static}#content .gform_wrapper .gform_fields li.init_float_label .gfield_label,#content .gform_wrapper .gform_fields li.init_static_label .gfield_label{position:absolute;top:-1.2em;padding:0;height:auto;font-size:14px;line-height:18px;color:#000041;z-index:-1}#content .gform_wrapper .gform_fields li.init_float_label .gfield_label .gfield_required,#content .gform_wrapper .gform_fields li.init_static_label .gfield_label .gfield_required{color:#ff6e42}#content .gform_wrapper .gform_fields li.init_static_label .gfield_label{position:static}#content .gform_wrapper .gform_fields li.long_label .gfield_label,#content .gform_wrapper .gform_fields li.long_label .ginput_complex label{line-height:1.4em}#content .gform_wrapper .gform_fields li.long_label .gfield_label.float_label,#content .gform_wrapper .gform_fields li.long_label .ginput_complex label.float_label{line-height:14px}#content .gform_wrapper .gform_fields li:before{display:none!important}#content .gform_wrapper .gform_fields li.gform_hidden{display:block;margin:0}#content .gform_wrapper .gform_fields li.two_col_address{margin:0}#content .gform_wrapper .gform_fields li.two_col_address .ginput_complex .ginput_full.address_line_1,#content .gform_wrapper .gform_fields li.two_col_address .ginput_complex .ginput_full.address_line_2{position:relative;display:inline-block;vertical-align:top;width:calc(50% - 8px);margin:0 0 1.25em;padding-right:0;z-index:102}#content .gform_wrapper .gform_fields li.two_col_address .ginput_complex .ginput_full.address_line_2{margin-left:16px}#content .gform_wrapper .gfield_label,#content .gform_wrapper .ginput_complex label{display:block;position:absolute;left:0;top:0;width:100%;height:100%;font-family:"Source Sans Pro",sans-serif;font-weight:400;font-size:100%;letter-spacing:0;line-height:calc(2.6em + 2px);margin:0;padding:0 16px;color:#000041;transition:top .3s,padding .3s,font-size .3s,color .3s;z-index:106;-webkit-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;white-space:nowrap}#content .gform_wrapper .gfield_label .gfield_required,#content .gform_wrapper .ginput_complex label .gfield_required{position:relative;display:inline-block;top:-.25em;margin-left:0;font-size:80%;color:#000041}#content .gform_wrapper .gfield_label.float_label,#content .gform_wrapper .ginput_complex label.float_label{top:-1.3em;padding:0;font-size:14px;line-height:18px;color:#000041;z-index:106}#content .gform_wrapper .gfield_label.float_label .gfield_required,#content .gform_wrapper .ginput_complex label.float_label .gfield_required{color:#000041}#content .gform_wrapper .gfield_label.gfield_label_before_complex,#content .gform_wrapper .ginput_complex label.gfield_label_before_complex{position:static;margin:0 0 1em;padding:0;line-height:18px;color:#000041}#content .gform_wrapper .gfield_label.gfield_label_before_complex .gfield_required,#content .gform_wrapper .ginput_complex label.gfield_label_before_complex .gfield_required{color:#ff6e42}#content .gform_wrapper input[type=text],#content .gform_wrapper input[type=number],#content .gform_wrapper input[type=tel],#content .gform_wrapper textarea{width:100%;padding:0 16px;font-size:1em;height:2.78em;line-height:2.78em;font-family:"Source Sans Pro",sans-serif;font-weight:400;border-radius:0;border:1px solid #fff;-webkit-appearance:none;color:#000041;background:#fff;transition:border-color .3s}#content .gform_wrapper input[type=text]:focus,#content .gform_wrapper input[type=text]:valid,#content .gform_wrapper input[type=number]:focus,#content .gform_wrapper input[type=number]:valid,#content .gform_wrapper input[type=tel]:focus,#content .gform_wrapper input[type=tel]:valid,#content .gform_wrapper textarea:focus,#content .gform_wrapper textarea:valid{outline:0;border:none}#page.gated_landing #content .gform_wrapper input[type=text],#page.gated_landing #content .gform_wrapper input[type=number],#page.gated_landing #content .gform_wrapper input[type=tel],#page.gated_landing #content .gform_wrapper textarea{font-size:.9em}#content .gform_wrapper textarea{display:block;height:130px;line-height:1.56em;padding:8px 16px}#content .gform_wrapper input[type=hidden]{display:none}#content .gform_wrapper .field_sublabel_below .ginput_container label{font-size:.78em;font-style:italic;color:#000041}#content .gform_wrapper .field_sublabel_below .ginput_complex.ginput_container label{font-size:1em;font-style:normal}#content .gform_wrapper .field_sublabel_below .ginput_complex.ginput_container label.float_label{font-size:14px;line-height:18px}#content .gform_wrapper .instruction{padding:0 16px;font-size:.78em;font-style:italic;color:#000041}#content .gform_wrapper .ginput_container_date,#content .gform_wrapper .ginput_container_email,#content .gform_wrapper .ginput_container_number,#content .gform_wrapper .ginput_container_phone,#content .gform_wrapper .ginput_container_select,#content .gform_wrapper .ginput_container_text,#content .gform_wrapper .ginput_container_textarea,#content .gform_wrapper .ginput_container_website{margin:0;border:1px solid transparent}#content .gform_wrapper .ginput_complex .address_country,#content .gform_wrapper .ginput_complex .address_state,#content .gform_wrapper .ginput_container_select{position:relative;cursor:pointer;background:#fff;z-index:105}#content .gform_wrapper .ginput_complex .address_country:after,#content .gform_wrapper .ginput_complex .address_state:after,#content .gform_wrapper .ginput_container_select:after{position:absolute;right:16px;top:20px;content:'';text-align:center;z-index:-1;width:12px;height:10px;background:url(../../images/select-caret.svg) right center no-repeat;background-size:100% auto}#content .gform_wrapper .ginput_complex .address_country select,#content .gform_wrapper .ginput_complex .address_state select,#content .gform_wrapper .ginput_container_select select{border:none;outline:0;margin:0;padding:0 16px;font-family:"Source Sans Pro",sans-serif;font-size:1em;font-weight:400;line-height:2.78em;color:#000041;width:100%;background:0 0;border-radius:0;-webkit-user-select:none;-ms-user-select:none;user-select:none;-webkit-appearance:none;appearance:none;white-space:pre-wrap;z-index:110;cursor:pointer}#content .gform_wrapper .ginput_complex .address_country select::-ms-expand,#content .gform_wrapper .ginput_complex .address_state select::-ms-expand,#content .gform_wrapper .ginput_container_select select::-ms-expand{display:none}#content .gform_wrapper .ginput_container_radio{margin-top:0}#content .gform_wrapper .gfield_radio{position:relative;cursor:pointer;margin:0!important;padding:0;-webkit-user-select:none;-ms-user-select:none;user-select:none}#content .gform_wrapper .gfield_radio>li{display:inline-block;width:auto!important;margin:0;vertical-align:top;font-size:100%!important}#content .gform_wrapper .gfield_radio label{display:inline-block;position:relative;margin:0 0 5px;padding:0 25px;font-size:1em!important;height:2.78em;max-width:none!important;line-height:2.78em;font-family:"Source Sans Pro",sans-serif;font-weight:400;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;color:#000041!important}#content .gform_wrapper .gfield_radio label:before{position:absolute;left:3px;top:18px;width:14px;height:14px;border-radius:50%;content:'';box-shadow:inset 14px 14px #2b59c3;transition:.2s transform ease-in-out;transform:scale(0)}#content .gform_wrapper .gfield_radio label:after{position:absolute;left:0;top:15px;width:20px;height:20px;border-radius:50%;border:1px solid #2b59c3;content:'';z-index:-1}#content .gform_wrapper .gfield_radio input[type=radio]{position:absolute;opacity:0;cursor:pointer}#content .gform_wrapper .gfield_radio input[type=radio]:checked~label:before{transform:scale(1)}#content .gform_wrapper .ginput_container_checkbox{height:130px;margin-top:0;padding:26px 16px 16px;background:#fff}#content .gform_wrapper .gfield_checkbox{position:relative;cursor:pointer;margin:0!important;padding:0;-webkit-user-select:none;-ms-user-select:none;user-select:none}#content .gform_wrapper .gfield_checkbox>li{display:inline-block;width:calc(33.3333% - 15px)!important;margin:0 0 10px 30px;vertical-align:top}#content .gform_wrapper .gfield_checkbox>li:nth-of-type(2n+1){margin-left:0}#content .gform_wrapper .gfield_checkbox label{display:inline-block;position:relative;margin:0;padding:0 0 0 24px;line-height:16px;font-style:normal!important;cursor:pointer;-webkit-user-select:none;-ms-user-select:none;user-select:none;font-size:.78em!important;color:#000041!important}#content .gform_wrapper .gfield_checkbox label:before{position:absolute;left:0;top:0;width:16px;height:16px;font-family:FontAwesome;line-height:16px;font-size:14px;border-radius:2px;color:#e8e9f3;content:'\f00c';border:none;background:#e8e9f3;text-align:center}#content .gform_wrapper .gfield_checkbox input[type=checkbox]{position:absolute;opacity:0;cursor:pointer}#content .gform_wrapper .gfield_checkbox input[type=checkbox]:checked~label:before{color:#000041}#content .gform_wrapper .no_label .gfield_label{display:none}#content .gform_wrapper .no_label .gfield_checkbox label{position:relative;font-size:1em;color:#000041}#content .gform_wrapper .no_label .gfield_checkbox label:after{position:absolute;width:10px;height:10px;display:inline-block;top:-.25em;font-size:80%;color:#000041;content:'*'}#content .gform_wrapper .ginput_complex{z-index:101}#content .gform_wrapper .ginput_complex .ginput_left,#content .gform_wrapper .ginput_complex .ginput_right{position:relative;width:calc(50% - 8px);margin:0 0 1.25em;padding-right:0;z-index:102}#content .gform_wrapper .ginput_complex .ginput_right{margin-left:16px}#content .gform_wrapper .ginput_complex input[type=text],#content .gform_wrapper .ginput_complex input[type=number],#content .gform_wrapper .ginput_complex input[type=tel],#content .gform_wrapper .ginput_complex textarea{margin-bottom:0}#content .gform_wrapper .validation_error,#content .gform_wrapper .validation_message{margin:0 0 30px;font-family:"Source Sans Pro",sans-serif;color:#ff6e42;line-height:1.4em;font-style:italic}#content .gform_wrapper .charleft,#content .gform_wrapper .ginput_counter{display:none!important}#content .gform_wrapper .gfield_error{border:none;background:0 0}#content .gform_wrapper .validation_error{border:none;padding:0;font-weight:600;font-size:1em;text-align:center}#content .gform_wrapper .validation_message{padding:5px 0 0 16px;font-size:14px;font-weight:400}#content .gform_wrapper .validation_message.instruction{position:absolute;right:32px;margin:0;padding-left:0}#content .gform_wrapper.gform_validation_error .gform_body ul li.gfield.gfield_error:not(.gf_left_half):not(.gf_right_half){max-width:100%!important}#content .gform_wrapper .gform_footer{text-align:center}#content .gform_wrapper .gform_footer .gform_button{width:50%}#content .white_form .gform_wrapper .ginput_complex .address_country select,#content .white_form .gform_wrapper .ginput_complex .address_state select,#content .white_form .gform_wrapper .ginput_container_select select,#content .white_form .gform_wrapper input[type=text],#content .white_form .gform_wrapper input[type=text]:focus,#content .white_form .gform_wrapper input[type=text]:valid,#content .white_form .gform_wrapper input[type=number],#content .white_form .gform_wrapper input[type=number]:focus,#content .white_form .gform_wrapper input[type=number]:valid,#content .white_form .gform_wrapper input[type=tel],#content .white_form .gform_wrapper input[type=tel]:focus,#content .white_form .gform_wrapper input[type=tel]:valid,#content .white_form .gform_wrapper textarea,#content .white_form .gform_wrapper textarea:focus,#content .white_form .gform_wrapper textarea:valid{border:1px solid #707070}#primary-navigation .nav-menu ul li a,#primary-navigation .nav-menu>li a{border-radius:0;text-decoration:none;font-family:"Source Sans Pro",sans-serif}#content .force_1col .gform_wrapper .gform_fields li.gf_left_half,#content .force_1col .gform_wrapper .gform_fields li.gf_left_third,#content .force_1col .gform_wrapper .gform_fields li.gf_middle_third,#content .force_1col .gform_wrapper .gform_fields li.gf_right_half,#content .force_1col .gform_wrapper .gform_fields li.gf_right_third,#page.gated_landing .gform_wrapper .gform_fields li.gf_left_half,#page.gated_landing .gform_wrapper .gform_fields li.gf_left_third,#page.gated_landing .gform_wrapper .gform_fields li.gf_middle_third,#page.gated_landing .gform_wrapper .gform_fields li.gf_right_half,#page.gated_landing .gform_wrapper .gform_fields li.gf_right_third{width:100%!important;padding-right:0!important}#content .force_1col .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li,#page.gated_landing .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li{width:100%!important}#content .form_embed.purple-dark .form_footnote,#content .form_embed.purple-dark .gform_fields .gfield_label.float_label,#content .form_embed.purple-dark .gform_fields .gfield_label.float_label .gfield_required,#content .form_embed.purple-dark .gform_fields .gfield_label.gfield_label_before_complex,#content .form_embed.purple-dark .gform_fields .gfield_label.gfield_label_before_complex .gfield_required,#content .form_embed.purple-dark .gform_fields .ginput_complex label.float_label,#content .form_embed.purple-dark .gform_fields .ginput_complex label.float_label .gfield_required,#content .form_embed.purple-dark .gform_fields .ginput_complex label.gfield_label_before_complex,#content .form_embed.purple-dark .gform_fields .ginput_complex label.gfield_label_before_complex .gfield_required{color:#fff}::-webkit-input-placeholder{color:#000041}::-moz-placeholder{color:#000041}:-ms-input-placeholder{color:#000041}:-moz-placeholder{color:#000041}@media screen and (max-width:767px){#content .gform_wrapper .gform_fields li.gf_left_half,#content .gform_wrapper .gform_fields li.gf_left_third,#content .gform_wrapper .gform_fields li.gf_middle_third,#content .gform_wrapper .gform_fields li.gf_right_half,#content .gform_wrapper .gform_fields li.gf_right_third{width:100%!important;padding-right:0!important}#content .gform_wrapper .gform_fields li.gf_list_3col ul.gfield_radio li{width:100%!important}}@media only screen and (min-width:1025px) and (max-width:1260px){#content .gform_wrapper .gfield_label,#content .gform_wrapper .ginput_complex label,#page.gated_landing #content .gform_wrapper .gfield_label,#page.gated_landing #content .gform_wrapper .ginput_complex label{font-size:.9em}#page.gated_landing #content .gform_wrapper .gfield_label.float_label,#page.gated_landing #content .gform_wrapper .ginput_complex label.float_label{font-size:14px}#content .gform_wrapper input[type=text],#content .gform_wrapper input[type=number],#content .gform_wrapper input[type=tel],#content .gform_wrapper textarea,#page.gated_landing #content .gform_wrapper input[type=text],#page.gated_landing #content .gform_wrapper input[type=number],#page.gated_landing #content .gform_wrapper input[type=tel],#page.gated_landing #content .gform_wrapper textarea{font-size:.9em}}.clearfix:after,.clearfix:before{content:"";display:table}.wysiwyg ul.checkmark{margin:0!important}.wysiwyg ul.checkmark>li{position:relative;margin:0 0 20px;padding:0 0 0 60px;color:#141920}.content_section.override_padding.nopadding_lr .content_section_inner,.nopadding_lr{padding-right:0!important;padding-left:0!important}.wysiwyg ul.checkmark>li:before{position:absolute;left:0;top:-5px;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover;content:''}.wysiwyg ul.checkmark>li:last-of-type{margin:0}.flexrow{display:-ms-flexbox;display:flex}.flexrow .flex_i{-ms-flex-positive:1;flex-grow:1}.flexrow .flex_i+.flex_i{margin-left:5%}.alignleft,.alignright{float:none;width:100%;max-width:100%;height:auto}.aligncenter,.alignnone{width:auto;max-width:100%;height:auto;text-align:center}figure{display:block;width:100%;margin:0 auto 1.67em}figure.wp-caption{margin-bottom:10px}figcaption{text-align:left;font-size:.78em;line-height:1.4em;font-style:italic;color:#666}iframe{max-width:100%!important}.vid_cont{position:relative;background-color:transparent;background-repeat:no-repeat;background-position:center center;background-size:cover;z-index:10}.video_container{position:relative;padding-bottom:62.5%;margin:0;width:100%;height:0;opacity:1;visibility:visible;overflow:hidden;transition:opacity .3s}.video_container.off{opacity:0;visibility:hidden}.video_container embed,.video_container iframe,.video_container object{position:absolute;top:0;left:0;width:100%;height:100%}.to_cols_3{column-count:3;column-gap:74px}.to_cols_3>li{list-style-position:inside}.pos_rel{position:relative!important}.float_left{float:left!important}.float_right{float:right!important}.of_hidden{overflow:hidden!important}.nomargin{margin:0!important}.nomargin_top{margin-top:0!important}.nomargin_bottom{margin-bottom:0!important}.large_margin_bottom{margin-bottom:60px!important}.tall_pad{padding-top:100px!important;padding-bottom:100px!important}.short_pad{padding-top:30px!important;padding-bottom:30px!important}.mid_pad{padding-top:60px!important;padding-bottom:60px!important}.nopadding_tb,.nopadding_top{padding-top:0!important}.nopadding_bottom,.nopadding_tb{padding-bottom:0!important}.nopadding{padding:0!important}.small_padding_bottom{padding-bottom:30px!important}.large_padding_bottom{padding-bottom:100px!important}.small_padding_top{padding-top:30px!important}.large_padding_top{padding-top:100px!important}.content_section.override_padding.tall_pad{padding:0!important}.content_section.override_padding.tall_pad .content_section_inner{padding-top:100px!important;padding-bottom:100px!important}.content_section.override_padding.mid_pad{padding:0!important}.content_section.override_padding.mid_pad .content_section_inner{padding-top:60px!important;padding-bottom:60px!important}.content_section.override_padding.short_pad{padding:0!important}.content_section.override_padding.short_pad .content_section_inner{padding-top:30px!important;padding-bottom:30px!important}.content_section.override_padding.nopadding,.content_section.override_padding.nopadding .content_section_inner,.content_section.override_padding.nopadding_bottom,.content_section.override_padding.nopadding_lr,.content_section.override_padding.nopadding_tb,.content_section.override_padding.nopadding_top,.content_section.override_padding.small_padding_top{padding:0!important}.content_section.override_padding.nopadding_tb .content_section_inner{padding-top:0!important;padding-bottom:0!important}.content_section.override_padding.nopadding_top .content_section_inner{padding-top:0!important}.content_section.override_padding.nopadding_bottom .content_section_inner{padding-bottom:0!important}.content_section.override_padding.small_padding_top .content_section_inner{padding-top:30px!important}.content_section.override_padding.small_padding_bottom{padding:0!important}.content_section.override_padding.small_padding_bottom .content_section_inner{padding-bottom:30px!important}.content_section.override_padding.small_padding_tb{padding:0!important}.content_section.override_padding.small_padding_tb .content_section_inner{padding-top:30px!important;padding-bottom:30px!important}.content_section.override_padding.large_padding_top{padding:0!important}.content_section.override_padding.large_padding_top .content_section_inner{padding-top:100px!important}.content_section.override_padding.large_padding_bottom{padding:0!important}.content_section.override_padding.large_padding_bottom .content_section_inner{padding-bottom:100px!important}.content_section.override_padding.large_padding_tb{padding:0!important}.content_section.override_padding.large_padding_tb .content_section_inner{padding-top:100px!important;padding-bottom:100px!important}.nobullets{list-style:none!important}.upper{text-transform:uppercase!important}.lower{text-transform:none!important}.centered{text-align:center!important}.lefted{text-align:left!important}.righted{text-align:right!important}.blockit{display:block!important}.flex_vert_cent{display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important}.width_cap{max-width:1008px}.show_on_mobile{display:none!important}.hide_on_mobile{display:block!important}.show_on_tablet{display:none!important}.hide_on_tablet{display:block!important}@media only screen and (max-width:767px){.flexrow{display:-ms-flexbox;display:flex}.flexrow.noflex_m{display:block}.flexrow.noflex_m .flex_i+.flex_i{margin-left:0}.to_cols_3{column-count:1}.tall_pad{padding-top:60px!important;padding-bottom:60px!important}.show_on_mobile{display:block!important}.hide_on_mobile{display:none!important}}@media only screen and (min-width:768px) and (max-width:1024px){.show_on_tablet{display:block!important}.hide_on_tablet{display:none!important}.nopadding_tablet{padding:0!important}.tall_pad{padding-top:60px!important;padding-bottom:60px!important}}#primary-navigation{float:left;position:relative;width:calc(100% - 200px);margin-left:24px;padding:0;box-sizing:border-box}#primary-navigation .nav-menu{position:relative;margin:0;padding:0;list-style:none;text-align:left}#primary-navigation .nav-menu>li{position:relative;display:inline-block;margin:0 0 0 -4px;transition:all .3s ease 0s;vertical-align:top;text-align:left}#primary-navigation .nav-menu>li a{display:block;position:relative;padding:0 24px;line-height:80px;font-size:1em;font-weight:600;color:#fff;text-transform:none;text-align:center;transition:all .3s}#primary-navigation .nav-menu>li a:hover,#primary-navigation .nav-menu>li.current-menu-ancestor>a,#primary-navigation .nav-menu>li.current-menu-item>a,#primary-navigation .nav-menu>li.current-page-ancestor>a,#primary-navigation .nav-menu>li.current-post-ancestor>a,#primary-navigation .nav-menu>li:focus>a,#primary-navigation .nav-menu>li:hover>a{color:#ff6e42}#primary-navigation .nav-menu>li:focus .sub-menu,#primary-navigation .nav-menu>li:hover .sub-menu{left:0;margin-top:0}#primary-navigation .nav-menu>li.flip:focus .sub-menu,#primary-navigation .nav-menu>li.flip:hover .sub-menu{left:auto;right:0}#primary-navigation .nav-menu ul{position:absolute;top:100%;left:-999em;width:auto;min-width:100%;margin:0;background:#000041;padding:0;z-index:1000;box-sizing:border-box}#primary-navigation .nav-menu ul li{position:relative;display:block;margin:0;background:#000041;overflow:hidden}#primary-navigation .nav-menu ul li a{display:block;width:100%;box-sizing:border-box;vertical-align:middle;line-height:1.3em;font-weight:400;height:auto;padding:15px 24px;color:#fff;background:0 0!important;border-top:1px solid #fff;white-space:nowrap;transition:all .3s;text-align:left}#primary-navigation .nav-menu ul li a.active,#primary-navigation .nav-menu ul li a:hover,#primary-navigation .nav-menu ul li.current-menu-ancestor a,#primary-navigation .nav-menu ul li.current-menu-item a,#primary-navigation .nav-menu ul li.current-page-ancestor a,#primary-navigation .nav-menu ul li.current-post-ancestor a,.nav-menu li:focus #primary-navigation .nav-menu ul li a,.nav-menu li:hover #primary-navigation .nav-menu ul li a{color:#ff6e42}#primary-navigation-mobile{width:100%;padding:0}#primary-navigation-mobile .nav-menu{list-style:none;margin:0;padding:30px 0}#primary-navigation-mobile .nav-menu>.menu-item-has-children>a{width:calc(100% - 42px);padding-right:0}#primary-navigation-mobile .nav-menu>.menu-item-has-children>.toggle{display:inline-block;border:none;background:0 0}#primary-navigation-mobile .nav-menu>li{margin:0 0 10px;border:none}#primary-navigation-mobile .nav-menu>li>a{position:relative;display:inline-block;vertical-align:top;width:100%;font-size:1.5em;font-family:"Source Sans Pro",sans-serif;font-weight:600;border:none;padding:7px 50px 7px 0;color:#fff;transition:all .3s}#primary-navigation-mobile .nav-menu>li>a:hover{color:#ff6e42}#primary-navigation-mobile .nav-menu>li>.toggle{position:relative;display:none;width:40px;padding:0;height:40px;background:0 0;text-indent:-9999px;overflow:hidden;text-align:left;outline:0;transition:all .3s}#primary-navigation-mobile .nav-menu>li>.toggle:after{position:absolute;left:50%;top:50%;width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translate(-50%,-50%);transition:all .3s}#primary-navigation-mobile .nav-menu>li>.toggle>span{display:block;padding:100px 0 0}#primary-navigation-mobile .nav-menu>li>.toggle:hover{transform:rotate(90deg)}#primary-navigation-mobile .nav-menu ul{display:none;list-style:none;width:100%;margin:0;padding:6px 15px;background:0 0;border-top:none}#primary-navigation-mobile .nav-menu ul li a{display:block;font-weight:400;font-size:1.22em;color:#fff;text-transform:none;line-height:1.2em;margin:0;padding:5px 0;transition:all .3s ease 0s}#primary-navigation-mobile .nav-menu ul li a:hover,#primary-navigation-mobile .nav-menu ul li.current-menu-ancestor a,#primary-navigation-mobile .nav-menu ul li.current-menu-item a,#primary-navigation-mobile .nav-menu ul li.current-page-ancestor a,#primary-navigation-mobile .nav-menu ul li.current-post-ancestor a,#primary-navigation-mobile .nav-menu ul li.current_page_ancestor a,#primary-navigation-mobile .nav-menu ul li.current_page_parent a{color:#ff6e42}#primary-navigation-mobile .nav-menu ul li>.toggle{display:none}#primary-navigation-mobile .nav-menu .current-menu-ancestor a:before,#primary-navigation-mobile .nav-menu .current-menu-item a:before,#primary-navigation-mobile .nav-menu .current-page-ancestor a:before,#primary-navigation-mobile .nav-menu .current-post-ancestor a:before,#primary-navigation-mobile .nav-menu .current_page_ancestor a:before,#primary-navigation-mobile .nav-menu .current_page_parent a:before{width:100%}@media only screen and (max-width:990px){#primary-navigation{display:none}#primary-navigation-mobile{display:block}}@media only screen and (max-width:767px){#primary-navigation-mobile .nav-menu>li>a{font-size:1.25em}#primary-navigation-mobile .nav-menu ul li a{font-size:1em}}@media screen and (min-width:768px) and (max-width:990px){#primary-navigation-mobile .nav-menu>li a:after{left:-80px}}@media screen and (min-width:991px) and (max-width:1100px){#primary-navigation .nav-menu>li a{font-size:.83em;padding:0 14px}#primary-navigation .nav-menu ul li a{padding:15px 14px}}@media screen and (min-width:1101px) and (max-width:1260px){#primary-navigation .nav-menu>li a{padding:0 15px}#primary-navigation .nav-menu ul li a{padding:15px}}#content article>a,#content article>blockquote,#content article>cite,#content article>h1,#content article>h2,#content article>h3,#content article>h4,#content article>h5,#content article>h6,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{width:calc(100% - 160px);max-width:1200px;margin-right:auto;margin-left:auto}.single-post #content article>a,.single-post #content article>blockquote,.single-post #content article>cite,.single-post #content article>h1,.single-post #content article>h2,.single-post #content article>h3,.single-post #content article>h4,.single-post #content article>h5,.single-post #content article>h6,.single-post #content article>hr,.single-post #content article>ol,.single-post #content article>p,.single-post #content article>span,.single-post #content article>ul{width:100%}#content article ol,#content article ul{margin-left:20px}.single-post #content article ol,.single-post #content article ul{width:auto}#content article .wp-block-columns{display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:calc(100% - 160px);max-width:1200px;margin:0 auto;padding:0 0 80px}#content article .wp-block-columns .wp-block-column:first-child{padding-right:10%}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:20px}@media screen and (max-width:767px){#content article>a,#content article>blockquote,#content article>cite,#content article>h1,#content article>h2,#content article>h3,#content article>h4,#content article>h5,#content article>h6,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{width:calc(100% - 40px)}#content article .wp-block-columns{display:block;width:calc(100% - 40px);padding:0 0 40px}#content article .wp-block-columns .wp-block-column:first-child{padding-right:0}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:0}}@media only screen and (min-width:768px) and (max-width:900px){#content article .wp-block-columns{display:block;width:calc(100% - 160px);padding:0 0 40px}#content article .wp-block-columns .wp-block-column:first-child{margin-bottom:40px;padding-right:0}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:0}}#iubenda-cs-banner,#iubenda-cs-banner *{background:0 0!important;margin:0!important;padding:0!important}#iubenda-cs-banner{font-size:15px!important;line-height:1.8!important;position:fixed!important;z-index:99999998!important;top:0!important;left:0!important;width:100%!important;height:100%!important;border:0!important;overflow:hidden!important;display:-ms-flexbox!important;display:flex!important;opacity:0!important;visibility:hidden!important;pointer-events:none!important;transition:opacity .4s ease,visibility .4s ease!important}#iubenda-cs-banner *{font-size:100%!important;-webkit-appearance:none!important;appearance:none!important;box-sizing:border-box!important;-webkit-tap-highlight-color:transparent!important;-webkit-backface-visibility:hidden!important;backface-visibility:hidden!important;font-family:-apple-system,sans-serif!important;text-decoration:none!important;color:currentColor!important;border:0 #000!important;border-width:medium!important;bottom:auto!important;clear:none!important;clip:auto!important;counter-increment:none!important;counter-reset:none!important;cursor:auto!important;direction:inherit!important;float:none!important;font-style:inherit!important;font-variant:normal!important;font-weight:inherit!important;height:auto!important;left:auto!important;letter-spacing:normal!important;line-height:inherit!important;list-style-type:inherit!important;list-style-position:outside!important;list-style-image:none!important;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;opacity:1;outline:0!important;overflow:visible!important;position:static!important;quotes:"" ""!important;right:auto!important;table-layout:auto!important;text-align:inherit!important;text-indent:0!important;text-transform:none!important;top:auto!important;unicode-bidi:normal!important;vertical-align:baseline!important;visibility:inherit!important;white-space:normal!important;width:auto!important;word-spacing:normal!important;z-index:auto!important;background-origin:padding-box!important;background-clip:border-box!important;background-size:auto!important;border-image:none!important;border-radius:0!important;box-shadow:none!important;column-count:auto!important;column-gap:normal!important;column-rule:medium none #000!important;column-span:none!important;column-width:auto!important;font-feature-settings:normal!important;overflow-x:visible!important;overflow-y:visible!important;-webkit-hyphens:manual!important;-ms-hyphens:manual!important;hyphens:manual!important;perspective:none!important;perspective-origin:50% 50%!important;text-shadow:none!important;transition:all 0s ease 0s!important;transform:none!important;transform-origin:50% 50%!important;transform-style:flat!important;word-break:normal!important;-ms-text-size-adjust:100%}#iubenda-cs-banner .iubenda-cs-content,#iubenda-cs-banner.iubenda-cs-slidein .iubenda-cs-container{transition:transform .4s ease!important}#iubenda-cs-banner.iubenda-cs-overlay:before{content:""!important;position:fixed!important;top:0!important;left:0!important;width:100%!important;height:100%!important;background-color:rgba(0,0,0,.5)!important;z-index:1!important}#iubenda-cs-banner.iubenda-cs-center{-ms-flex-align:center!important;align-items:center!important;-ms-flex-pack:center!important;justify-content:center!important}#iubenda-cs-banner.iubenda-cs-top{-ms-flex-align:start!important;align-items:flex-start!important}#iubenda-cs-banner.iubenda-cs-bottom{-ms-flex-align:end!important;align-items:flex-end!important}#iubenda-cs-banner.iubenda-cs-left{-ms-flex-pack:start!important;justify-content:flex-start!important}#iubenda-cs-banner.iubenda-cs-right{-ms-flex-pack:end!important;justify-content:flex-end!important}#iubenda-cs-banner.iubenda-cs-visible{opacity:1!important;visibility:visible!important}#iubenda-cs-banner.iubenda-cs-visible .iubenda-cs-container{pointer-events:auto!important}#iubenda-cs-banner.iubenda-cs-slidein.iubenda-cs-top .iubenda-cs-container{transform:translateY(-48px)!important}#iubenda-cs-banner.iubenda-cs-slidein.iubenda-cs-bottom .iubenda-cs-container{transform:translateY(48px)!important}#iubenda-cs-banner.iubenda-cs-slidein.iubenda-cs-visible .iubenda-cs-container{transform:translateY(0)!important}#iubenda-cs-banner .iubenda-cs-container{position:relative!important;z-index:2!important}#iubenda-cs-banner .iubenda-cs-content{position:relative!important;z-index:1!important;overflow:hidden!important}#iubenda-cs-banner .iubenda-cs-rationale{position:relative!important}#iubenda-cs-banner .iubenda-cs-close-btn{position:absolute!important;top:-16px!important;padding:16px!important;right:0!important;width:48px!important;height:48px!important;font-size:24px!important;line-height:0!important;font-weight:lighter!important;cursor:pointer!important;text-align:center!important}#iubenda-cs-banner .iubenda-cs-close-btn:hover{opacity:.5!important}#iubenda-cs-banner .iubenda-banner-content{font-weight:300!important;margin:16px!important}#iubenda-cs-banner .iubenda-banner-content a{cursor:pointer!important;color:currentColor!important;opacity:.7!important;text-decoration:underline!important}#iubenda-cs-banner .iubenda-banner-content a:hover{opacity:1!important}#iubenda-cs-banner #iubenda-cs-title{font-weight:700!important;margin-bottom:16px!important}#iubenda-cs-banner .iubenda-cs-opt-group{margin:16px!important;z-index:1!important;color:#000!important}#iubenda-cs-banner .iubenda-cs-opt-group button{-webkit-appearance:none!important;appearance:none!important;padding:8px 16px!important;border-radius:4px!important;cursor:pointer!important;font-weight:700!important;font-size:100%!important;margin-top:4px!important;margin-bottom:4px!important}#iubenda-cs-banner .iubenda-cs-opt-group button:focus{opacity:.8!important}#iubenda-cs-banner .iubenda-cs-opt-group button:hover{opacity:.5!important}@media (min-width:480px){#iubenda-cs-banner .iubenda-cs-opt-group button:not(:last-of-type){margin-right:4px!important}}@media (max-width:479px){#iubenda-cs-banner .iubenda-cs-opt-group button{width:100%!important;display:block;text-align:center!important}#iubenda-cs-banner .iubenda-cs-opt-group button:not(:last-of-type){margin-bottom:8px!important}}@media (max-width:991px) and (max-height:352px){#iubenda-cs-banner .iubenda-cs-opt-group{box-shadow:0 -16px 24px currentColor!important;margin-top:0!important}#iubenda-cs-banner .iubenda-cs-content{padding:0!important}#iubenda-cs-banner .iubenda-cs-close-btn{top:0!important}#iubenda-cs-banner .iubenda-banner-content{overflow-y:scroll!important;padding-right:16px!important;padding-bottom:16px!important;margin-bottom:4px!important;-ms-flex:1px!important;flex:1px!important}#iubenda-cs-banner .iubenda-cs-rationale{display:-ms-flexbox!important;display:flex!important;-ms-flex-direction:column!important;flex-direction:column!important}#iubenda-cs-banner.iubenda-cs-default .iubenda-cs-container,#iubenda-cs-banner.iubenda-cs-default .iubenda-cs-content,#iubenda-cs-banner.iubenda-cs-default .iubenda-cs-rationale{height:100%!important}}#iubenda-cs-banner.iubenda-cs-default .iubenda-cs-container{width:100%!important}@media (max-width:991px){#iubenda-cs-banner.iubenda-cs-default .iubenda-cs-content{padding:8px!important}}@media (min-width:992px){#iubenda-cs-banner.iubenda-cs-default .iubenda-cs-rationale{width:992px!important;margin:32px auto!important}#iubenda-cs-banner.iubenda-cs-default-floating .iubenda-cs-container{width:992px!important}}@media (min-width:480px){#iubenda-cs-banner.iubenda-cs-default-floating.iubenda-cs-center:not(.iubenda-cs-top):not(.iubenda-cs-bottom) .iubenda-cs-container,#iubenda-cs-banner.iubenda-cs-default-floating:not(.iubenda-cs-bottom):not(.iubenda-cs-center) .iubenda-cs-container,#iubenda-cs-banner.iubenda-cs-default-floating:not(.iubenda-cs-top):not(.iubenda-cs-center) .iubenda-cs-container{width:480px!important}}#iubenda-cs-banner.iubenda-cs-default-floating.iubenda-cs-center:not(.iubenda-cs-top):not(.iubenda-cs-bottom) .iubenda-cs-opt-group button,#iubenda-cs-banner.iubenda-cs-default-floating:not(.iubenda-cs-bottom):not(.iubenda-cs-center) .iubenda-cs-opt-group button,#iubenda-cs-banner.iubenda-cs-default-floating:not(.iubenda-cs-top):not(.iubenda-cs-center) .iubenda-cs-opt-group button{display:block!important}#iubenda-cs-banner.iubenda-cs-default-floating .iubenda-cs-content{box-shadow:0 15px 35px rgba(50,50,93,.1),0 5px 15px rgba(0,0,0,.07)!important;-webkit-box-shadow:0 15px 35px rgba(50,50,93,.1),0 5px 15px rgba(0,0,0,.07)!important;border-radius:4px!important;margin:16px!important;padding:8px!important}@media (max-width:991px) and (max-height:352px){#iubenda-cs-banner.iubenda-cs-default-floating .iubenda-cs-content{height:calc(100% - 32px)!important}#iubenda-cs-banner.iubenda-cs-default-floating .iubenda-cs-container,#iubenda-cs-banner.iubenda-cs-default-floating .iubenda-cs-rationale{height:100%!important}}#iubenda-cs-banner .iubenda-cs-content{color:#000!important;background:#FFF!important}#iubenda-cs-banner .iubenda-cs-opt-group button{background-color:rgba(255,255,255,.1)!important;color:#FFF!important}#iubenda-cs-banner .iubenda-cs-opt-group button.iubenda-cs-btn-primary{background-color:#0073CE!important;color:#FFF!important}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
