@charset "UTF-8";.col-1-1,.grid{width:100%}#page,html{height:100%}.ss_biz_tech_results .results.split>li,.to_cols_3>li{break-inside:avoid}.wysiwyg .special_ol>li:first-child,ol>li:first-child{counter-reset:item}.clearfix:after,.slick-track:after{clear:both}.has-white-color{color:#fff}.has-white-background-color{background-color:#fff}.has-offwhite-color{color:#eef1fa}.has-offwhite-background-color{background-color:#eef1fa}.has-gray_light-color{color:#e8e9f3}.has-gray_light-background-color{background-color:#e8e9f3}.has-gray-color{color:#707070}.has-gray-background-color{background-color:#707070}.has-gray_dark-color{color:#4d4647}.has-gray_dark-background-color{background-color:#4d4647}.has-nearlyblack-color{color:#141920}.has-black-color,body{color:#000}.has-nearlyblack-background-color{background-color:#141920}.has-black-background-color{background-color:#000}.has-purple-color{color:#332a66}.has-purple-background-color{background-color:#332a66}.has-purple_dark-color{color:#000041}.has-purple_dark-background-color{background-color:#000041}.has-orange-color{color:#ff6e42}.has-orange-background-color{background-color:#ff6e42}.has-green-color{color:#4ecd5f}.has-green-background-color{background-color:#4ecd5f}.has-blue-color{color:#2b59c3}.has-blue-background-color{background-color:#2b59c3}#main,body{background:#fff}@font-face{font-family:"Hurme Geometric Sans_1 W01 Lt";src:url(../../fonts/5512873/3d08d9b7-c232-48fe-a7d6-2e237c86004a.woff2) format("woff2"),url(../../fonts/5512873/87da7095-d100-402f-ae33-579646446093.woff) format("woff")}.grid:after,[class*=grid],[class*=col-],[class*=mobile-]{box-sizing:border-box}[class*=col-]{float:left;min-height:1px;padding-right:20px}.grid-pad,.grid>div.flush_left_right,[class*=col-] [class*=col-]:last-child{padding-right:0}.grid{max-width:1360px;min-width:708px;margin:0 auto}.grid.extra_wide{max-width:1440px}.grid.full{max-width:none}.grid:after{content:"";display:table;clear:both}.grid-pad{padding-top:0;padding-left:20px}.push-right{float:right}.col-2-3,.col-8-12{width:66.66%}.col-1-2,.col-6-12{width:50%}.col-1-3,.col-4-12{width:33.33%}.col-1-4,.col-3-12{width:25%}.col-1-5{width:20%}.col-1-6,.col-2-12{width:16.667%}.col-1-7{width:14.28%}.col-1-8{width:12.5%}.col-1-9{width:11.1%}.col-1-10{width:10%}.col-1-11{width:9.09%}.col-1-12{width:8.33%}.col-11-12{width:91.66%}.col-10-12{width:83.333%}.col-9-12{width:75%}.col-5-12{width:41.66%}.col-7-12{width:58.33%}.push-2-3,.push-8-12{margin-left:66.66%}.push-1-2,.push-6-12{margin-left:50%}.push-5-12{margin-left:41.66%}.push-1-3,.push-4-12{margin-left:33.33%}.push-1-4,.push-3-12{margin-left:25%}.push-1-5{margin-left:20%}.push-1-6,.push-2-12{margin-left:16.667%}.push-1-7{margin-left:14.28%}.push-1-8{margin-left:12.5%}.push-1-9{margin-left:11.1%}.push-1-10{margin-left:10%}.push-1-11{margin-left:9.09%}.push-1-12{margin-left:8.33%}.pull-2-3,.pull-8-12{margin-left:-66.66%}.pull-1-2,.pull-6-12{margin-left:-50%}.pull-5-12{margin-left:-41.66%}.pull-1-3,.pull-4-12{margin-left:-33.33%}.pull-1-4,.pull-3-12{margin-left:-25%}.pull-1-5{margin-left:-20%}.pull-1-6,.pull-2-12{margin-left:-16.667%}.pull-1-7{margin-left:-14.28%}.pull-1-8{margin-left:-12.5%}.pull-1-9{margin-left:-11.1%}.pull-1-10{margin-left:-10%}.pull-1-11{margin-left:-9.09%}.pull-1-12{margin-left:-8.33%}@media handheld,only screen and (max-width:767px){.grid{width:100%;min-width:0;margin-left:0;margin-right:0;padding-left:0;padding-right:0}.site-footer .grid{padding-left:10px;padding-right:10px}.site-footer .grid .grid{padding:0 20px}.grid.extra_wide{max-width:none;padding:0 40px}.site-header .grid.extra_wide{padding:0 10px}.site-footer .grid.extra_wide{padding:0}.grid.full{max-width:none;padding:0}[class*=col-]{width:auto;float:none;margin:0;padding-left:0;padding-right:0}[class*=col-] [class*=col-]{padding-right:0}[class*=mobile-col-]{float:left;margin:0;padding-left:0;padding-right:10px;padding-bottom:0}.mobile-col-1-1{width:100%}.mobile-col-2-3,.mobile-col-8-12{width:66.66%}.mobile-col-1-2,.mobile-col-6-12{width:50%}.mobile-col-1-3,.mobile-col-4-12{width:33.33%}.mobile-col-1-4,.mobile-col-3-12{width:25%}.mobile-col-1-5{width:20%}.mobile-col-1-6,.mobile-col-2-12{width:16.667%}.mobile-col-1-7{width:14.28%}.mobile-col-1-8{width:12.5%}.mobile-col-1-9{width:11.1%}.mobile-col-1-10{width:10%}.mobile-col-1-11{width:9.09%}.mobile-col-1-12{width:8.33%}.mobile-col-11-12{width:91.66%}.mobile-col-10-12{width:83.333%}.mobile-col-9-12{width:75%}.mobile-col-5-12{width:41.66%}.mobile-col-7-12{width:58.33%}}@media only screen and (min-width:768px) and (max-width:1024px){.grid,.tablet-col-1-1{width:100%}.grid{min-width:0;margin-left:0;margin-right:0;padding-left:20px;padding-right:10px}.grid.even_pad{padding-right:20px}.grid.full{max-width:none;padding:0}.site-footer .grid,.site-header .grid{padding:0}[class*=tablet-col-]{float:left;margin:0;padding-left:0;padding-right:10px;padding-bottom:0}.even_pad [class*=tablet-col-]{padding-right:0}#footer_cta [class*=tablet-col-],.hero [class*=tablet-col-]{float:none;margin:0 auto}.tablet-col-2-3,.tablet-col-8-12{width:66.66%}.tablet-col-1-2,.tablet-col-6-12{width:50%}.tablet-col-1-3,.tablet-col-4-12{width:33.33%}.tablet-col-1-4,.tablet-col-3-12{width:25%}.tablet-col-1-5{width:20%}.tablet-col-1-6,.tablet-col-2-12{width:16.667%}.tablet-col-1-7{width:14.28%}.tablet-col-1-8{width:12.5%}.tablet-col-1-9{width:11.1%}.tablet-col-1-10{width:10%}.tablet-col-1-11{width:9.09%}.tablet-col-1-12{width:8.33%}.tablet-col-11-12{width:91.66%}.tablet-col-10-12{width:83.333%}.tablet-col-9-12{width:75%}.tablet-col-5-12{width:41.66%}.tablet-col-7-12{width:58.33%}.tablet-push-2-3,.tablet-push-8-12{margin-left:66.66%}.tablet-push-1-2,.tablet-push-6-12{margin-left:50%}.tablet-push-5-12{margin-left:41.66%}.tablet-push-1-3,.tablet-push-4-12{margin-left:33.33%}.tablet-push-1-4,.tablet-push-3-12{margin-left:25%}.tablet-push-1-5{margin-left:20%}.tablet-push-1-6,.tablet-push-2-12{margin-left:16.667%}.tablet-push-1-7{margin-left:14.28%}.tablet-push-1-8{margin-left:12.5%}.tablet-push-1-9{margin-left:11.1%}.tablet-push-1-10{margin-left:10%}.tablet-push-1-11{margin-left:9.09%}.tablet-push-1-12{margin-left:8.33%}}@media only screen and (min-width:1025px) and (max-width:1360px){.grid{width:100%;min-width:0;margin-left:0;margin-right:0;padding-left:20px;padding-right:10px}.grid.full{max-width:none;padding:0}.grid.even_pad{padding-right:20px}.site-header .grid{padding-left:0;padding-right:0;margin:0 auto}.site-footer .grid{padding-left:20px;padding-right:20px}}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,p.cite,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}#content,#page{width:100%;margin:0 auto;position:relative}body,h1,h2,h3,h4,h5,h6{font-family:"Source Sans Pro",sans-serif}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}.logos_cont .cont .inner_content:after,.ss_aag .data .notes ul li:after,.ss_biz_tech_results .results>li:before,.ss_challenges .cont .inner_content:after,.ss_db_reqs .cont .inner_content:after,.test_cont .test .inner_content:after{content:''}body{height:auto!important;min-height:100%;font-weight:400;font-size:18px;line-height:1.45em;-webkit-text-size-adjust:100%}#main{width:100%;margin:0;transition:margin .3s}#primary{float:left;width:50%;box-sizing:border-box;padding:0 30px 0 0}#primary.full{float:none;width:100%;border:none;padding:0}#secondary{float:right;width:50%;padding:0 70px;box-sizing:border-box}#content{background:0 0;box-sizing:border-box;z-index:10;overflow:hidden}#content>article>.gform_wrapper{padding-top:0;width:calc(100% - 160px);max-width:1200px;margin:0 auto 80px}.content_section{position:relative;width:100%;text-align:left}.content_section.content_wrapper{z-index:10}.content_section.light-blue,.content_section.ybtable{background:#eef1fa}.content_section.gray_light{background:#e8e9f3}.content_section.blue{background:#2b59c3}.content_section.orange{background:#ff6e42}.content_section.purple{background:#332a66}.content_section.gray-light{background:#e8e9f3}.content_section.purple-dark{background:#000041}.content_section.white{background:#fff}.content_section.grad-dkpurple-blue{background:#000041;background:linear-gradient(45deg,#000041 0,#2b59c3 100%);filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#000041', endColorstr='#2b59c3', GradientType=1 )}.content_section.invert>*{color:#fff}.content_section_inner{width:calc(100% - 80px);max-width:1360px;margin:0 auto;padding:60px 0;text-align:left;box-sizing:border-box;background-color:transparent}.content_section_inner.full{width:100%;max-width:none}.content_section_inner.narrow{width:75%;max-width:calc(1360px * .75)}.content_section_inner.narrower{width:65%;max-width:calc(1360px * .65)}.wysiwyg{text-align:left}.wysiwyg.narrow{width:80%;margin:0 auto}.wysiwyg.narrower{width:65%;margin:0 auto}@media screen and (max-width:767px){#primary,#secondary{float:none;width:100%}#content>article{padding-top:60px}#content>article>.gform_wrapper{width:calc(100% - 40px);margin:0 auto 40px}#primary{box-sizing:border-box;margin:0;padding:40px 0}#secondary{margin-top:0;padding:0}#secondary .inner{min-height:0}.content_section_inner{padding-top:60px;padding-bottom:30px}.content_section_inner,.content_section_inner.narrow,.content_section_inner.narrower{width:100%;padding-left:20px;padding-right:20px}}@media screen and (max-width:480px){.content_section_inner,.content_section_inner.narrow,.content_section_inner.narrower{width:100%;padding-left:20px;padding-right:20px}}@media screen and (min-width:768px) and (max-width:1360px){.content_section_inner.narrow,.content_section_inner.narrower,.wysiwyg.narrow,.wysiwyg.narrower{width:85%}}@media screen and (max-width:1024px){body.mobile_nav_open{overflow:hidden}#site-inner{position:relative}}#mobile_nav_toggle{display:none;position:absolute;right:0;top:5px;width:70px;height:50px;margin:0 auto;cursor:pointer;outline:0;background:0 0;z-index:10010;transition:all .3s}#mobile_nav_toggle.open{top:5px}#mobile_nav_toggle .inner{position:absolute;right:0;top:16px;width:24px;height:21px;transform:rotate(0);transition:.5s ease-in-out}#mobile_nav_toggle span{display:block;position:absolute;height:2px;width:100%;background:#fff;opacity:1;left:0;transform:rotate(0);transition:.25s ease-in-out}.fw_cta .social_wrap a svg .bg,.screen-reader-text,.team_grid .team .social a svg .bg{opacity:0}.header_right,.site-header,.site-title{transition:all .3s linear}#mobile_nav_toggle.open span{background:#fff}#mobile_nav_toggle span:nth-child(1){top:0}#mobile_nav_toggle span:nth-child(2),#mobile_nav_toggle span:nth-child(3){top:9px}#mobile_nav_toggle span:nth-child(4){top:18px}#mobile_nav_toggle.open span:nth-child(1),#mobile_nav_toggle.open span:nth-child(4){top:9px;width:0%;left:50%}#mobile_nav_toggle.open span:nth-child(2){transform:rotate(45deg)}#mobile_nav_toggle.open span:nth-child(3){transform:rotate(-45deg)}#mobile_nav_tray,.site-header{position:fixed;width:100%;background:#000041}#mobile_nav_tray{display:none;top:60px;bottom:0;height:calc(100vh - 60px);padding:20px 20px 140px;box-sizing:border-box;overflow:scroll;z-index:10000}.site-header{left:0;top:0;border-bottom:1px solid #fff;height:80px;z-index:1000}.site-header .grid-pad{padding-top:0}.site-header.scrolling{height:80px}.header_inner{position:relative;width:calc(100% - 80px);height:100%;margin:0 auto;box-sizing:border-box}.scrolling .site-title,.site-title{margin:26px 0 0}.site-title{float:left;display:block;width:160px;max-width:100%;height:auto;z-index:1000;box-sizing:border-box;vertical-align:top}.site-title>a,.site-title>a img{display:block;width:100%}.site-title>a:hover{text-decoration:none}.header_right{margin:0;z-index:1000}.home .scrolling .header_right,.scrolling .header_right{margin-top:0}@media only screen and (max-width:990px){#mobile_nav_toggle{display:block}}@media only screen and (min-width:768px) and (max-width:990px){#mobile_nav_toggle{top:15px}#mobile_nav_tray{top:80px;height:calc(100vh - 80px);padding:20px 40px 140px}}@media only screen and (max-width:767px){.site-header{position:relative;height:60px}.header_inner{width:calc(100% - 40px)}.scrolling .site-title,.site-title{margin-top:17px}}.site-footer{position:relative;background:#fff}.site-footer .logo{display:block;width:200px;height:auto;margin:0 0 40px;z-index:1000;box-sizing:border-box;vertical-align:middle}.site-footer .logo img{display:block;width:100%}.site-footer .footer_inner{position:relative;width:calc(100% - 80px);height:100%;margin:0 auto;padding:60px 0;box-sizing:border-box}.site-footer .footer_inner .grid{min-width:0}.site-footer #menu-footer-nav{display:-ms-flexbox;display:flex;-ms-flex-flow:row;flex-flow:row}.site-footer #menu-footer-nav>li{display:inline-block;width:100%;box-sizing:border-box;padding-right:30px}.site-footer #menu-footer-nav>li a{display:block;padding:10px 0;color:#000;font-size:1em;font-weight:400;line-height:1.45em;text-decoration:none;transition:all .3s}.site-footer #menu-footer-nav>li a:hover,.site-footer #menu-footer-nav>li.current-menu-ancestor>a,.site-footer #menu-footer-nav>li.current-menu-item>a,.site-footer #menu-footer-nav>li.current-page-ancestor>a,.site-footer #menu-footer-nav>li.current-post-ancestor>a,.site-footer #menu-footer-nav>li:focus>a,.site-footer #menu-footer-nav>li:hover>a{color:#ff6e42}.site-footer #menu-footer-nav>li>a{padding:0 0 30px;line-height:1.1em;font-size:1.22em;font-weight:600;text-transform:uppercase;letter-spacing:2px}.site-footer blockquote,.site-footer cite,.site-footer p{color:#000}.site-footer blockquote.copyright,.site-footer cite.copyright,.site-footer p.copyright{display:inline-block;margin:0;font-size:.9em;vertical-align:middle;line-height:1.45em;color:#332a66}.site-footer blockquote.copyright a,.site-footer cite.copyright a,.site-footer p.copyright a{color:#332a66}.site-footer blockquote.copyright a:hover,.site-footer cite.copyright a:hover,.site-footer p.copyright a:hover{color:#ff6e42}.site-footer blockquote a,.site-footer cite a,.site-footer p a{color:#000}.site-footer blockquote a:hover,.site-footer cite a:hover,.site-footer p a:hover{color:#ff6e42}.site-footer .social_cont{margin:0 0 40px}.site-footer .social{display:inline-block;position:relative;width:38px;height:38px;margin:0 0 0 10px;border:2px solid #000041;border-radius:50px;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#000}.site-footer .social.first{margin-left:0}.site-footer .social.gh{background:#fff}.site-footer .social.gh svg{top:23px}.site-footer .social.gh svg .icon,.site-footer .social.gh:hover svg .icon{fill:#fff}.site-footer .social.gh:hover svg .bg{fill:#ff6e42}.site-footer .social svg{display:block;position:absolute;left:50%;top:50%;margin:-20px 0 0;height:40px;transition:all .2s;transform:translateX(-50%)}.site-footer .social svg .icon{transition:all .3s;fill:#000041}.site-footer .social svg .bg{transition:all .3s}.site-footer .social:hover{border-color:#ff6e42}.site-footer .social:hover svg .icon{fill:#ff6e42}.grid>div.flush_right>.cont{width:calc(100% + 20px);margin-right:-20px}.grid>div.flush_left>.cont{width:calc(100% + 20px);margin-left:-20px}.grid>div.flush_left_right>.cont{width:calc(100% + 20px + 20px);margin-left:-20px;margin-right:-20px}.img_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.img_cont .cont .inner_content{padding:0 60px}.img_cont .img{position:relative}.img_cont .img .inner_content{float:right;position:relative;margin:0 auto;padding-right:60px;z-index:15}.img_cont .img img{display:block;width:100%}.cta_buckets .cta{padding:0 40px}.cta_buckets .btn{margin-bottom:0}.team_grid .team{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;list-style:none;margin:80px 0 0;padding:0}.team_grid .team .gridblock{float:left;vertical-align:top;width:calc(33.33% - 14px);margin:0 0 60px 20px}.team_grid .team .gridblock:first-of-type{margin-left:0!important}.team_grid .team .gridblock:nth-of-type(3n+1){margin-left:0}.team_grid .team .inner{margin:0;padding:0 10%;text-align:center}.team_grid .team .inner .headshot{display:inline-block;position:relative;height:180px;width:180px;border-radius:100px;overflow:hidden;border:3px solid #ff6e42;margin:0 auto 40px}.team_grid .team .inner .headshot img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.team_grid .team .inner blockquote,.team_grid .team .inner cite,.team_grid .team .inner p{margin:0 0 .75em;color:#141920;font-family:"Source Sans Pro",sans-serif}.team_grid .team .social a{display:inline-block;position:relative;width:32px;height:33px;margin:0 0 0 10px;border:none;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#000}.team_grid .team .social a.first{margin-left:0}.team_grid .team .social a svg{display:block;position:absolute;left:50%;top:50%;margin:0;width:32px;height:33px;transition:all .2s;transform:translate(-50%,-50%)}.team_grid .team .social a svg .icon{transition:all .3s;fill:#000041}.team_grid .team .social a:hover svg .icon{fill:#ff6e42}.logo_grid .logos{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;list-style:none;margin:80px 0 0;padding:0}.logo_grid .logos .gridblock{float:left;vertical-align:top;width:calc(25% - 20px);margin:0 0 60px 20px}.logo_grid .logos .gridblock:first-of-type{margin-left:0!important}.logo_grid .logos .gridblock:nth-of-type(4n+1){margin-left:0}.logo_grid .logos .inner{margin:0;text-align:center}.logo_grid .logos .inner .logo{display:inline-block;position:relative;height:96px;width:90%;margin:0 auto 10px}.logo_grid .logos .inner .logo img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.fw_cta h2{margin:0 0 .75em;text-transform:none;letter-spacing:0;font-weight:600;color:#fff}.fw_cta h2.lined{margin:0 0 1.5em;text-transform:uppercase}.fw_cta h2.lined:after{background:#fff}.fw_cta blockquote,.fw_cta cite,.fw_cta p{margin:0 0 2.25em;color:#fff}.fw_cta .social_wrap{margin-bottom:40px}.fw_cta .social_wrap a{display:inline-block;position:relative;width:44px;height:45px;margin:0 0 0 20px;border:none;background:0 0;text-indent:-9999px;overflow:hidden;vertical-align:middle;transition:all .3s;color:#fff}.fw_cta .social_wrap a.first{margin-left:0}.fw_cta .social_wrap a svg{display:block;position:absolute;left:50%;top:50%;margin:0;width:44px;height:45px;transition:all .2s;transform:translate(-50%,-50%)}.fw_cta .social_wrap a svg .icon{transition:all .3s;fill:#fff}.fw_cta .social_wrap a:hover svg .icon{fill:#ff6e42}.fw_cta .ctas_wrap .btn{margin:0 0 10px 40px}.fw_cta .ctas_wrap .btn:first-of-type{margin-left:0}.logos_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.logos_cont .cont .inner,.logos_cont .logos .inner_content{padding:0 60px}.logos_cont .cont .inner_content{position:relative;padding:60px;background:#eef1fa}.logos_cont .cont .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #eef1fa}.logos_cont .cont.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #eef1fa transparent transparent}.logos_cont .logos_stagger li .logo{float:left;display:inline-block;width:auto;max-width:40%;margin-bottom:20px}.logos_cont .logos_stagger li .logo img{display:block;width:100%}.logos_cont .logos_stagger li:nth-child(even) .logo{float:right}.logos_cont .logos_stagger li:last-of-type .logo{margin-bottom:0}.test_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.test_cont .cont .inner_content,.test_cont .test .inner{padding:0 60px}.test_cont .test .inner_content{position:relative;padding:60px;background:#fff}.test_cont .test .inner_content:after{position:absolute;right:-40px;top:100px;width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #fff}.test_cont .test.flip .inner_content:after{right:auto;left:-40px;border-width:24px 40px 24px 0;border-color:transparent #fff transparent transparent}.test_cont .logos_stagger li .logo{float:left;display:inline-block;width:auto;max-width:40%;margin-bottom:20px}.test_cont .logos_stagger li .logo img,.testimonial .img img{display:block;width:100%}.test_cont .logos_stagger li:nth-child(even) .logo{float:right}.test_cont .logos_stagger li:last-of-type .logo{margin-bottom:0}.testimonial{background:#2b59c3}.testimonial .content_section_inner{padding-top:100px;padding-bottom:160px}.testimonial *{color:#fff}.testimonial h3{margin-bottom:2em}.testimonial blockquote,.testimonial cite{color:#fff}.icon_label_grid .content_section_inner{padding:100px 0 20px}.icon_label_grid h3{color:#000041;text-transform:none;letter-spacing:1px}.icon_label_grid .icons{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top;margin:80px auto 0;width:80%}.icon_label_grid .icons .bucket{width:33.33%;margin:0 auto 80px;padding:0 30px;box-sizing:border-box;text-align:center}.icon_label_grid .icons .icon{display:block;width:120px;height:120px;margin:0 auto 50px;background:center bottom no-repeat;background-size:100% auto}.values_tenets h2.lined_left:after{background:#fff}.values_tenets blockquote,.values_tenets cite,.values_tenets h5,.values_tenets h6,.values_tenets li,.values_tenets p{color:#fff}.values_tenets h3,.values_tenets h4{color:#ff6e42}.values_tenets h5{margin:0 0 .75em}.values_tenets .tenets{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:left;justify-content:left;-ms-flex-align:top;align-items:top;margin:80px 0 0}.values_tenets .tenets .bucket{width:50%;margin:0 0 50px;padding:0;box-sizing:border-box}.values_tenets .tenets .bucket:nth-of-type(even){padding:0 0 0 60px}.values_tenets .tenets .bucket:nth-of-type(odd){padding:0 60px 0 0}.blog_picker h3{color:#000041;text-transform:none;letter-spacing:1px}.blog_picker .featured_posts{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start;margin:80px 0 50px}.blog_picker .item{position:relative;float:left;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#fff}.blog_picker .item:nth-of-type(3n+1){margin-left:0}.blog_picker .item .top{position:relative;z-index:12;background:#fff}.blog_picker .item .top .inner{padding:40px;height:230px;box-sizing:border-box;background:center center no-repeat #2b59c3;background-size:cover}.blog_picker .item .btm{background:0 0;z-index:11}.blog_picker .item .btm .inner{position:relative;padding:30px 40px 80px 20px}.blog_picker .item .btm h4{margin:0 0 .75em;font-weight:400;color:#000;text-transform:none;letter-spacing:0}.blog_picker .item .btm blockquote,.blog_picker .item .btm cite,.blog_picker .item .btm p{margin:0}.blog_picker .item .rm_wrap{position:absolute;left:20px;bottom:20px}.narrow_wys .inner{margin:0 auto;width:70%;max-width:900px}.inline_cta{margin-bottom:40px;width:100%}.inline_cta.test{padding:60px;background:#f2f3f8}.inline_cta.test .meta .headshot{display:inline-block;position:relative;height:114px;width:114px;border-radius:100px;overflow:hidden;border:1px solid #000041;margin:0 auto 40px}.inline_cta.test .meta .headshot img{position:absolute;left:50%;bottom:0;display:block;width:auto;max-height:100%;max-width:100%;transform:translateX(-50%)}.inline_cta.test .meta blockquote,.inline_cta.test .meta cite,.inline_cta.test .meta p{margin:0}.inline_cta.test .quote .inner{padding:0 40px}.inline_cta.test .quote img{display:block;width:50%;max-width:300px;margin:0 0 40px}.inline_cta.test .quote blockquote,.inline_cta.test .quote cite,.inline_cta.test .quote p{margin:0}#success_stories{width:calc(100% - 80px);margin:0 auto;padding:60px 0}#success_stories #alm-filters-ssfilter{padding-right:40px}#success_stories #alm-filters-ssfilter .alm-filter{margin-bottom:20px}#success_stories #alm-filters-ssfilter .alm-filter ul{margin:0;padding:0;list-style:none}#success_stories #alm-filters-ssfilter .alm-filter ul>li{display:none;margin:0;padding:0;list-style:none}#success_stories #alm-filters-ssfilter .alm-filter ul>li:first-of-type{display:block!important}#success_stories #alm-filters-ssfilter .alm-filter ul>li:first-of-type .alm-filter--link.init{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}#success_stories #alm-filters-ssfilter .alm-filter ul>li:first-of-type .alm-filter--link.off{background-color:#ff6e42;background-color:rgba(255,110,66,0)}#success_stories #alm-filters-ssfilter .alm-filter ul>li:last-of-type{margin:0 0 30px}#success_stories #alm-filters-ssfilter .alm-filter ul>li .alm-filter--link{display:block;padding:10px 10px 10px 15px;font-size:1em;color:#000;line-height:1.3em;outline:0;cursor:pointer;background-color:#ff6e42;background-color:rgba(255,110,66,0);transition:all .3s}#success_stories #alm-filters-ssfilter .alm-filter ul>li .alm-filter--link.active,#success_stories #alm-filters-ssfilter .alm-filter ul>li .alm-filter--link:hover{background-color:#ff6e42;background-color:rgba(255,110,66,.15)}#success_stories #alm-filters-ssfilter .alm-filter--title h3{position:relative;margin:0 0 1em;color:#000;font-size:1.22em;font-weight:600;text-transform:none;letter-spacing:0}#success_stories #alm-filters-ssfilter .alm-filter--title h3:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%) rotate(0);transition:all .3s}#success_stories #alm-filters-ssfilter .alm-filter--title h3.open:after{transform:translateY(-50%) rotate(90deg)}#success_stories .alm-btn-wrap{opacity:0;visibility:hidden;text-align:center}#success_stories .alm-btn-wrap .btn{margin:0}#success_stories #success-stories-list .alm-reveal.alm-filters{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}#success_stories #success-stories-list .alm-reveal.alm-filters .ajax-load-more-wrap{width:100%}#success_stories #success-stories-list .item{position:relative;float:left;width:calc(33.3333% - 27px);margin:0 0 40px 40px;z-index:10;background:#f2f3f8}#success_stories #success-stories-list .item:nth-of-type(3n+1){margin-left:0}#success_stories #success-stories-list .item .top{position:relative;z-index:12;box-shadow:0 0 15px rgba(20,25,32,.15);background:#fff}#success_stories #success-stories-list .item .top .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;position:relative;padding:40px;height:230px;box-sizing:border-box}#success_stories #success-stories-list .item .top img{display:block;width:100%}#success_stories #success-stories-list .item .top .vertical{position:absolute;left:0;bottom:5px;display:block;padding:5px;width:100%;font-size:.78em;color:#707070;line-height:1.25em;box-sizing:border-box;text-align:center}#success_stories #success-stories-list .item .btm{background:0 0;z-index:11}#success_stories #success-stories-list .item .btm .inner{position:relative;padding:30px 40px 80px 20px}#success_stories #success-stories-list .item .btm blockquote,#success_stories #success-stories-list .item .btm cite,#success_stories #success-stories-list .item .btm p{margin:0}#success_stories #success-stories-list .item .rm_wrap{position:absolute;left:20px;bottom:20px}.ss_aag .data{padding:0 0 0 40px;border-left:1px solid #707070}.ss_aag .data .results ul{margin:50px 0 0}.ss_aag .data .results .lg_text{margin:0;color:#ff6e42;font-size:2.22em;line-height:1.2em}.ss_aag .data .results .desc{margin:0 0 1.75em}.ss_aag .data .results.four .lg_text{line-height:1.4em;font-size:1.67em}.ss_aag .data .results.four .desc{margin:0 0 1.25em}.ss_aag .data .notes .label{color:#ff6e42}.ss_aag .data .notes ul{margin-top:50px}.ss_aag .data .notes ul li{position:relative;margin:0 0 60px;font-size:1.22em;line-height:1.3em;color:#000}.ss_aag .data .notes ul li:after{position:absolute;left:0;top:calc(100% + 30px);width:35px;height:2px;background:#000041}.ss_aag .icon_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:left;justify-content:left;-ms-flex-align:top;align-items:top}.ss_aag .icon_buckets .bucket{text-align:left;width:33.33%;padding:0 80px 0 0;box-sizing:border-box}.ss_aag .icon_buckets .icon{display:block;width:92px;margin:0 0 30px}.ss_aag .icon_buckets .icon img{display:block;width:100%}.ss_biz_tech_results .list_col h2.lined{margin:0 0 3em}.ss_biz_tech_results .list_col h2.lined_left{margin:0 0 2.5em}.ss_biz_tech_results .list_col .inner_content{padding:0 50px 0 0}.ss_biz_tech_results .results.split{column-count:2;column-gap:60px}.ss_biz_tech_results .results>li{position:relative;margin:0 0 60px;padding:0 0 0 60px}.ss_biz_tech_results .results>li:before{position:absolute;left:0;top:0;width:36px;height:36px;background:url(../../images/list-type-checkmark.svg) center center no-repeat;background-size:cover}.ss_biz_tech_results .results>li:last-of-type{margin:0}.ss_challenges .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_challenges .icon .inner_content{width:100%;padding:0}.ss_challenges .icon img{display:block;width:100%;max-width:200px;margin:0}.ss_challenges .cont .inner{padding:0 100px 0 60px}.ss_challenges .cont .inner_content{position:relative;padding:80px;background:#eef1fa}.ss_challenges .cont .inner_content:after{position:absolute;right:-40px;top:calc(50% - 24px);width:0;height:0;border-style:solid;border-width:24px 0 24px 40px;border-color:transparent transparent transparent #eef1fa}.ss_challenges .cont .inner_content ul{margin-left:0}.ss_challenges .cont .inner_content ul li{color:#000;margin:0 0 1.5em}.ss_cont_rows{text-align:left}.ss_cont_rows .vert_align{margin-bottom:80px}.ss_cont_rows .vert_align.last{margin:0}.ss_cont_rows .vert_align .inner{display:table;height:100%;width:100%}.ss_cont_rows .vert_align .inner_content{display:table-cell;height:100%;width:100%;vertical-align:middle}.ss_cont_rows .vert_align:last-of-type{margin-top:0}.ss_cont_rows .img .vid_cont{border:1px solid #000}.ss_cont_rows .img .img_cont{display:block;min-height:300px;background:center center no-repeat #fff;background-size:cover;border:1px solid #000}.ss_cont_rows .cont .inner_content{padding:0 0 0 80px}.ss_cont_rows .cont .inner_content.flip{padding:0 80px 0 0}.ss_db_reqs .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_db_reqs .icon .inner_content{width:100%;padding:0}.ss_db_reqs .icon img{display:block;width:100%;max-width:200px;margin:0}.ss_db_reqs .cont .inner{padding:0 60px 0 100px}.ss_db_reqs .cont .inner_content{position:relative;padding:80px 100px;background:#eef1fa}.ss_db_reqs .cont .inner_content:after{position:absolute;left:-40px;top:calc(50% - 24px);width:0;height:0;border-style:solid;border-width:24px 40px 24px 0;border-color:transparent #eef1fa transparent transparent}.ss_img_cont .img,.ss_test .test_bg{position:relative}.ss_db_reqs .cont .inner_content ul{margin-left:0}.ss_db_reqs .cont .inner_content ul li{color:#000;margin:0 0 .25em}.ss_img_cont h3{margin:0 0 1em;font-size:2.33em;text-transform:none;letter-spacing:0;color:#000041}#hero_alt h1,h2{letter-spacing:4px}h3,h4{letter-spacing:3px}.ss_img_cont h3 a{text-decoration:underline;color:#2b59c3}.ss_img_cont h3 a:hover{color:#ff6e42;text-decoration:none}.ss_img_cont .vert_align .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;height:100%}.ss_img_cont .cont .inner_content{padding:0 60px}.ss_img_cont .img .inner_content{position:relative;margin:0 auto;z-index:15}.ss_img_cont .img img{display:block;width:100%}.ss_tech_results .metric_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top}.ss_tech_results .metric_buckets .bucket{width:25%;padding:0 10px;box-sizing:border-box;text-align:center}.ss_tech_results .metric_buckets .lg_text{margin:0 0 .5em;font-size:3.33em;color:#000041;line-height:1;font-variant:small-caps}.ss_test{padding:100px 0}.ss_test .test_bg{padding:100px 44px 160px;border:1px dashed #000041;background:#eef1fa}.ss_test .test_bg .cites_cont,.ss_test .test_bg:before{position:absolute;left:50%;transform:translate(-50%,-50%)}.ss_test .test_bg:before{top:0;width:108px;height:108px;padding-right:15px;border-radius:60px;border:1px dashed #000041;background:#fff;font-size:6.67em;line-height:154px;text-align:center;font-style:italic;color:#000041;box-sizing:border-box;content:'“'}.ss_test .test_bg .cite,.ss_test .test_bg .quote{padding:0 56px}.ss_test .test_bg .quote.single{text-align:center}.ss_test .test_bg .quote blockquote,.ss_test .test_bg .quote cite,.ss_test .test_bg .quote p{margin:0;font-size:1.33em;line-height:1.5em;font-style:italic}.ss_test .test_bg .cites_cont{top:100%;width:calc(100% - 88px)}.ss_test .test_bg .cite .inner{padding:30px 70px;border:1px solid #000;background:#fff}.ss_test .test_bg .cite .inner_content{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.ss_test .test_bg .cite .headshot{width:112px;height:112px;margin:0 30px 0 0;border-radius:60px;overflow:hidden;border:2px solid #ff6e42;background:center center no-repeat #fff;background-size:cover}.ss_test .test_bg .cite blockquote,.ss_test .test_bg .cite cite,.ss_test .test_bg .cite p{margin:0;font-weight:700}.ss_test .test_bg .cite blockquote span,.ss_test .test_bg .cite cite span,.ss_test .test_bg .cite p span{display:block;font-weight:400}.ss_yb_solution h2.lined{margin-bottom:2em}.ss_yb_solution .icon_buckets{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:top;align-items:top}.ss_yb_solution .icon_buckets .bucket{width:25%;padding:0 10px;box-sizing:border-box;text-align:center}.ss_yb_solution .icon_buckets .icon{display:block;width:112px;margin:0 auto 20px}.ss_yb_solution .icon_buckets .icon img{display:block;width:100%}* ::selection{background:#ff6e42}hr{height:1px;background:#2b59c3;border:none;margin:24px 0}a{text-decoration:none;transition:all .3s;color:#2b59c3}a:hover{color:#ff6e42}h1,h2,h3,h4,h5,h6{margin:0 0 .5em;font-weight:400;line-height:1.25em;color:#2b59c3}h2,h3{color:#ff6e42;line-height:1.25em;text-transform:uppercase;font-family:"Source Sans Pro",sans-serif}h1.large_margin,h2.large_margin,h3.large_margin,h4.large_margin,h5.large_margin,h6.large_margin{margin:0 0 1em}h1{font-family:"Source Sans Pro",sans-serif;font-size:3.89em;line-height:1.05em}h1.midlong{font-size:2.78em}h1.long{font-size:2.22em}#hero_ss h1{font-size:1.78em;line-height:1.375em}h2{font-size:2em;font-weight:400}h2.lined,h2.lined_left{position:relative;margin-bottom:1.5em}h2.lined:after,h2.lined_left:after{position:absolute;left:50%;top:calc(100% + 20px);width:75px;height:2px;background:#000041;content:'';transform:translateX(-50%)}h2.lined_left:after{left:0;transform:none}h3.lined:after,h4.lined:after,h4.lined_left:after{left:50%;width:75px;height:2px;background:#000041;transform:translateX(-50%);content:''}h3{font-size:1.5em}h3.lined{position:relative;margin-bottom:1.5em}h3.lined:after{position:absolute;top:calc(100% + 20px)}h4{margin:0 0 .5em;color:#000;font-family:"Source Sans Pro",sans-serif;font-size:1.22em;line-height:1.45em;font-weight:600;text-transform:uppercase}b,h5,strong{font-weight:700}h4.lined,h4.lined_left{position:relative;margin-bottom:1.5em}h5,h6{margin:0;font-size:1em}h4.lined:after,h4.lined_left:after{position:absolute;top:calc(100% + 12px)}h4.lined_left:after{left:0;transform:none}h5{}sub,sup{vertical-align:baseline;position:relative;top:-.55em;line-height:0;font-size:60%}sub{top:.55em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg p{font-size:1em}.wysiwyg blockquote .btn,.wysiwyg cite .btn,.wysiwyg p .btn{margin-bottom:0!important}.wysiwyg ol,.wysiwyg ul{margin:1em 0 1.56em 20px;list-style:decimal}.wysiwyg ul{padding:0;list-style:disc}.wysiwyg ol li,.wysiwyg ul li{display:list-item;margin-bottom:.25em;font-size:1em;line-height:1.45em;color:#707070}.wysiwyg .special_ol li,ol li{display:block}.wysiwyg ol li{list-style:decimal}.wysiwyg ul li{position:relative;list-style:none}.wysiwyg ul li:before{position:absolute;left:-20px;top:.5em;width:8px;height:8px;content:'';border-radius:4px;background:#2b59c3}.wysiwyg a{text-decoration:underline;color:#2b59c3}.wysiwyg a:hover{color:#ff6e42}.wysiwyg .btn a:hover,.wysiwyg a.btn:hover{color:#fff}.wysiwyg blockquote:last-of-type span.intro,.wysiwyg cite:last-of-type span.intro,.wysiwyg p:last-of-type span.intro,.wysiwyg.plast blockquote:last-of-type,.wysiwyg.plast cite:last-of-type,.wysiwyg.plast p:last-of-type{margin:0}.wysiwyg.plast blockquote:first-of-type,.wysiwyg.plast cite:first-of-type,.wysiwyg.plast p:first-of-type{margin-bottom:1.56em!important}blockquote,cite,p,p.cite{margin-bottom:1.56em;line-height:1.56em}blockquote,blockquote.cite,cite,cite.cite,p.cite{font-size:1.4em;line-height:1.5em;font-style:italic;color:#000}blockquote b,blockquote strong,cite b,cite strong,p b,p strong,p.cite b,p.cite strong{font-family:"Source Sans Pro",sans-serif}em,i{font-style:italic}blockquote{position:relative;font-weight:400;margin:0 0 2em;padding:0;border:none;text-align:left}blockquote blockquote,blockquote cite,blockquote p,blockquote p.cite{margin:0}.wysiwyg blockquote{margin:0 0 2em;padding:0}blockquote.cite,cite,cite.cite,p.cite{font-weight:700;margin-bottom:1.56em}.wysiwyg blockquote.cite,.wysiwyg cite,.wysiwyg cite.cite,.wysiwyg p.cite{margin:0}.wysiwyg .special_ol>li:before,ol>li:before{content:counters(item,".") ". ";margin-right:100%;right:10px}blockquote.cite span,cite span,cite.cite span,p.cite span{display:block;font-weight:400}img{vertical-align:bottom}.wysiwyg img{max-width:100%;height:auto}.screen-reader-text{clip:rect(1px,1px,1px,1px);position:absolute;top:10px;left:10px;font-family:"Source Sans Pro",sans-serif;font-size:.89em;font-weight:400;color:#2b59c3;z-index:10000;transition:opacity .2s}.play_btn,.play_btn:after{transition:all .3s;position:absolute}.site-navigation .screen-reader-text{left:auto;right:10px}.screen-reader-text:focus{clip:auto;opacity:1}.wysiwyg .tab_indent_wrap{padding-left:36px}.wysiwyg .special_ol>li{position:relative;counter-increment:item}.wysiwyg .special_ol>li:before{position:absolute}ol>li{counter-increment:item;position:relative}ol>li:before{position:absolute}@media only screen and (max-width:767px){h1{font-size:2.44em}h1.midlong{font-size:1.75em}h1.long{font-size:1.4em}h2{font-size:2.22em}#related_products h2.lined,.feat_prods h2.lined{margin-bottom:.5em}h3{font-size:1.56em}h4{font-size:1.22em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg ol,.wysiwyg p,.wysiwyg ul{font-size:.89em}blockquote.cite,cite,cite.cite,p.cite{font-size:1em}blockquote,cite,p,p.cite{font-size:.89em}}@media screen and (min-width:768px) and (max-width:1024px){h1{font-size:3em}h1.midlong{font-size:2.25em}h1.long{font-size:1.75em}h2{font-size:2.44em}h3{font-size:1.78em}.wysiwyg blockquote,.wysiwyg cite,.wysiwyg ol,.wysiwyg p,.wysiwyg ul{font-size:.89em}blockquote.cite,cite,cite.cite,p.cite{font-size:1em}blockquote,cite,p,p.cite{font-size:.89em}}@media print{@page{margin:.5in}*{-webkit-print-color-adjust:exact;print-color-adjust:exact;outline:0}body,html{color:#000!important;background:#fff!important;width:7.5in!important;overflow:hidden;margin:0;padding:0}.bg-img,blockquote,img,pre,table{page-break-inside:avoid}dl,ol,ul{page-break-before:avoid}}.btn a,.wp-block-button__link,a span.btn,a.btn,button.btn,button.gpnf-add-entry,input[type=image],input[type=submit],input[type=button]{display:inline-block;position:relative;margin:0 0 1.67em;padding:10px 20px;width:auto;background:#ff6e42!important;font-family:"Source Sans Pro",sans-serif;font-size:1.25em;font-weight:600;font-style:normal;line-height:1.4em!important;color:#fff!important;border:2px solid #ff6e42;border-radius:100px;text-decoration:none!important;text-transform:none;box-sizing:border-box;text-align:center;-webkit-appearance:none;transition:all .3s;cursor:pointer}#hero h1,#hero_alt h1{text-transform:uppercase}.btn a.offset,.wp-block-button__link.offset,a span.btn.offset,a.btn.offset,button.btn.offset,button.gpnf-add-entry.offset,input[type=image].offset,input[type=submit].offset,input[type=button].offset{margin-left:20px}.btn a.outline,.wp-block-button__link.outline,a span.btn.outline,a.btn.outline,button.btn.outline,button.gpnf-add-entry.outline,input[type=image].outline,input[type=submit].outline,input[type=button].outline{background:0 0!important;color:#ff6e42!important}.btn a.small,.wp-block-button__link.small,a span.btn.small,a.btn.small,button.btn.small,button.gpnf-add-entry.small,input[type=image].small,input[type=submit].small,input[type=button].small{padding:5px 10px;font-size:.9em}.btn a.sq,.wp-block-button__link.sq,a span.btn.sq,a.btn.sq,button.btn.sq,button.gpnf-add-entry.sq,input[type=image].sq,input[type=submit].sq,input[type=button].sq{padding-right:40px;border-radius:0;border:2px solid #000041;background:0 0!important;color:#000041!important}.btn a.sq:after,.wp-block-button__link.sq:after,a span.btn.sq:after,a.btn.sq:after,button.btn.sq:after,button.gpnf-add-entry.sq:after,input[type=image].sq:after,input[type=submit].sq:after,input[type=button].sq:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translateY(-50%)}.btn a.sq:hover,.wp-block-button__link.sq:hover,a span.btn.sq:hover,a.btn.sq:hover,button.btn.sq:hover,button.gpnf-add-entry.sq:hover,input[type=image].sq:hover,input[type=submit].sq:hover,input[type=button].sq:hover{background:#000041!important;color:#ff6e42!important;border-color:#000041!important}.btn a:hover,.wp-block-button__link:hover,a span.btn:hover,a.btn:hover,button.btn:hover,button.gpnf-add-entry:hover,input[type=image]:hover,input[type=submit]:hover,input[type=button]:hover{color:#fff!important;border-color:#2b59c3!important;background:#2b59c3!important;text-decoration:none!important}input[type=submit]:focus,input[type=button]:focus{outline:0}.btn a.disabled,.btn a.disabled:hover,.wp-block-button__link.disabled,.wp-block-button__link.disabled:hover,a.btn.disabled,a.btn.disabled:hover,button.btn:disabled,button.btn:disabled:hover,button.gpnf-add-entry:disabled,button.gpnf-add-entry:disabled:hover,input[type=image]:disabled,input[type=image]:disabled:hover,input[type=submit]:disabled,input[type=submit]:disabled:hover,input[type=button]:disabled,input[type=button]:disabled:hover{cursor:default;color:#fff!important;background:#eef1fa!important;border-color:#eef1fa!important}.play_btn{display:block;left:50%;top:50%;margin:-48px 0 0 -48px;width:96px;height:96px;border-radius:48px;background:rgba(255,255,255,.8);opacity:1;visibility:visible;z-index:20;cursor:pointer}.play_btn.off,.slick-loading .slick-slide,.slick-loading .slick-track{visibility:hidden}.play_btn:after{left:23px;top:29px;margin:0;width:46px;height:38px;line-height:38px;text-align:center;color:#ff6e42;font-family:dashicons;content:'\f522';font-size:58px}#hero h1:after,#hero h1:before,#hero:before,#hero_alt:before,.read_more:after{content:''}.play_btn:hover{background:#fff}.play_btn:hover:after{color:#2b59c3}.play_btn.off{opacity:0}#header_cta,#header_cta_mobile{float:right;margin:18px 0 0 48px;padding:3px 15px;line-height:33px!important}#header_cta_mobile{float:left;margin:18px 0 0}.read_more{display:inline-block;position:relative;padding-right:40px;text-decoration:none;font-size:1.67em;line-height:1.333em;font-weight:600;color:#000041}.read_more:after{position:absolute;right:20px;top:calc(50% + 2px);width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;transform:translateY(-50%)}.wp-block-buttons{width:100%;max-width:1360px;margin-right:auto;margin-left:auto}.wp-block-buttons .wp-block-button{margin-bottom:0;margin-right:20px}.wp-block-buttons .wp-block-button:last-child{margin-right:0}.wp-block-button__link{border-radius:0}@media screen and (max-width:990px){#header_cta{display:none}#header_cta_mobile{display:inline-block}}#search_container,#search_container_mobile{float:right;width:220px;height:40px;margin:18px 0 0;border-radius:50px;border:1px solid #fff}#search_container form.search-form,#search_container_mobile form.search-form{width:100%;height:100%}#search_container label,#search_container_mobile label{float:left;width:calc(100% - 40px);height:100%;border-radius:50px;overflow:hidden}#search_container label input.search-field,#search_container_mobile label input.search-field{width:100%;height:100%;border:none;margin:0;padding:0 15px;box-sizing:border-box;font-size:.8em;font-weight:400;line-height:40px;background:0 0;color:#fff;-webkit-appearance:none}#search_container label input.search-field::-webkit-search-cancel-button,#search_container_mobile label input.search-field::-webkit-search-cancel-button{-webkit-appearance:none}#search_container label input.search-field::-ms-clear,#search_container_mobile label input.search-field::-ms-clear{display:none}#search_container button[type=submit]:focus,#search_container input:focus,#search_container_mobile button[type=submit]:focus,#search_container_mobile input:focus{outline:0}#search_container .search-submit,#search_container_mobile .search-submit{float:right;position:relative;width:40px;height:40px;margin:0;padding:0;border:none;box-shadow:none;background:0 0;text-indent:-9999px;overflow:hidden;cursor:pointer;border-radius:0 20px 20px 0}table td,table th,table tr{border-left:1px solid #707070}table td,table th,table tr:nth-child(even) td{background:#eef1fa}#search_container .search-submit:focus,#search_container_mobile .search-submit:focus{outline:0}#search_container .search-submit svg,#search_container_mobile .search-submit svg{display:block;position:absolute;left:10px;top:7px;width:20px;transition:all .2s}#search_container .search-submit svg #search-mag-glass,#search_container_mobile .search-submit svg #search-mag-glass{transition:all .2s;fill:#fff}#search_container .search-submit:hover svg #search-mag-glass,#search_container_mobile .search-submit:hover svg #search-mag-glass{fill:#ff6e42}#search_container ::-webkit-input-placeholder,#search_container_mobile ::-webkit-input-placeholder{color:#fff}#search_container :-moz-placeholder,#search_container_mobile :-moz-placeholder{color:#fff}#search_container ::-moz-placeholder,#search_container_mobile ::-moz-placeholder{color:#fff}#search_container :-ms-input-placeholder,#search_container_mobile :-ms-input-placeholder{color:#fff}#search_container_mobile{display:none;float:left;margin-left:20px}@media screen and (max-width:990px){#search_container{display:none}#search_container_mobile{display:block}}table{border-collapse:collapse;border-spacing:0;width:100%;margin:1em 0;border:1px solid #707070;border-top:none;table-layout:auto}table td,table th{padding:1em}table th{background:#fff}table tr{border-top:1px solid #707070}table td:first-of-type{width:40%!important}.wysiwyg table{border:1px solid #eef1fa;border-top:none;table-layout:auto}.wysiwyg table td,.wysiwyg table th{border-left:1px solid #eef1fa;padding:1em;background:#fff}.wysiwyg table td:first-of-type,.wysiwyg table th:first-of-type{width:auto!important}.wysiwyg table tr{border-top:1px solid #eef1fa;border-left:1px solid #eef1fa}.wysiwyg table tr:nth-child(even) td{background:#fff}.wysiwyg table tr:first-of-type td{background:#eef1fa;font-weight:700;text-transform:uppercase}.wptb-shortcode-container.wptb-ph-element{position:absolute;top:0;right:0;bottom:0;left:0}.wptb-shortcode-container.wptb-ph-element wptb_shortcode_container_element>div{height:100%;width:100%}.content_section.ybtable .wptb-image-wrapper img{width:auto!important;display:block;margin:0 auto}.info_tip{position:absolute;right:10px;top:50%;width:22px;height:22px;border-radius:11px;margin-top:-10px;background:url(../../images/info-tip-icon.svg) center center no-repeat #fff;background-size:cover;z-index:10}.info_tip:hover .tip{display:block}.info_tip .tip{display:none;position:absolute;left:calc(100% + 5px);top:-30px;width:400px;height:auto;border:1px solid #707070;background:#fff;z-index:10000}#hero,#hero_alt{background-color:#2b59c3;background-position:center center;background-size:cover}#hero,#hero_alt,#hero_ss{background-repeat:no-repeat}.info_tip .tip .inner{display:block;padding:18px 24px;color:#000;line-height:1.45em;font-size:.9em}#hero_alt{position:relative;height:290px;min-height:290px;z-index:15}#hero_alt:before{position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1}#hero_alt .content_section_inner{position:relative;width:calc(100% - 80px);max-width:1360px;height:100%;min-height:290px;z-index:10;text-align:left}#hero_alt .inner{position:absolute;left:50%;top:50%;width:70%;max-width:900px;transform:translate(-50%,-50%)}#hero_alt h1{display:block;width:50%;margin-bottom:0;font-size:2em;line-height:1.11em;font-family:"Source Sans Pro",sans-serif;font-weight:400;color:#ff6e42}#hero_alt .subheading{margin:0;font-size:1.22em;color:#fff}#hero blockquote a,#hero cite a,#hero h1,#hero p a,#hero_ss blockquote a,#hero_ss cite a,#hero_ss p a{color:#ff6e42}#hero blockquote a:hover,#hero cite a:hover,#hero p a:hover,#hero_ss blockquote a:hover,#hero_ss cite a:hover,#hero_ss p a:hover{color:#2b59c3}#hero{position:relative;height:520px;min-height:520px;z-index:15}#hero:before{position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1}#hero .content_section_inner{position:relative;width:calc(100% - 80px);max-width:1360px;height:100%;min-height:520px;z-index:10;text-align:center}#hero .inner,#hero h1:after,#hero h1:before{position:absolute;left:50%}#hero .inner{top:50%;width:60%;transform:translate(-50%,-50%)}#hero h1{position:relative;display:inline-block;margin:0 0 120px;padding:10px 20px;font-size:3.5em;font-weight:400;letter-spacing:.1em;border:2px solid #fff}#hero blockquote,#hero cite,#hero p,#hero_ss blockquote,#hero_ss cite,#hero_ss p{font-size:1.1em;color:#fff}#hero h1:before{top:100%;margin-left:-1px;width:2px;height:90px;background:#fff}#hero h1:after{top:calc(100% + 90px);margin-left:-6px;width:12px;height:12px;background:#fff;border-radius:6px}#hero_ss,.slick-list,.slick-slider,.slick-track{position:relative}#hero .cta_group .btn{margin:0 0 0 40px}#hero .cta_group .btn:first-of-type{margin:0}#hero_ss{height:520px;min-height:520px;background-color:#000041;background-position:right center;background-size:auto 100%;z-index:15}#hero_ss .content_section_inner{position:relative;height:100%;min-height:520px;z-index:10;text-align:left}#hero_ss .inner{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:left;justify-content:left;width:60%;height:100%}#hero_ss .ss_logo{display:block;margin:0 0 2em;max-width:225px}#hero_ss h1{margin:0 0 2em;color:#fff}#hero_ss .cta_group .btn{margin:0 0 0 40px}#hero_ss .cta_group .btn:first-of-type{margin:0}.slick-slider{display:block;box-sizing:border-box;-webkit-touch-callout:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;display:block;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-dots li,.slick-dots li button{cursor:pointer;height:20px;width:20px}.slick-slider .slick-list,.slick-slider .slick-track{transform:translate3d(0,0,0)}.slick-track{left:0;top:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{content:"";display:table}.slick-slide{float:left;height:100%;min-height:1px;display:none}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.slick-dots,.slick-next,.slick-prev{position:absolute;display:block;padding:0}.slick-loading .slick-list{background:url(../../images/loading.svg) center center no-repeat #fff}.slick-next,.slick-prev{height:20px;width:20px;line-height:0;font-size:0;cursor:pointer;background:0 0;color:transparent;top:50%;transform:translate(0,-50%);border:none;outline:0}.slick-next:focus,.slick-next:hover,.slick-prev:focus,.slick-prev:hover{outline:0;background:0 0;color:transparent}.slick-next:focus:before,.slick-next:hover:before,.slick-prev:focus:before,.slick-prev:hover:before{color:#2b59c3}.slick-next.slick-disabled:before,.slick-prev.slick-disabled:before{opacity:.25}.slick-next:before,.slick-prev:before{position:absolute;top:50%;margin:-9px;width:20px;height:18px;line-height:18px;text-align:center;color:#ff6e42;font-family:dashicons;content:'\f522';font-size:26px;text-indent:0;transition:all .3s}.slick-prev{left:-40px}[dir=rtl] .slick-prev{left:auto;right:-40px}.slick-prev:before{transform:rotate(180deg)}.slick-next{right:-40px}[dir=rtl] .slick-next{left:-40px;right:auto}.slick-dotted.slick-slider{margin-bottom:30px}.slick-dots{bottom:-25px;list-style:none;text-align:center;margin:0;width:100%}.slick-dots li{position:relative;display:inline-block;margin:0 5px;padding:0}.slick-dots li button{border:0;background:0 0;display:block;outline:0;line-height:0;font-size:0;color:transparent;padding:5px}.slick-dots li button:focus,.slick-dots li button:hover{outline:0}.slick-dots li button:focus:before,.slick-dots li button:hover:before{opacity:1}.slick-dots li button:before{position:absolute;top:0;left:0;content:"•";width:20px;height:20px;font-family:slick;font-size:6px;line-height:20px;text-align:center;color:#000;opacity:.25;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}#primary-navigation .nav-menu ul li a,#primary-navigation .nav-menu>li a,#primary-navigation-mobile .nav-menu>li>a{font-family:"Source Sans Pro",sans-serif}.slick-dots li.slick-active button:before{color:#000;opacity:.75}.img_gallery_slider{margin:40px 0 0;height:330px}.img_gallery_slider *{box-sizing:border-box}.img_gallery_slider li{position:relative;height:330px;overflow:hidden;background:0 0;z-index:1000}.img_gallery_slider li>.inner{display:block;width:100%;height:100%;padding:0 5px;text-decoration:none}.img_gallery_slider li img{height:100%}.clearfix:after,.clearfix:before{content:"";display:table}.flexrow{display:-ms-flexbox;display:flex}.flexrow .flex_i{-ms-flex-positive:1;flex-grow:1}.flexrow .flex_i+.flex_i{margin-left:5%}.alignleft,.alignright{float:none;width:100%;max-width:100%;height:auto}.aligncenter,.alignnone{width:auto;max-width:100%;height:auto;text-align:center}figure{display:block;width:100%;margin:0 auto 1.67em}figure.wp-caption{margin-bottom:10px}figcaption{text-align:left;font-size:.78em;line-height:1.4em;font-style:italic;color:#666}iframe{max-width:100%!important}.vid_cont{position:relative;background-color:transparent;background-repeat:no-repeat;background-position:center center;background-size:cover;z-index:10}.video_container{position:relative;padding-bottom:62.5%;margin:0;width:100%;height:0;opacity:1;visibility:visible;overflow:hidden;transition:opacity .3s}.video_container.off{opacity:0;visibility:hidden}.video_container embed,.video_container iframe,.video_container object{position:absolute;top:0;left:0;width:100%;height:100%}.to_cols_3{column-count:3;column-gap:74px}.to_cols_3>li{list-style-position:inside}.pos_rel{position:relative!important}.float_left{float:left!important}.float_right{float:right!important}.of_hidden{overflow:hidden!important}.nomargin{margin:0!important}.nomargin_top{margin-top:0!important}.nomargin_bottom{margin-bottom:0!important}.large_margin_bottom{margin-bottom:60px!important}.tall_pad{padding-top:100px!important;padding-bottom:100px!important}.short_pad{padding-top:30px!important;padding-bottom:30px!important}.nopadding_tb,.nopadding_top{padding-top:0!important}.nopadding_bottom,.nopadding_tb{padding-bottom:0!important}.nopadding{padding:0!important}.nopadding_lr{padding-left:0!important;padding-right:0!important}.small_padding_bottom{padding-bottom:30px!important}.large_padding_bottom{padding-bottom:100px!important}.small_padding_top{padding-top:30px!important}.large_padding_top{padding-top:100px!important}.nobullets{list-style:none!important}.upper{text-transform:uppercase!important}.lower{text-transform:none!important}.centered{text-align:center!important}.lefted{text-align:left!important}.righted{text-align:right!important}.blockit{display:block!important}.flex_vert_cent{display:-ms-flexbox!important;display:flex!important;-ms-flex-align:center!important;align-items:center!important}.width_cap{max-width:1008px}.show_on_mobile{display:none!important}.hide_on_mobile{display:block!important}.show_on_tablet{display:none!important}.hide_on_tablet{display:block!important}@media only screen and (max-width:767px){.flexrow{display:-ms-flexbox;display:flex}.flexrow.noflex_m{display:block}.flexrow.noflex_m .flex_i+.flex_i{margin-left:0}.to_cols_3{column-count:1}.show_on_mobile{display:block!important}.hide_on_mobile{display:none!important}}@media only screen and (min-width:768px) and (max-width:1024px){.show_on_tablet{display:block!important}.hide_on_tablet{display:none!important}.nopadding_tablet{padding:0!important}}#primary-navigation{float:left;position:relative;width:calc(100% - 200px);margin-left:24px;padding:0;box-sizing:border-box}#primary-navigation .nav-menu{position:relative;margin:0;padding:0;list-style:none;text-align:left}#primary-navigation .nav-menu>li{position:relative;display:inline-block;margin:0 0 0 -4px;transition:all .3s ease 0s;vertical-align:top;text-align:left}#primary-navigation .nav-menu>li a{display:block;position:relative;padding:0 24px;line-height:80px;font-size:1em;font-weight:600;color:#fff;text-transform:none;text-align:center;transition:all .3s;text-decoration:none;border-radius:0}#primary-navigation .nav-menu>li a:hover,#primary-navigation .nav-menu>li.current-menu-ancestor>a,#primary-navigation .nav-menu>li.current-menu-item>a,#primary-navigation .nav-menu>li.current-page-ancestor>a,#primary-navigation .nav-menu>li.current-post-ancestor>a,#primary-navigation .nav-menu>li:focus>a,#primary-navigation .nav-menu>li:hover>a{color:#ff6e42}#primary-navigation .nav-menu>li:focus .sub-menu,#primary-navigation .nav-menu>li:hover .sub-menu{left:0;margin-top:0}#primary-navigation .nav-menu>li.flip:focus .sub-menu,#primary-navigation .nav-menu>li.flip:hover .sub-menu{left:auto;right:0}#primary-navigation .nav-menu ul{position:absolute;top:100%;left:-999em;width:auto;min-width:100%;margin:0;background:#000041;padding:0;z-index:1000;box-sizing:border-box}#primary-navigation .nav-menu ul li{position:relative;display:block;margin:0;background:#000041;overflow:hidden}#primary-navigation .nav-menu ul li a{display:block;width:100%;box-sizing:border-box;vertical-align:middle;line-height:1.3em;font-weight:400;height:auto;padding:15px 24px;color:#fff;background:0 0!important;border-top:1px solid #fff;white-space:nowrap;transition:all .3s;text-align:left;border-radius:0;text-decoration:none}#primary-navigation .nav-menu ul li a.active,#primary-navigation .nav-menu ul li a:hover,#primary-navigation .nav-menu ul li.current-menu-ancestor a,#primary-navigation .nav-menu ul li.current-menu-item a,#primary-navigation .nav-menu ul li.current-page-ancestor a,#primary-navigation .nav-menu ul li.current-post-ancestor a,.nav-menu li:focus #primary-navigation .nav-menu ul li a,.nav-menu li:hover #primary-navigation .nav-menu ul li a{color:#ff6e42}#primary-navigation-mobile{width:100%;padding:0}#primary-navigation-mobile .nav-menu{list-style:none;margin:0;padding:30px 0}#primary-navigation-mobile .nav-menu>.menu-item-has-children>a{width:calc(100% - 42px);padding-right:0}#primary-navigation-mobile .nav-menu>.menu-item-has-children>.toggle{display:inline-block;border:none;background:0 0}#primary-navigation-mobile .nav-menu>li{margin:0 0 10px;border:none}#primary-navigation-mobile .nav-menu>li>a{position:relative;display:inline-block;vertical-align:top;width:100%;font-size:1.5em;font-weight:600;border:none;padding:7px 50px 7px 0;color:#fff;transition:all .3s}#primary-navigation-mobile .nav-menu>li>a:hover{color:#ff6e42}#primary-navigation-mobile .nav-menu>li>.toggle{position:relative;display:none;width:40px;padding:0;height:40px;background:0 0;text-indent:-9999px;overflow:hidden;text-align:left;outline:0;transition:all .3s}#primary-navigation-mobile .nav-menu>li>.toggle:after{position:absolute;left:50%;top:50%;width:0;height:0;border-style:solid;border-width:6px 0 6px 10px;border-color:transparent transparent transparent #ff6e42;content:'';transform:translate(-50%,-50%);transition:all .3s}#primary-navigation-mobile .nav-menu>li>.toggle>span{display:block;padding:100px 0 0}#primary-navigation-mobile .nav-menu>li>.toggle:hover{transform:rotate(90deg)}#primary-navigation-mobile .nav-menu ul{display:none;list-style:none;width:100%;margin:0;padding:6px 15px;background:0 0;border-top:none}#primary-navigation-mobile .nav-menu ul li a{display:block;font-weight:400;font-size:1.22em;color:#fff;text-transform:none;line-height:1.2em;margin:0;padding:5px 0;transition:all .3s ease 0s}#primary-navigation-mobile .nav-menu ul li a:hover,#primary-navigation-mobile .nav-menu ul li.current-menu-ancestor a,#primary-navigation-mobile .nav-menu ul li.current-menu-item a,#primary-navigation-mobile .nav-menu ul li.current-page-ancestor a,#primary-navigation-mobile .nav-menu ul li.current-post-ancestor a,#primary-navigation-mobile .nav-menu ul li.current_page_ancestor a,#primary-navigation-mobile .nav-menu ul li.current_page_parent a{color:#ff6e42}#primary-navigation-mobile .nav-menu ul li>.toggle{display:none}#primary-navigation-mobile .nav-menu .current-menu-ancestor a:before,#primary-navigation-mobile .nav-menu .current-menu-item a:before,#primary-navigation-mobile .nav-menu .current-page-ancestor a:before,#primary-navigation-mobile .nav-menu .current-post-ancestor a:before,#primary-navigation-mobile .nav-menu .current_page_ancestor a:before,#primary-navigation-mobile .nav-menu .current_page_parent a:before{width:100%}@media only screen and (max-width:990px){#primary-navigation{display:none}#primary-navigation-mobile{display:block}}@media screen and (min-width:768px) and (max-width:990px){#primary-navigation-mobile .nav-menu>li a:after{left:-80px}}#content article>a,#content article>blockquote,#content article>cite,#content article>h1,#content article>h2,#content article>h3,#content article>h4,#content article>h5,#content article>h6,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{width:calc(100% - 160px);max-width:1200px;margin-right:auto;margin-left:auto}#content article>a,#content article>blockquote,#content article>cite,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{padding-right:28%;box-sizing:border-box}#content article .wp-block-columns{display:-ms-flexbox;display:flex;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:calc(100% - 160px);max-width:1200px;margin:0 auto;padding:0 0 80px}#content article .wp-block-columns .wp-block-column:first-child{padding-right:10%}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:20px}@media screen and (max-width:767px){#content article>a,#content article>blockquote,#content article>cite,#content article>h1,#content article>h2,#content article>h3,#content article>h4,#content article>h5,#content article>h6,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{width:calc(100% - 40px)}#content article>a,#content article>blockquote,#content article>cite,#content article>hr,#content article>ol,#content article>p,#content article>span,#content article>ul{padding-right:0}#content article .wp-block-columns{display:block;width:calc(100% - 40px);padding:0 0 40px}#content article .wp-block-columns .wp-block-column:first-child{padding-right:0}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:0}}@media only screen and (min-width:768px) and (max-width:900px){#content article .wp-block-columns{display:block;width:calc(100% - 160px);padding:0 0 40px}#content article .wp-block-columns .wp-block-column:first-child{margin-bottom:40px;padding-right:0}#content article .wp-block-columns .wp-block-column:not(:first-child){margin-left:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
